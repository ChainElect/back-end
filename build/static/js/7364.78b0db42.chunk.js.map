{"version":3,"file":"static/js/7364.78b0db42.chunk.js","mappings":"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","sources":["../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/acala.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/formatter.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/transaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/block.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/log.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/transactionReceipt.ts","../node_modules/@web3-onboard/common/node_modules/viem/op-stack/formatters.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/address.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/lru.ts","../node_modules/@web3-onboard/common/node_modules/@noble/hashes/src/_assert.ts","../node_modules/@web3-onboard/common/node_modules/@noble/hashes/src/_u64.ts","../node_modules/@web3-onboard/common/node_modules/@noble/hashes/src/utils.ts","../node_modules/@web3-onboard/common/node_modules/@noble/hashes/src/sha3.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/address/getAddress.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/hash/keccak256.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/address/isAddress.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/data/concat.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/cursor.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/cursor.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/encoding/toRlp.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/unit/formatGwei.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/transaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/blobsToCommitments.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/blobsToProofs.ts","../node_modules/@web3-onboard/common/node_modules/@noble/hashes/src/_sha2.ts","../node_modules/@web3-onboard/common/node_modules/@noble/hashes/src/sha256.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/hash/sha256.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/commitmentToVersionedHash.ts","../node_modules/@web3-onboard/common/node_modules/viem/constants/blob.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/blob.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/toBlobSidecars.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/toBlobs.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/chain.ts","../node_modules/@web3-onboard/common/node_modules/viem/errors/node.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/data/slice.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/transaction/assertTransaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/transaction/serializeAccessList.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/transaction/serializeTransaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/transaction/getTransactionType.ts","../node_modules/@web3-onboard/common/node_modules/viem/constants/kzg.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/blob/commitmentsToVersionedHashes.ts","../node_modules/@web3-onboard/common/node_modules/viem/op-stack/serializers.ts","../node_modules/@web3-onboard/common/node_modules/viem/op-stack/chainConfig.ts","../node_modules/@web3-onboard/common/node_modules/viem/op-stack/contracts.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/ancient8.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/ancient8Sepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/anvil.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/apexTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/arbitrum.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/arbitrumGoerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/arbitrumNova.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/astar.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/astarZkEVM.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/astarZkyoto.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/arbitrumSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/areonNetwork.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/areonNetworkTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/aurora.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/auroraTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/auroria.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/avalanche.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/avalancheFuji.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bahamut.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/base.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/baseGoerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/baseSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/beam.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/beamTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bearNetworkChainMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bearNetworkChainTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/berachainTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bevmMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bitTorrent.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bitTorrentTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/blast.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/blastSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bob.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/boba.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bronos.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bronosTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bsc.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bscTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bscGreenfield.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/btr.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/btrTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bxn.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/bxnTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/canto.ts","../node_modules/@web3-onboard/common/node_modules/viem/celo/fees.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/formatters/transactionRequest.ts","../node_modules/@web3-onboard/common/node_modules/viem/celo/utils.ts","../node_modules/@web3-onboard/common/node_modules/viem/celo/serializers.ts","../node_modules/@web3-onboard/common/node_modules/viem/celo/chainConfig.ts","../node_modules/@web3-onboard/common/node_modules/viem/celo/formatters.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/celo.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/celoAlfajores.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/chiliz.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/classic.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/confluxESpace.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/confluxESpaceTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/coreDao.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/cronos.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/cronosTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/crossbell.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/cyber.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/cyberTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/darwinia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/defichainEvm.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/defichainEvmTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/degen.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/dfk.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/dodochainTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/dogechain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/dreyerxMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/edgeless.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/edgelessTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/edgeware.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/edgewareTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/eon.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/eos.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/eosTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/etherlinkTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/evmos.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/evmosTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/ekta.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/ektaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fantom.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fantomSonicTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fantomTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fibo.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/filecoin.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/filecoinCalibration.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/filecoinHyperspace.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/flare.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/flareTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/flowPreviewnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/flowMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/flowTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/foundry.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fraxtal.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fraxtalTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/funkiSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fuse.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/fuseSparknet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/iotex.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/iotexTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/jbc.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/jbcTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/karura.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/gobi.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/goerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/gnosis.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/gnosisChiado.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/hardhat.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/harmonyOne.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/haqqMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/haqqTestedge2.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/hedera.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/hederaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/hederaPreviewnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/holesky.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/immutableZkEvm.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/immutableZkEvmTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/inEVM.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kakarotSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kava.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kavaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kcc.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/klaytn.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/klaytnBaobab.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kroma.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/kromaSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/l3x.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/l3xTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lightlinkPegasus.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lightlinkPhoenix.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/linea.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lineaGoerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lineaSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lineaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/constants/number.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/formatters.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/errors/transaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/utils/isEip712Transaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/utils/assertEip712Transaction.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/serializers.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/errors/bytecode.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/chainConfig.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/utils/getEip712Domain.ts","../node_modules/@web3-onboard/common/node_modules/viem/zksync/utils/hashBytecode.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lisk.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/liskSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/localhost.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/lukso.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/luksoTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mandala.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/manta.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mantaSepoliaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mantaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mantle.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mantleSepoliaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mantleTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/merlin.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/metachain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/metachainIstanbul.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/metalL2.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/meter.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/meterTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/metis.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/metisGoerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mev.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mevTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mintSepoliaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/mode.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/modeTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/moonbaseAlpha.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/moonbeam.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/moonbeamDev.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/moonriver.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/morphSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/nautilus.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/neonDevnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/neonMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/nexi.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/nexilix.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/oasys.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/oasisTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/okc.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/optimism.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/optimismGoerli.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/optimismSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/opBNB.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/opBNBTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/oortmainnetDev.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/otimDevnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/palm.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/palmTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/playfiAlbireo.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/pgn.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/pgnTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/phoenix.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/plinga.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/plumeTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygon.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygonAmoy.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygonMumbai.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygonZkEvm.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygonZkEvmCardona.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/polygonZkEvmTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/pulsechain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/pulsechainV4.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/qMainnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/qTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/reyaNetwork.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rollux.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rolluxTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/ronin.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rootstock.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rootstockTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rss3.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/rss3Sepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/saigon.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/sapphire.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/sapphireTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/scroll.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/scrollSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/scrollTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/seiDevnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/sepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/shimmer.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/shimmerTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/brawl.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/calypso.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/calypsoTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/cryptoBlades.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/cryptoColosseum.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/europa.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/europaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/exorde.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/humanProtocol.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/nebula.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/nebulaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/razor.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/titan.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/skale/titanTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/songbird.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/songbirdTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/spicy.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/shardeumSphinx.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/shibarium.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/stratis.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/syscoin.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/syscoinTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taraxa.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taikoHekla.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taikoJolnir.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taikoKatla.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taikoTestnetSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/taraxaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/telcoinTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/telos.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/telosTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/tenet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/thaiChain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/thunderTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/vechain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/wanchain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/wanchainTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/wemix.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/wemixTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/xLayerTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/xLayer.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/xdc.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/xdcTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/yooldoVerse.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/yooldoVerseTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zetachain.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zetachainAthensTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zhejiang.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zilliqa.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zilliqaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkFair.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkFairTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkSync.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkSyncInMemoryNode.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkSyncLocalNode.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkSyncSepoliaTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zkSyncTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zora.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zoraSepolia.ts","../node_modules/@web3-onboard/common/node_modules/viem/chains/definitions/zoraTestnet.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/chain/defineChain.ts"],"sourcesContent":["import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const acala = /*#__PURE__*/ defineChain({\n  id: 787,\n  name: 'Acala',\n  network: 'acala',\n  nativeCurrency: {\n    name: 'Acala',\n    symbol: 'ACA',\n    decimals: 18,\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://eth-rpc-acala.aca-api.network'],\n      webSocket: ['wss://eth-rpc-acala.aca-api.network'],\n    },\n    default: {\n      http: ['https://eth-rpc-acala.aca-api.network'],\n      webSocket: ['wss://eth-rpc-acala.aca-api.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Acala Blockscout',\n      url: 'https://blockscout.acala.network',\n      apiUrl: 'https://blockscout.acala.network/api',\n    },\n  },\n  testnet: false,\n})\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Assign, Prettify } from '../../types/utils.js'\n\nexport type DefineFormatterErrorType = ErrorType\n\nexport function defineFormatter<TType extends string, TParameters, TReturnType>(\n  type: TType,\n  format: (_: TParameters) => TReturnType,\n) {\n  return <\n    TOverrideParameters,\n    TOverrideReturnType,\n    TExclude extends (keyof TParameters | keyof TOverrideParameters)[] = [],\n  >({\n    exclude,\n    format: overrides,\n  }: {\n    exclude?: TExclude | undefined\n    format: (_: TOverrideParameters) => TOverrideReturnType\n  }) => {\n    return {\n      exclude,\n      format: (args: Assign<TParameters, TOverrideParameters>) => {\n        const formatted = format(args as any)\n        if (exclude) {\n          for (const key of exclude) {\n            delete (formatted as any)[key]\n          }\n        }\n        return {\n          ...formatted,\n          ...overrides(args),\n        } as Prettify<Assign<TReturnType, TOverrideReturnType>> & {\n          [_key in TExclude[number]]: never\n        }\n      },\n      type,\n    }\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction, TransactionType } from '../../types/transaction.js'\nimport type { ExactPartial, UnionLooseOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  TChain extends Chain | undefined = undefined,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'transaction'>,\n> = UnionLooseOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [_K in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, TBlockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n  '0x3': 'eip4844',\n} as const satisfies Record<Hex, TransactionType>\n\nexport type FormatTransactionErrorType = ErrorType\n\nexport function formatTransaction(transaction: ExactPartial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerBlobGas: transaction.maxFeePerBlobGas\n      ? BigInt(transaction.maxFeePerBlobGas)\n      : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type\n      ? (transactionType as any)[transaction.type]\n      : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  } as Transaction\n\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity)\n\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\n    }\n\n    return undefined\n  })()\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n    delete transaction_.yParity\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  if (transaction_.type === 'eip1559') {\n    delete transaction_.maxFeePerBlobGas\n  }\n  return transaction_\n}\n\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  TChain extends Chain | undefined = undefined,\n  TIncludeTransactions extends boolean = boolean,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'block',\n    Block<bigint, TIncludeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [_key in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, TIncludeTransactions, TBlockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = TIncludeTransactions extends true\n    ? Prettify<FormattedTransaction<TChain, TBlockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport type FormatBlockErrorType = ErrorType\n\nexport function formatBlock(block: ExactPartial<RpcBlock>) {\n  const transactions = block.transactions?.map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    excessBlobGas: block.excessBlobGas\n      ? BigInt(block.excessBlobGas)\n      : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport type DefineBlockErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\n\nexport type FormatLogErrorType = ErrorType\n\nexport function formatLog(\n  log: ExactPartial<RpcLog>,\n  {\n    args,\n    eventName,\n  }: { args?: unknown | undefined; eventName?: string | undefined } = {},\n) {\n  return {\n    ...log,\n    blockHash: log.blockHash ? log.blockHash : null,\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\n    transactionHash: log.transactionHash ? log.transactionHash : null,\n    transactionIndex: log.transactionIndex\n      ? Number(log.transactionIndex)\n      : null,\n    ...(eventName ? { args, eventName } : {}),\n  } as Log\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  TChain extends Chain | undefined = undefined,\n> = ExtractChainFormatterReturnType<\n  TChain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nexport const receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: ExactPartial<RpcTransactionReceipt>,\n) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? receiptStatuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n\n  if (transactionReceipt.blobGasPrice)\n    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice)\n  if (transactionReceipt.blobGasUsed)\n    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed)\n\n  return receipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n","import type { ChainFormatters } from '../types/chain.js'\nimport type { Hash } from '../types/misc.js'\nimport type { RpcTransaction } from '../types/rpc.js'\nimport { hexToBigInt } from '../utils/encoding/fromHex.js'\nimport { defineBlock } from '../utils/formatters/block.js'\nimport {\n  defineTransaction,\n  formatTransaction,\n} from '../utils/formatters/transaction.js'\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js'\nimport type {\n  OpStackBlockOverrides,\n  OpStackRpcBlockOverrides,\n} from './types/block.js'\nimport type {\n  OpStackRpcTransaction,\n  OpStackRpcTransactionReceiptOverrides,\n  OpStackTransaction,\n  OpStackTransactionReceiptOverrides,\n} from './types/transaction.js'\n\nexport const formatters = {\n  block: /*#__PURE__*/ defineBlock({\n    format(\n      args: OpStackRpcBlockOverrides & {\n        transactions: Hash[] | OpStackRpcTransaction[]\n      },\n    ): OpStackBlockOverrides & {\n      transactions: Hash[] | OpStackTransaction[]\n    } {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        const formatted = formatTransaction(\n          transaction as RpcTransaction,\n        ) as OpStackTransaction\n        if (formatted.typeHex === '0x7e') {\n          formatted.isSystemTx = transaction.isSystemTx\n          formatted.mint = transaction.mint\n            ? hexToBigInt(transaction.mint)\n            : undefined\n          formatted.sourceHash = transaction.sourceHash\n          formatted.type = 'deposit'\n        }\n        return formatted\n      }) as Hash[] | OpStackTransaction[]\n      return {\n        transactions,\n        stateRoot: args.stateRoot,\n      }\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: OpStackRpcTransaction): OpStackTransaction {\n      const transaction = {} as OpStackTransaction\n      if (args.type === '0x7e') {\n        transaction.isSystemTx = args.isSystemTx\n        transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined\n        transaction.sourceHash = args.sourceHash\n        transaction.type = 'deposit'\n      }\n      return transaction\n    },\n  }),\n  transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n    format(\n      args: OpStackRpcTransactionReceiptOverrides,\n    ): OpStackTransactionReceiptOverrides {\n      return {\n        l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n        l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n        l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n        l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n      }\n    },\n  }),\n} as const satisfies ChainFormatters\n","import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  override name = 'InvalidAddressError'\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`, {\n      metaMessages: [\n        '- Address must be a hex value of 20 bytes (40 hex characters).',\n        '- Address must match its checksum counterpart.',\n      ],\n    })\n  }\n}\n","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize)\n      this.delete(this.keys().next().value)\n    return this\n  }\n}\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { LruMap } from '../lru.js'\nimport { type IsAddressErrorType, isAddress } from './isAddress.js'\n\nexport const checksumAddressCache = /*#__PURE__*/ new LruMap<Address>(8192)\n\nexport type ChecksumAddressErrorType =\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\nexport function checksumAddress(\n  address_: Address,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number | undefined,\n): Address {\n  if (checksumAddressCache.has(`${address_}.${chainId}`))\n    return checksumAddressCache.get(`${address_}.${chainId}`)!\n\n  const hexAddress = chainId\n    ? `${chainId}${address_.toLowerCase()}`\n    : address_.substring(2).toLowerCase()\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes')\n\n  const address = (\n    chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress\n  ).split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase()\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase()\n    }\n  }\n\n  const result = `0x${address.join('')}` as const\n  checksumAddressCache.set(`${address_}.${chainId}`, result)\n  return result\n}\n\nexport type GetAddressErrorType =\n  | ChecksumAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function getAddress(\n  address: string,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number,\n): Address {\n  if (!isAddress(address, { strict: false }))\n    throw new InvalidAddressError({ address })\n  return checksumAddress(address, chainId)\n}\n","import { keccak_256 } from '@noble/hashes/sha3'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Keccak256Hash<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport type Keccak256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function keccak256<TTo extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: TTo | undefined,\n): Keccak256Hash<TTo> {\n  const to = to_ || 'hex'\n  const bytes = keccak_256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Keccak256Hash<TTo>\n  return toHex(bytes) as Keccak256Hash<TTo>\n}\n","import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { LruMap } from '../lru.js'\nimport { checksumAddress } from './getAddress.js'\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/\n\nexport const isAddressCache = /*#__PURE__*/ new LruMap<boolean>(8192)\n\nexport type IsAddressOptions = {\n  /**\n   * Enables strict mode. Whether or not to compare the address against its checksum.\n   *\n   * @default true\n   */\n  strict?: boolean | undefined\n}\n\nexport type IsAddressErrorType = ErrorType\n\nexport function isAddress(\n  address: string,\n  options?: IsAddressOptions | undefined,\n): address is Address {\n  const { strict = true } = options ?? {}\n\n  if (isAddressCache.has(address)) return isAddressCache.get(address)!\n\n  const result = (() => {\n    if (!addressRegex.test(address)) return false\n    if (address.toLowerCase() === address) return true\n    if (strict) return checksumAddress(address as Address) === address\n    return true\n  })()\n  isAddressCache.set(address, result)\n  return result\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nexport type ConcatReturnType<TValue extends Hex | ByteArray> =\n  TValue extends Hex ? Hex : ByteArray\n\nexport type ConcatErrorType =\n  | ConcatBytesErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function concat<TValue extends Hex | ByteArray>(\n  values: readonly TValue[],\n): ConcatReturnType<TValue> {\n  if (typeof values[0] === 'string')\n    return concatHex(values as readonly Hex[]) as ConcatReturnType<TValue>\n  return concatBytes(values as readonly ByteArray[]) as ConcatReturnType<TValue>\n}\n\nexport type ConcatBytesErrorType = ErrorType\n\nexport function concatBytes(values: readonly ByteArray[]): ByteArray {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const arr of values) {\n    result.set(arr, offset)\n    offset += arr.length\n  }\n  return result\n}\n\nexport type ConcatHexErrorType = ErrorType\n\nexport function concatHex(values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce(\n    (acc, x) => acc + x.replace('0x', ''),\n    '',\n  )}`\n}\n","import { BaseError } from './base.js'\n\nexport type NegativeOffsetErrorType = NegativeOffsetError & {\n  name: 'NegativeOffsetError'\n}\nexport class NegativeOffsetError extends BaseError {\n  override name = 'NegativeOffsetError'\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`)\n  }\n}\n\nexport type PositionOutOfBoundsErrorType = PositionOutOfBoundsError & {\n  name: 'PositionOutOfBoundsError'\n}\nexport class PositionOutOfBoundsError extends BaseError {\n  override name = 'PositionOutOfBoundsError'\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n    )\n  }\n}\n\nexport type RecursiveReadLimitExceededErrorType =\n  RecursiveReadLimitExceededError & {\n    name: 'RecursiveReadLimitExceededError'\n  }\nexport class RecursiveReadLimitExceededError extends BaseError {\n  override name = 'RecursiveReadLimitExceededError'\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n    )\n  }\n}\n","import {\n  NegativeOffsetError,\n  PositionOutOfBoundsError,\n  RecursiveReadLimitExceededError,\n} from '../errors/cursor.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ByteArray } from '../types/misc.js'\n\nexport type Cursor = {\n  bytes: ByteArray\n  dataView: DataView\n  position: number\n  positionReadCount: Map<number, number>\n  recursiveReadCount: number\n  recursiveReadLimit: number\n  remaining: number\n  assertReadLimit(position?: number): void\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  getReadCount(position?: number): number\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): ByteArray[number]\n  inspectBytes(length: number, position?: number): ByteArray\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: ByteArray[number]): void\n  pushBytes(bytes: ByteArray): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): ByteArray[number]\n  readBytes(length: number, size?: number): ByteArray\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): () => void\n  _touch(): void\n}\n\nexport type CreateCursorErrorType = ErrorType\n\nexport type CursorErrorType =\n  | CursorAssertPositionErrorType\n  | CursorDecrementPositionErrorType\n  | CursorIncrementPositionErrorType\n  | ErrorType\n\nexport type CursorAssertPositionErrorType = PositionOutOfBoundsError | ErrorType\n\nexport type CursorDecrementPositionErrorType = NegativeOffsetError | ErrorType\n\nexport type CursorIncrementPositionErrorType = NegativeOffsetError | ErrorType\n\nconst staticCursor: Cursor = {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  positionReadCount: new Map(),\n  recursiveReadCount: 0,\n  recursiveReadLimit: Number.POSITIVE_INFINITY,\n  assertReadLimit() {\n    if (this.recursiveReadCount >= this.recursiveReadLimit)\n      throw new RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit,\n      })\n  },\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  getReadCount(position) {\n    return this.positionReadCount.get(position || this.position) || 0\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: ByteArray[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: ByteArray) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length, size) {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectBytes(length)\n    this.position += size ?? length\n    return value\n  },\n  readUint8() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  get remaining() {\n    return this.bytes.length - this.position\n  },\n  setPosition(position) {\n    const oldPosition = this.position\n    this.assertPosition(position)\n    this.position = position\n    return () => (this.position = oldPosition)\n  },\n  _touch() {\n    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return\n    const count = this.getReadCount()\n    this.positionReadCount.set(this.position, count + 1)\n    if (count > 0) this.recursiveReadCount++\n  },\n}\n\ntype CursorConfig = { recursiveReadLimit?: number | undefined }\n\nexport function createCursor(\n  bytes: ByteArray,\n  { recursiveReadLimit = 8_192 }: CursorConfig = {},\n): Cursor {\n  const cursor: Cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  cursor.positionReadCount = new Map()\n  cursor.recursiveReadLimit = recursiveReadLimit\n  return cursor\n}\n","import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type RecursiveArray<T> = T | readonly RecursiveArray<T>[]\n\ntype To = 'hex' | 'bytes'\n\ntype Encodable = {\n  length: number\n  encode(cursor: Cursor): void\n}\n\nexport type ToRlpReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type ToRlpErrorType =\n  | CreateCursorErrorType\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\nexport function toRlp<to extends To = 'hex'>(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  const encodable = getEncodable(bytes)\n  const cursor = createCursor(new Uint8Array(encodable.length))\n  encodable.encode(cursor)\n\n  if (to === 'hex') return bytesToHex(cursor.bytes) as ToRlpReturnType<to>\n  return cursor.bytes as ToRlpReturnType<to>\n}\n\nexport type BytesToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function bytesToRlp<to extends To = 'bytes'>(\n  bytes: RecursiveArray<ByteArray>,\n  to: to | To | undefined = 'bytes',\n): ToRlpReturnType<to> {\n  return toRlp(bytes, to)\n}\n\nexport type HexToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function hexToRlp<to extends To = 'hex'>(\n  hex: RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  return toRlp(hex, to)\n}\n\nfunction getEncodable(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n): Encodable {\n  if (Array.isArray(bytes))\n    return getEncodableList(bytes.map((x) => getEncodable(x)))\n  return getEncodableBytes(bytes as any)\n}\n\nfunction getEncodableList(list: Encodable[]): Encodable {\n  const bodyLength = list.reduce((acc, x) => acc + x.length, 0)\n\n  const sizeOfBodyLength = getSizeOfLength(bodyLength)\n  const length = (() => {\n    if (bodyLength <= 55) return 1 + bodyLength\n    return 1 + sizeOfBodyLength + bodyLength\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bodyLength <= 55) {\n        cursor.pushByte(0xc0 + bodyLength)\n      } else {\n        cursor.pushByte(0xc0 + 55 + sizeOfBodyLength)\n        if (sizeOfBodyLength === 1) cursor.pushUint8(bodyLength)\n        else if (sizeOfBodyLength === 2) cursor.pushUint16(bodyLength)\n        else if (sizeOfBodyLength === 3) cursor.pushUint24(bodyLength)\n        else cursor.pushUint32(bodyLength)\n      }\n      for (const { encode } of list) {\n        encode(cursor)\n      }\n    },\n  }\n}\n\nfunction getEncodableBytes(bytesOrHex: ByteArray | Hex): Encodable {\n  const bytes =\n    typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex\n\n  const sizeOfBytesLength = getSizeOfLength(bytes.length)\n  const length = (() => {\n    if (bytes.length === 1 && bytes[0] < 0x80) return 1\n    if (bytes.length <= 55) return 1 + bytes.length\n    return 1 + sizeOfBytesLength + bytes.length\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bytes.length === 1 && bytes[0] < 0x80) {\n        cursor.pushBytes(bytes)\n      } else if (bytes.length <= 55) {\n        cursor.pushByte(0x80 + bytes.length)\n        cursor.pushBytes(bytes)\n      } else {\n        cursor.pushByte(0x80 + 55 + sizeOfBytesLength)\n        if (sizeOfBytesLength === 1) cursor.pushUint8(bytes.length)\n        else if (sizeOfBytesLength === 2) cursor.pushUint16(bytes.length)\n        else if (sizeOfBytesLength === 3) cursor.pushUint24(bytes.length)\n        else cursor.pushUint32(bytes.length)\n        cursor.pushBytes(bytes)\n      }\n    },\n  }\n}\n\nfunction getSizeOfLength(length: number) {\n  if (length < 2 ** 8) return 1\n  if (length < 2 ** 16) return 2\n  if (length < 2 ** 24) return 3\n  if (length < 2 ** 32) return 4\n  throw new BaseError('Length is too large.')\n}\n","import { gweiUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatGweiErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei: bigint, unit: 'wei' = 'wei') {\n  return formatUnits(wei, gweiUnits[unit])\n}\n","import type { Account } from '../accounts/types.js'\nimport type { SendTransactionParameters } from '../actions/wallet/sendTransaction.js'\nimport type { BlockTag } from '../types/block.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hash, Hex } from '../types/misc.js'\nimport type { TransactionType } from '../types/transaction.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\nexport function prettyPrint(\n  args: Record<string, bigint | number | string | undefined | false | unknown>,\n) {\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n\nexport type FeeConflictErrorType = FeeConflictError & {\n  name: 'FeeConflictError'\n}\nexport class FeeConflictError extends BaseError {\n  override name = 'FeeConflictError'\n  constructor() {\n    super(\n      [\n        'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n        'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type InvalidLegacyVErrorType = InvalidLegacyVError & {\n  name: 'InvalidLegacyVError'\n}\nexport class InvalidLegacyVError extends BaseError {\n  override name = 'InvalidLegacyVError'\n\n  constructor({ v }: { v: bigint }) {\n    super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`)\n  }\n}\n\nexport type InvalidSerializableTransactionErrorType =\n  InvalidSerializableTransactionError & {\n    name: 'InvalidSerializableTransactionError'\n  }\nexport class InvalidSerializableTransactionError extends BaseError {\n  override name = 'InvalidSerializableTransactionError'\n\n  constructor({ transaction }: { transaction: Record<string, unknown> }) {\n    super('Cannot infer a transaction type from provided transaction.', {\n      metaMessages: [\n        'Provided Transaction:',\n        '{',\n        prettyPrint(transaction),\n        '}',\n        '',\n        'To infer the type, either provide:',\n        '- a `type` to the Transaction, or',\n        '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n        '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n        '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n        '- a Legacy Transaction with `gasPrice`',\n      ],\n    })\n  }\n}\n\nexport type InvalidSerializedTransactionTypeErrorType =\n  InvalidSerializedTransactionTypeError & {\n    name: 'InvalidSerializedTransactionTypeError'\n  }\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n  override name = 'InvalidSerializedTransactionType'\n\n  serializedType: Hex\n\n  constructor({ serializedType }: { serializedType: Hex }) {\n    super(`Serialized transaction type \"${serializedType}\" is invalid.`)\n\n    this.serializedType = serializedType\n  }\n}\n\nexport type InvalidSerializedTransactionErrorType =\n  InvalidSerializedTransactionError & {\n    name: 'InvalidSerializedTransactionError'\n  }\nexport class InvalidSerializedTransactionError extends BaseError {\n  override name = 'InvalidSerializedTransactionError'\n\n  serializedTransaction: Hex\n  type: TransactionType\n\n  constructor({\n    attributes,\n    serializedTransaction,\n    type,\n  }: {\n    attributes: Record<string, unknown>\n    serializedTransaction: Hex\n    type: TransactionType\n  }) {\n    const missing = Object.entries(attributes)\n      .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n      .filter(Boolean)\n    super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n      metaMessages: [\n        `Serialized Transaction: \"${serializedTransaction}\"`,\n        missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n      ].filter(Boolean),\n    })\n\n    this.serializedTransaction = serializedTransaction\n    this.type = type\n  }\n}\n\nexport type InvalidStorageKeySizeErrorType = InvalidStorageKeySizeError & {\n  name: 'InvalidStorageKeySizeError'\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n  override name = 'InvalidStorageKeySizeError'\n\n  constructor({ storageKey }: { storageKey: Hex }) {\n    super(\n      `Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor(\n        (storageKey.length - 2) / 2,\n      )} bytes.`,\n    )\n  }\n}\n\nexport type TransactionExecutionErrorType = TransactionExecutionError & {\n  name: 'TransactionExecutionError'\n}\nexport class TransactionExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'TransactionExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<SendTransactionParameters, 'account' | 'chain'> & {\n      account: Account\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      chain: chain && `${chain?.name} (id: ${chain?.id})`,\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n\nexport type TransactionNotFoundErrorType = TransactionNotFoundError & {\n  name: 'TransactionNotFoundError'\n}\nexport class TransactionNotFoundError extends BaseError {\n  override name = 'TransactionNotFoundError'\n  constructor({\n    blockHash,\n    blockNumber,\n    blockTag,\n    hash,\n    index,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n    blockTag?: BlockTag | undefined\n    hash?: Hash | undefined\n    index?: number | undefined\n  }) {\n    let identifier = 'Transaction'\n    if (blockTag && index !== undefined)\n      identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`\n    if (blockHash && index !== undefined)\n      identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`\n    if (blockNumber && index !== undefined)\n      identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`\n    if (hash) identifier = `Transaction with hash \"${hash}\"`\n    super(`${identifier} could not be found.`)\n  }\n}\n\nexport type TransactionReceiptNotFoundErrorType =\n  TransactionReceiptNotFoundError & {\n    name: 'TransactionReceiptNotFoundError'\n  }\nexport class TransactionReceiptNotFoundError extends BaseError {\n  override name = 'TransactionReceiptNotFoundError'\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`,\n    )\n  }\n}\n\nexport type WaitForTransactionReceiptTimeoutErrorType =\n  WaitForTransactionReceiptTimeoutError & {\n    name: 'WaitForTransactionReceiptTimeoutError'\n  }\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n  override name = 'WaitForTransactionReceiptTimeoutError'\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`,\n    )\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type BlobsToCommitmentsParameters<\n  blobs extends readonly ByteArray[] | readonly Hex[] =\n    | readonly ByteArray[]\n    | readonly Hex[],\n  to extends To | undefined = undefined,\n> = {\n  /** Blobs to transform into commitments. */\n  blobs: blobs | readonly ByteArray[] | readonly Hex[]\n  /** KZG implementation. */\n  kzg: Pick<Kzg, 'blobToKzgCommitment'>\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type BlobsToCommitmentsReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type BlobsToCommitmentsErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments<\n  const blobs extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: BlobsToCommitmentsParameters<blobs, to>,\n): BlobsToCommitmentsReturnType<to> {\n  const { kzg } = parameters\n\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as any))\n      : parameters.blobs\n  ) as ByteArray[]\n\n  const commitments: ByteArray[] = []\n  for (const blob of blobs)\n    commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)))\n\n  return (to === 'bytes'\n    ? commitments\n    : commitments.map((x) =>\n        bytesToHex(x),\n      )) as {} as BlobsToCommitmentsReturnType<to>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type blobsToProofsParameters<\n  blobs extends readonly ByteArray[] | readonly Hex[],\n  commitments extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n  ///\n  _blobsType =\n    | (blobs extends readonly Hex[] ? readonly Hex[] : never)\n    | (blobs extends readonly ByteArray[] ? readonly ByteArray[] : never),\n> = {\n  /** Blobs to transform into proofs. */\n  blobs: blobs\n  /** Commitments for the blobs. */\n  commitments: commitments &\n    (commitments extends _blobsType\n      ? {}\n      : `commitments must be the same type as blobs`)\n  /** KZG implementation. */\n  kzg: Pick<Kzg, 'computeBlobKzgProof'>\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type blobsToProofsReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray[] : never)\n  | (to extends 'hex' ? Hex[] : never)\n\nexport type blobsToProofsErrorType =\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs<\n  const blobs extends readonly ByteArray[] | readonly Hex[],\n  const commitments extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: blobsToProofsParameters<blobs, commitments, to>,\n): blobsToProofsReturnType<to> {\n  const { kzg } = parameters\n\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as any))\n      : parameters.blobs\n  ) as ByteArray[]\n  const commitments = (\n    typeof parameters.commitments[0] === 'string'\n      ? parameters.commitments.map((x) => hexToBytes(x as any))\n      : parameters.commitments\n  ) as ByteArray[]\n\n  const proofs: ByteArray[] = []\n  for (let i = 0; i < blobs.length; i++) {\n    const blob = blobs[i]\n    const commitment = commitments[i]\n    proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)))\n  }\n\n  return (to === 'bytes'\n    ? proofs\n    : proofs.map((x) => bytesToHex(x))) as {} as blobsToProofsReturnType<to>\n}\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","import { sha256 as noble_sha256 } from '@noble/hashes/sha256'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Sha256Hash<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport type Sha256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function sha256<TTo extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: TTo | undefined,\n): Sha256Hash<TTo> {\n  const to = to_ || 'hex'\n  const bytes = noble_sha256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Sha256Hash<TTo>\n  return toHex(bytes) as Sha256Hash<TTo>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Sha256ErrorType, sha256 } from '../hash/sha256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type CommitmentToVersionedHashParameters<\n  commitment extends Uint8Array | Hex = Uint8Array | Hex,\n  to extends To | undefined = undefined,\n> = {\n  /** Commitment from blob. */\n  commitment: commitment | Uint8Array | Hex\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hash. */\n  version?: number | undefined\n}\n\nexport type CommitmentToVersionedHashReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type CommitmentToVersionedHashErrorType =\n  | Sha256ErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash<\n  const commitment extends Hex | ByteArray,\n  to extends To =\n    | (commitment extends Hex ? 'hex' : never)\n    | (commitment extends ByteArray ? 'bytes' : never),\n>(\n  parameters: CommitmentToVersionedHashParameters<commitment, to>,\n): CommitmentToVersionedHashReturnType<to> {\n  const { commitment, version = 1 } = parameters\n  const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes')\n\n  const versionedHash = sha256(commitment, 'bytes')\n  versionedHash.set([version], 0)\n  return (\n    to === 'bytes' ? versionedHash : bytesToHex(versionedHash)\n  ) as CommitmentToVersionedHashReturnType<to>\n}\n","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\n/** Blob limit per transaction. */\nexport const blobsPerTransaction = 6\n\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32\n\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096\n\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob\n\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction =\n  bytesPerBlob * blobsPerTransaction -\n  // terminator byte (0x80).\n  1 -\n  // zero byte (0x00) appended to each field element.\n  1 * fieldElementsPerBlob * blobsPerTransaction\n","import { versionedHashVersionKzg } from '../constants/kzg.js'\nimport type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlobSizeTooLargeErrorType = BlobSizeTooLargeError & {\n  name: 'BlobSizeTooLargeError'\n}\nexport class BlobSizeTooLargeError extends BaseError {\n  override name = 'BlobSizeTooLargeError'\n  constructor({ maxSize, size }: { maxSize: number; size: number }) {\n    super('Blob size is too large.', {\n      metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n    })\n  }\n}\n\nexport type EmptyBlobErrorType = EmptyBlobError & {\n  name: 'EmptyBlobError'\n}\nexport class EmptyBlobError extends BaseError {\n  override name = 'EmptyBlobError'\n  constructor() {\n    super('Blob data must not be empty.')\n  }\n}\n\nexport type InvalidVersionedHashSizeErrorType =\n  InvalidVersionedHashSizeError & {\n    name: 'InvalidVersionedHashSizeError'\n  }\nexport class InvalidVersionedHashSizeError extends BaseError {\n  override name = 'InvalidVersionedHashSizeError'\n  constructor({\n    hash,\n    size,\n  }: {\n    hash: Hash\n    size: number\n  }) {\n    super(`Versioned hash \"${hash}\" size is invalid.`, {\n      metaMessages: ['Expected: 32', `Received: ${size}`],\n    })\n  }\n}\n\nexport type InvalidVersionedHashVersionErrorType =\n  InvalidVersionedHashVersionError & {\n    name: 'InvalidVersionedHashVersionError'\n  }\nexport class InvalidVersionedHashVersionError extends BaseError {\n  override name = 'InvalidVersionedHashVersionError'\n  constructor({\n    hash,\n    version,\n  }: {\n    hash: Hash\n    version: number\n  }) {\n    super(`Versioned hash \"${hash}\" version is invalid.`, {\n      metaMessages: [\n        `Expected: ${versionedHashVersionKzg}`,\n        `Received: ${version}`,\n      ],\n    })\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { BlobSidecars } from '../../types/eip4844.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type BlobsToCommitmentsErrorType,\n  blobsToCommitments,\n} from './blobsToCommitments.js'\nimport { blobsToProofs, type blobsToProofsErrorType } from './blobsToProofs.js'\nimport { type ToBlobsErrorType, toBlobs } from './toBlobs.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type ToBlobSidecarsParameters<\n  data extends Hex | ByteArray | undefined = undefined,\n  blobs extends readonly Hex[] | readonly ByteArray[] | undefined = undefined,\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n  ///\n  _blobsType =\n    | (blobs extends readonly Hex[] ? readonly Hex[] : never)\n    | (blobs extends readonly ByteArray[] ? readonly ByteArray[] : never),\n> = {\n  /** Return type. */\n  to?: to | To | undefined\n} & OneOf<\n  | {\n      /** Data to transform into blobs. */\n      data: data | Hex | ByteArray\n      /** KZG implementation. */\n      kzg: Kzg\n    }\n  | {\n      /** Blobs. */\n      blobs: blobs | readonly Hex[] | readonly ByteArray[]\n      /** Commitment for each blob. */\n      commitments: _blobsType | readonly Hex[] | readonly ByteArray[]\n      /** Proof for each blob. */\n      proofs: _blobsType | readonly Hex[] | readonly ByteArray[]\n    }\n>\n\nexport type ToBlobSidecarsReturnType<to extends To> =\n  | (to extends 'bytes' ? BlobSidecars<ByteArray> : never)\n  | (to extends 'hex' ? BlobSidecars<Hex> : never)\n\nexport type ToBlobSidecarsErrorType =\n  | BlobsToCommitmentsErrorType\n  | ToBlobsErrorType\n  | blobsToProofsErrorType\n  | ErrorType\n\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars<\n  const data extends Hex | ByteArray | undefined = undefined,\n  const blobs extends\n    | readonly Hex[]\n    | readonly ByteArray[]\n    | undefined = undefined,\n  to extends To =\n    | (data extends Hex ? 'hex' : never)\n    | (data extends ByteArray ? 'bytes' : never)\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: ToBlobSidecarsParameters<data, blobs, to>,\n): ToBlobSidecarsReturnType<to> {\n  const { data, kzg, to } = parameters\n  const blobs = parameters.blobs ?? toBlobs({ data: data!, to })\n  const commitments =\n    parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg!, to })\n  const proofs =\n    parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg!, to })\n\n  const sidecars: BlobSidecars = []\n  for (let i = 0; i < blobs.length; i++)\n    sidecars.push({\n      blob: blobs[i],\n      commitment: commitments[i],\n      proof: proofs[i],\n    })\n\n  return sidecars as ToBlobSidecarsReturnType<to>\n}\n","import {\n  bytesPerBlob,\n  bytesPerFieldElement,\n  fieldElementsPerBlob,\n  maxBytesPerTransaction,\n} from '../../constants/blob.js'\nimport {\n  BlobSizeTooLargeError,\n  type BlobSizeTooLargeErrorType,\n  EmptyBlobError,\n  type EmptyBlobErrorType,\n} from '../../errors/blob.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { createCursor } from '../cursor.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type ToBlobsParameters<\n  data extends Hex | ByteArray = Hex | ByteArray,\n  to extends To | undefined = undefined,\n> = {\n  /** Data to transform to a blob. */\n  data: data | Hex | ByteArray\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type ToBlobsReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type ToBlobsErrorType =\n  | BlobSizeTooLargeErrorType\n  | BytesToHexErrorType\n  | EmptyBlobErrorType\n  | HexToBytesErrorType\n  | SizeErrorType\n  | ErrorType\n\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs<\n  const data extends Hex | ByteArray,\n  to extends To =\n    | (data extends Hex ? 'hex' : never)\n    | (data extends ByteArray ? 'bytes' : never),\n>(parameters: ToBlobsParameters<data, to>): ToBlobsReturnType<to> {\n  const to =\n    parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes')\n  const data = (\n    typeof parameters.data === 'string'\n      ? hexToBytes(parameters.data)\n      : parameters.data\n  ) as ByteArray\n\n  const size_ = size(data)\n  if (!size_) throw new EmptyBlobError()\n  if (size_ > maxBytesPerTransaction)\n    throw new BlobSizeTooLargeError({\n      maxSize: maxBytesPerTransaction,\n      size: size_,\n    })\n\n  const blobs = []\n\n  let active = true\n  let position = 0\n  while (active) {\n    const blob = createCursor(new Uint8Array(bytesPerBlob))\n\n    let size = 0\n    while (size < fieldElementsPerBlob) {\n      const bytes = data.slice(position, position + (bytesPerFieldElement - 1))\n\n      // Push a zero byte so the field element doesn't overflow the BLS modulus.\n      blob.pushByte(0x00)\n\n      // Push the current segment of data bytes.\n      blob.pushBytes(bytes)\n\n      // If we detect that the current segment of data bytes is less than 31 bytes,\n      // we can stop processing and push a terminator byte to indicate the end of the blob.\n      if (bytes.length < 31) {\n        blob.pushByte(0x80)\n        active = false\n        break\n      }\n\n      size++\n      position += 31\n    }\n\n    blobs.push(blob)\n  }\n\n  return (\n    to === 'bytes'\n      ? blobs.map((x) => x.bytes)\n      : blobs.map((x) => bytesToHex(x.bytes))\n  ) as any\n}\n","import type { Chain } from '../types/chain.js'\n\nimport { BaseError } from './base.js'\n\nexport type ChainDoesNotSupportContractErrorType =\n  ChainDoesNotSupportContract & {\n    name: 'ChainDoesNotSupportContract'\n  }\nexport class ChainDoesNotSupportContract extends BaseError {\n  override name = 'ChainDoesNotSupportContract'\n  constructor({\n    blockNumber,\n    chain,\n    contract,\n  }: {\n    blockNumber?: bigint | undefined\n    chain: Chain\n    contract: { name: string; blockCreated?: number | undefined }\n  }) {\n    super(\n      `Chain \"${chain.name}\" does not support contract \"${contract.name}\".`,\n      {\n        metaMessages: [\n          'This could be due to any of the following:',\n          ...(blockNumber &&\n          contract.blockCreated &&\n          contract.blockCreated > blockNumber\n            ? [\n                `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n              ]\n            : [\n                `- The chain does not have the contract \"${contract.name}\" configured.`,\n              ]),\n        ],\n      },\n    )\n  }\n}\n\nexport type ChainMismatchErrorType = ChainMismatchError & {\n  name: 'ChainMismatchError'\n}\nexport class ChainMismatchError extends BaseError {\n  override name = 'ChainMismatchError'\n\n  constructor({\n    chain,\n    currentChainId,\n  }: {\n    chain: Chain\n    currentChainId: number\n  }) {\n    super(\n      `The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${currentChainId}`,\n          `Expected Chain ID: ${chain.id} – ${chain.name}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type ChainNotFoundErrorType = ChainNotFoundError & {\n  name: 'ChainNotFoundError'\n}\nexport class ChainNotFoundError extends BaseError {\n  override name = 'ChainNotFoundError'\n\n  constructor() {\n    super(\n      [\n        'No chain was provided to the request.',\n        'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type ClientChainNotConfiguredErrorType =\n  ClientChainNotConfiguredError & {\n    name: 'ClientChainNotConfiguredError'\n  }\nexport class ClientChainNotConfiguredError extends BaseError {\n  override name = 'ClientChainNotConfiguredError'\n\n  constructor() {\n    super('No chain was provided to the Client.')\n  }\n}\n\nexport type InvalidChainIdErrorType = InvalidChainIdError & {\n  name: 'InvalidChainIdError'\n}\nexport class InvalidChainIdError extends BaseError {\n  override name = 'InvalidChainIdError'\n\n  constructor({ chainId }: { chainId?: number | undefined }) {\n    super(\n      typeof chainId === 'number'\n        ? `Chain ID \"${chainId}\" is invalid.`\n        : 'Chain ID is invalid.',\n    )\n  }\n}\n","import { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\n/**\n * geth:    https://github.com/ethereum/go-ethereum/blob/master/core/error.go\n *          https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go#L34-L41\n *\n * erigon:  https://github.com/ledgerwatch/erigon/blob/master/core/error.go\n *          https://github.com/ledgerwatch/erigon/blob/master/core/types/transaction.go#L41-L46\n *\n * anvil:   https://github.com/foundry-rs/foundry/blob/master/anvil/src/eth/error.rs#L108\n */\nexport type ExecutionRevertedErrorType = ExecutionRevertedError & {\n  code: 3\n  name: 'ExecutionRevertedError'\n}\nexport class ExecutionRevertedError extends BaseError {\n  static code = 3\n  static nodeMessage = /execution reverted/\n\n  override name = 'ExecutionRevertedError'\n\n  constructor({\n    cause,\n    message,\n  }: { cause?: BaseError | undefined; message?: string | undefined } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type FeeCapTooHighErrorType = FeeCapTooHighError & {\n  name: 'FeeCapTooHighError'\n}\nexport class FeeCapTooHighError extends BaseError {\n  static nodeMessage =\n    /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n  override name = 'FeeCapTooHigh'\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n      }) cannot be higher than the maximum allowed value (2^256-1).`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type FeeCapTooLowErrorType = FeeCapTooLowError & {\n  name: 'FeeCapTooLowError'\n}\nexport class FeeCapTooLowError extends BaseError {\n  static nodeMessage =\n    /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n  override name = 'FeeCapTooLow'\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''\n      } gwei) cannot be lower than the block base fee.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type NonceTooHighErrorType = NonceTooHighError & {\n  name: 'NonceTooHighError'\n}\nexport class NonceTooHighError extends BaseError {\n  static nodeMessage = /nonce too high/\n  override name = 'NonceTooHighError'\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }is higher than the next one expected.`,\n      { cause },\n    )\n  }\n}\n\nexport type NonceTooLowErrorType = NonceTooLowError & {\n  name: 'NonceTooLowError'\n}\nexport class NonceTooLowError extends BaseError {\n  static nodeMessage =\n    /nonce too low|transaction already imported|already known/\n  override name = 'NonceTooLowError'\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      [\n        `Nonce provided for the transaction ${\n          nonce ? `(${nonce}) ` : ''\n        }is lower than the current nonce of the account.`,\n        'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n      ].join('\\n'),\n      { cause },\n    )\n  }\n}\n\nexport type NonceMaxValueErrorType = NonceMaxValueError & {\n  name: 'NonceMaxValueError'\n}\nexport class NonceMaxValueError extends BaseError {\n  static nodeMessage = /nonce has max value/\n  override name = 'NonceMaxValueError'\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }exceeds the maximum allowed nonce.`,\n      { cause },\n    )\n  }\n}\n\nexport type InsufficientFundsErrorType = InsufficientFundsError & {\n  name: 'InsufficientFundsError'\n}\nexport class InsufficientFundsError extends BaseError {\n  static nodeMessage = /insufficient funds/\n  override name = 'InsufficientFundsError'\n  constructor({ cause }: { cause?: BaseError | undefined } = {}) {\n    super(\n      [\n        'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n      ].join('\\n'),\n      {\n        cause,\n        metaMessages: [\n          'This error could arise when the account does not have enough funds to:',\n          ' - pay for the total gas fee,',\n          ' - pay for the value to send.',\n          ' ',\n          'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n          ' - `gas` is the amount of gas needed for transaction to execute,',\n          ' - `gas fee` is the gas fee,',\n          ' - `value` is the amount of ether to send to the recipient.',\n        ],\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooHighErrorType = IntrinsicGasTooHighError & {\n  name: 'IntrinsicGasTooHighError'\n}\nexport class IntrinsicGasTooHighError extends BaseError {\n  static nodeMessage = /intrinsic gas too high|gas limit reached/\n  override name = 'IntrinsicGasTooHighError'\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction exceeds the limit allowed for the block.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooLowErrorType = IntrinsicGasTooLowError & {\n  name: 'IntrinsicGasTooLowError'\n}\nexport class IntrinsicGasTooLowError extends BaseError {\n  static nodeMessage = /intrinsic gas too low/\n  override name = 'IntrinsicGasTooLowError'\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction is too low.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type TransactionTypeNotSupportedErrorType =\n  TransactionTypeNotSupportedError & {\n    name: 'TransactionTypeNotSupportedError'\n  }\nexport class TransactionTypeNotSupportedError extends BaseError {\n  static nodeMessage = /transaction type not valid/\n  override name = 'TransactionTypeNotSupportedError'\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super('The transaction type is not supported for this chain.', {\n      cause,\n    })\n  }\n}\n\nexport type TipAboveFeeCapErrorType = TipAboveFeeCapError & {\n  name: 'TipAboveFeeCapError'\n}\nexport class TipAboveFeeCapError extends BaseError {\n  static nodeMessage =\n    /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n  override name = 'TipAboveFeeCapError'\n  constructor({\n    cause,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxPriorityFeePerGas?: bigint | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      [\n        `The provided tip (\\`maxPriorityFeePerGas\\`${\n          maxPriorityFeePerGas\n            ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n            : ''\n        }) cannot be higher than the fee cap (\\`maxFeePerGas\\`${\n          maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n        }).`,\n      ].join('\\n'),\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type UnknownNodeErrorType = UnknownNodeError & {\n  name: 'UnknownNodeError'\n}\nexport class UnknownNodeError extends BaseError {\n  override name = 'UnknownNodeError'\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(`An error occurred while executing: ${cause?.shortMessage}`, {\n      cause,\n    })\n  }\n}\n","import {\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\nimport { type SizeErrorType, size } from './size.js'\n\nexport type SliceReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport type SliceErrorType =\n  | IsHexErrorType\n  | SliceBytesErrorType\n  | SliceHexErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice<TValue extends ByteArray | Hex>(\n  value: TValue,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): SliceReturnType<TValue> {\n  if (isHex(value, { strict: false }))\n    return sliceHex(value as Hex, start, end, {\n      strict,\n    }) as SliceReturnType<TValue>\n  return sliceBytes(value as ByteArray, start, end, {\n    strict,\n  }) as SliceReturnType<TValue>\n}\n\nexport type AssertStartOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertStartOffset(value: Hex | ByteArray, start?: number | undefined) {\n  if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n    throw new SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: size(value),\n    })\n}\n\nexport type AssertEndOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertEndOffset(\n  value: Hex | ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    size(value) !== end - start\n  ) {\n    throw new SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: size(value),\n    })\n  }\n}\n\nexport type SliceBytesErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(\n  value_: ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): ByteArray {\n  assertStartOffset(value_, start)\n  const value = value_.slice(start, end)\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n\nexport type SliceHexErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(\n  value_: Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): Hex {\n  assertStartOffset(value_, start)\n  const value = `0x${value_\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}` as const\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n","import { versionedHashVersionKzg } from '../../constants/kzg.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport { BaseError, type BaseErrorType } from '../../errors/base.js'\nimport {\n  EmptyBlobError,\n  type EmptyBlobErrorType,\n  InvalidVersionedHashSizeError,\n  type InvalidVersionedHashSizeErrorType,\n  InvalidVersionedHashVersionError,\n  type InvalidVersionedHashVersionErrorType,\n} from '../../errors/blob.js'\nimport {\n  InvalidChainIdError,\n  type InvalidChainIdErrorType,\n} from '../../errors/chain.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { size } from '../data/size.js'\nimport { slice } from '../data/slice.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nexport type AssertTransactionEIP4844ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | EmptyBlobErrorType\n  | InvalidVersionedHashSizeErrorType\n  | InvalidVersionedHashVersionErrorType\n  | ErrorType\n\nexport function assertTransactionEIP4844(\n  transaction: TransactionSerializableEIP4844,\n) {\n  const { blobVersionedHashes } = transaction\n  if (blobVersionedHashes) {\n    if (blobVersionedHashes.length === 0) throw new EmptyBlobError()\n    for (const hash of blobVersionedHashes) {\n      const size_ = size(hash)\n      const version = hexToNumber(slice(hash, 0, 1))\n      if (size_ !== 32)\n        throw new InvalidVersionedHashSizeError({ hash, size: size_ })\n      if (version !== versionedHashVersionKzg)\n        throw new InvalidVersionedHashVersionError({\n          hash,\n          version,\n        })\n    }\n  }\n  assertTransactionEIP1559(transaction as {} as TransactionSerializableEIP1559)\n}\n\nexport type AssertTransactionEIP1559ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n) {\n  const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n\nexport type AssertTransactionEIP2930ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n}\n\nexport type AssertTransactionLegacyErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    accessList,\n  } = transaction\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (typeof chainId !== 'undefined' && chainId <= 0)\n    throw new InvalidChainIdError({ chainId })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n  if (accessList)\n    throw new BaseError(\n      '`accessList` is not a valid Legacy Transaction attribute.',\n    )\n}\n","import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  InvalidStorageKeySizeError,\n  type InvalidStorageKeySizeErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { AccessList } from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport type { RecursiveArray } from '../encoding/toRlp.js'\n\nexport type SerializeAccessListErrorType =\n  | InvalidStorageKeySizeErrorType\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(\n  accessList?: AccessList | undefined,\n): RecursiveArray<Hex> {\n  if (!accessList || accessList.length === 0) return []\n\n  const serializedAccessList = []\n  for (let i = 0; i < accessList.length; i++) {\n    const { address, storageKeys } = accessList[i]\n\n    for (let j = 0; j < storageKeys.length; j++) {\n      if (storageKeys[j].length - 2 !== 64) {\n        throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] })\n      }\n    }\n\n    if (!isAddress(address, { strict: false })) {\n      throw new InvalidAddressError({ address })\n    }\n\n    serializedAccessList.push([address, storageKeys])\n  }\n  return serializedAccessList\n}\n","import {\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ByteArray,\n  Hex,\n  Signature,\n  SignatureLegacy,\n} from '../../types/misc.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedEIP4844,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from '../../types/transaction.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type BlobsToCommitmentsErrorType,\n  blobsToCommitments,\n} from '../blob/blobsToCommitments.js'\nimport {\n  blobsToProofs,\n  type blobsToProofsErrorType,\n} from '../blob/blobsToProofs.js'\nimport {\n  type CommitmentsToVersionedHashesErrorType,\n  commitmentsToVersionedHashes,\n} from '../blob/commitmentsToVersionedHashes.js'\nimport {\n  type ToBlobSidecarsErrorType,\n  toBlobSidecars,\n} from '../blob/toBlobSidecars.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { trim } from '../data/trim.js'\nimport { type ToHexErrorType, bytesToHex, toHex } from '../encoding/toHex.js'\nimport { type ToRlpErrorType, toRlp } from '../encoding/toRlp.js'\n\nimport {\n  type AssertTransactionEIP1559ErrorType,\n  type AssertTransactionEIP2930ErrorType,\n  type AssertTransactionEIP4844ErrorType,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionEIP4844,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetTransactionType,\n  type GetTransationTypeErrorType,\n  getTransactionType,\n} from './getTransactionType.js'\nimport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './serializeAccessList.js'\n\nexport type SerializedTransactionReturnType<\n  transaction extends TransactionSerializable = TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = GetTransactionType<transaction>,\n> = TransactionSerialized<_transactionType>\n\nexport type SerializeTransactionFn<\n  transaction extends TransactionSerializableGeneric = TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = never,\n> = typeof serializeTransaction<\n  OneOf<TransactionSerializable | transaction>,\n  _transactionType\n>\n\nexport type SerializeTransactionErrorType =\n  | GetTransationTypeErrorType\n  | SerializeTransactionEIP1559ErrorType\n  | SerializeTransactionEIP2930ErrorType\n  | SerializeTransactionEIP4844ErrorType\n  | SerializeTransactionLegacyErrorType\n  | ErrorType\n\nexport function serializeTransaction<\n  const transaction extends TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = GetTransactionType<transaction>,\n>(\n  transaction: transaction,\n  signature?: Signature | undefined,\n): SerializedTransactionReturnType<transaction, _transactionType> {\n  const type = getTransactionType(transaction) as GetTransactionType\n\n  if (type === 'eip1559')\n    return serializeTransactionEIP1559(\n      transaction as TransactionSerializableEIP1559,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  if (type === 'eip2930')\n    return serializeTransactionEIP2930(\n      transaction as TransactionSerializableEIP2930,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  if (type === 'eip4844')\n    return serializeTransactionEIP4844(\n      transaction as TransactionSerializableEIP4844,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  return serializeTransactionLegacy(\n    transaction as TransactionSerializableLegacy,\n    signature as SignatureLegacy,\n  ) as SerializedTransactionReturnType<transaction>\n}\n\ntype SerializeTransactionEIP4844ErrorType =\n  | AssertTransactionEIP4844ErrorType\n  | BlobsToCommitmentsErrorType\n  | CommitmentsToVersionedHashesErrorType\n  | blobsToProofsErrorType\n  | ToBlobSidecarsErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP4844(\n  transaction: TransactionSerializableEIP4844,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP4844 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP4844(transaction)\n\n  let blobVersionedHashes = transaction.blobVersionedHashes\n  let sidecars = transaction.sidecars\n  // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n  if (\n    transaction.blobs &&\n    (typeof blobVersionedHashes === 'undefined' ||\n      typeof sidecars === 'undefined')\n  ) {\n    const blobs = (\n      typeof transaction.blobs[0] === 'string'\n        ? transaction.blobs\n        : (transaction.blobs as ByteArray[]).map((x) => bytesToHex(x))\n    ) as Hex[]\n    const kzg = transaction.kzg!\n    const commitments = blobsToCommitments({\n      blobs,\n      kzg,\n    })\n\n    if (typeof blobVersionedHashes === 'undefined')\n      blobVersionedHashes = commitmentsToVersionedHashes({\n        commitments,\n      })\n    if (typeof sidecars === 'undefined') {\n      const proofs = blobsToProofs({ blobs, commitments, kzg })\n      sidecars = toBlobSidecars({ blobs, commitments, proofs })\n    }\n  }\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n    blobVersionedHashes ?? [],\n    ...toYParitySignatureArray(transaction, signature),\n  ] as const\n\n  const blobs: Hex[] = []\n  const commitments: Hex[] = []\n  const proofs: Hex[] = []\n  if (sidecars)\n    for (let i = 0; i < sidecars.length; i++) {\n      const { blob, commitment, proof } = sidecars[i]\n      blobs.push(blob)\n      commitments.push(commitment)\n      proofs.push(proof)\n    }\n\n  return concatHex([\n    '0x03',\n    sidecars\n      ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n        toRlp([serializedTransaction, blobs, commitments, proofs])\n      : // If sidecars are disabled, standard envelope is used:\n        toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP4844\n}\n\ntype SerializeTransactionEIP1559ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP1559 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP1559(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    ...toYParitySignatureArray(transaction, signature),\n  ]\n\n  return concatHex([\n    '0x02',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP1559\n}\n\ntype SerializeTransactionEIP2930ErrorType =\n  | AssertTransactionEIP2930ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP2930 {\n  const { chainId, gas, data, nonce, to, value, accessList, gasPrice } =\n    transaction\n\n  assertTransactionEIP2930(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    ...toYParitySignatureArray(transaction, signature),\n  ]\n\n  return concatHex([\n    '0x01',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP2930\n}\n\ntype SerializeTransactionLegacyErrorType =\n  | AssertTransactionLegacyErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | ErrorType\n\nfunction serializeTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n  signature?: SignatureLegacy | undefined,\n): TransactionSerializedLegacy {\n  const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction\n\n  assertTransactionLegacy(transaction)\n\n  let serializedTransaction = [\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n  ]\n\n  if (signature) {\n    const v = (() => {\n      // EIP-155 (inferred chainId)\n      if (signature.v >= 35n) {\n        const inferredChainId = (signature.v - 35n) / 2n\n        if (inferredChainId > 0) return signature.v\n        return 27n + (signature.v === 35n ? 0n : 1n)\n      }\n\n      // EIP-155 (explicit chainId)\n      if (chainId > 0)\n        return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n)\n\n      // Pre-EIP-155 (no chainId)\n      const v = 27n + (signature.v === 27n ? 0n : 1n)\n      if (signature.v !== v) throw new InvalidLegacyVError({ v: signature.v })\n      return v\n    })()\n\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(v),\n      signature.r,\n      signature.s,\n    ]\n  } else if (chainId > 0) {\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(chainId),\n      '0x',\n      '0x',\n    ]\n  }\n\n  return toRlp(serializedTransaction) as TransactionSerializedLegacy\n}\n\nexport function toYParitySignatureArray(\n  transaction: TransactionSerializableGeneric,\n  signature?: Signature | undefined,\n) {\n  const { r, s, v, yParity } = signature ?? transaction\n  if (typeof r === 'undefined') return []\n  if (typeof s === 'undefined') return []\n  if (typeof v === 'undefined' && typeof yParity === 'undefined') return []\n\n  const yParity_ = (() => {\n    if (typeof yParity === 'number') return yParity ? toHex(1) : '0x'\n    if (v === 0n) return '0x'\n    if (v === 1n) return toHex(1)\n\n    return v === 27n ? '0x' : toHex(1)\n  })()\n  return [yParity_, trim(r), trim(s)]\n}\n","import {\n  InvalidSerializableTransactionError,\n  type InvalidSerializableTransactionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesEIP4844,\n  FeeValuesLegacy,\n} from '../../index.js'\nimport type {\n  TransactionRequestEIP1559,\n  TransactionRequestEIP2930,\n  TransactionRequestEIP4844,\n  TransactionRequestGeneric,\n  TransactionRequestLegacy,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\nimport type {\n  Assign,\n  ExactPartial,\n  IsNever,\n  OneOf,\n  Opaque,\n} from '../../types/utils.js'\n\ntype BaseProperties = {\n  accessList?: undefined\n  blobs?: undefined\n  blobVersionedHashes?: undefined\n  gasPrice?: undefined\n  maxFeePerBlobGas?: undefined\n  maxFeePerGas?: undefined\n  maxPriorityFeePerGas?: undefined\n  sidecars?: undefined\n}\n\ntype LegacyProperties = Assign<BaseProperties, FeeValuesLegacy>\ntype EIP1559Properties = Assign<\n  BaseProperties,\n  OneOf<\n    | {\n        maxFeePerGas: FeeValuesEIP1559['maxFeePerGas']\n      }\n    | {\n        maxPriorityFeePerGas: FeeValuesEIP1559['maxPriorityFeePerGas']\n      },\n    FeeValuesEIP1559\n  > & {\n    accessList?: TransactionSerializableEIP2930['accessList'] | undefined\n  }\n>\ntype EIP2930Properties = Assign<\n  BaseProperties,\n  ExactPartial<FeeValuesLegacy> & {\n    accessList: TransactionSerializableEIP2930['accessList']\n  }\n>\ntype EIP4844Properties = Assign<\n  BaseProperties,\n  ExactPartial<FeeValuesEIP4844> &\n    OneOf<\n      | {\n          blobs: TransactionSerializableEIP4844['blobs']\n        }\n      | {\n          blobVersionedHashes: TransactionSerializableEIP4844['blobVersionedHashes']\n        }\n      | {\n          sidecars: TransactionSerializableEIP4844['sidecars']\n        },\n      TransactionSerializableEIP4844\n    >\n>\n\nexport type GetTransactionType<\n  transaction extends OneOf<\n    TransactionSerializableGeneric | TransactionRequestGeneric\n  > = TransactionSerializableGeneric,\n  result =\n    | (transaction extends\n        | Opaque<TransactionSerializableLegacy, transaction>\n        | Opaque<TransactionRequestLegacy, transaction>\n        | LegacyProperties\n        ? 'legacy'\n        : never)\n    | (transaction extends\n        | Opaque<TransactionSerializableEIP1559, transaction>\n        | Opaque<TransactionRequestEIP1559, transaction>\n        | EIP1559Properties\n        ? 'eip1559'\n        : never)\n    | (transaction extends\n        | Opaque<TransactionSerializableEIP2930, transaction>\n        | Opaque<TransactionRequestEIP2930, transaction>\n        | EIP2930Properties\n        ? 'eip2930'\n        : never)\n    | (transaction extends\n        | Opaque<TransactionSerializableEIP4844, transaction>\n        | Opaque<TransactionRequestEIP4844, transaction>\n        | EIP4844Properties\n        ? 'eip4844'\n        : never)\n    | (transaction['type'] extends string ? transaction['type'] : never),\n> = IsNever<result> extends false ? result : string\n\nexport type GetTransationTypeErrorType =\n  | InvalidSerializableTransactionErrorType\n  | ErrorType\n\nexport function getTransactionType<\n  const transaction extends OneOf<\n    TransactionSerializableGeneric | TransactionRequestGeneric\n  >,\n>(transaction: transaction): GetTransactionType<transaction> {\n  if (transaction.type)\n    return transaction.type as GetTransactionType<transaction>\n\n  if (\n    typeof transaction.blobs !== 'undefined' ||\n    typeof transaction.blobVersionedHashes !== 'undefined' ||\n    typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n    typeof transaction.sidecars !== 'undefined'\n  )\n    return 'eip4844' as any\n\n  if (\n    typeof transaction.maxFeePerGas !== 'undefined' ||\n    typeof transaction.maxPriorityFeePerGas !== 'undefined'\n  ) {\n    return 'eip1559' as any\n  }\n\n  if (typeof transaction.gasPrice !== 'undefined') {\n    if (typeof transaction.accessList !== 'undefined') return 'eip2930' as any\n    return 'legacy' as any\n  }\n\n  throw new InvalidSerializableTransactionError({ transaction })\n}\n","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\n/** The number of bytes in a KZG commitment. */\nexport const bytesPerCommitment = 48\n\n/** The number of bytes in a KZG proof. */\nexport const bytesPerProof = 48\n\nexport const versionedHashVersionKzg = 1\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CommitmentToVersionedHashErrorType,\n  commitmentToVersionedHash,\n} from './commitmentToVersionedHash.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type CommitmentsToVersionedHashesParameters<\n  commitments extends readonly Uint8Array[] | readonly Hex[] =\n    | readonly Uint8Array[]\n    | readonly Hex[],\n  to extends To | undefined = undefined,\n> = {\n  /** Commitments from blobs. */\n  commitments: commitments | readonly Uint8Array[] | readonly Hex[]\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hashes. */\n  version?: number | undefined\n}\n\nexport type CommitmentsToVersionedHashesReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type CommitmentsToVersionedHashesErrorType =\n  | CommitmentToVersionedHashErrorType\n  | ErrorType\n\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes<\n  const commitments extends readonly Uint8Array[] | readonly Hex[],\n  to extends To =\n    | (commitments extends readonly Hex[] ? 'hex' : never)\n    | (commitments extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: CommitmentsToVersionedHashesParameters<commitments, to>,\n): CommitmentsToVersionedHashesReturnType<to> {\n  const { commitments, version } = parameters\n\n  const to =\n    parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes')\n\n  const hashes: Uint8Array[] | Hex[] = []\n  for (const commitment of commitments) {\n    hashes.push(\n      commitmentToVersionedHash({\n        commitment,\n        to,\n        version,\n      }) as any,\n    )\n  }\n  return hashes as any\n}\n","import { InvalidAddressError } from '../errors/address.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ChainSerializers } from '../types/chain.js'\nimport type { Hex, Signature } from '../types/misc.js'\nimport type { TransactionSerializable } from '../types/transaction.js'\nimport type { RequiredBy } from '../types/utils.js'\nimport { isAddress } from '../utils/address/isAddress.js'\nimport { concatHex } from '../utils/data/concat.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { toRlp } from '../utils/encoding/toRlp.js'\nimport {\n  type SerializeTransactionErrorType as SerializeTransactionErrorType_,\n  serializeTransaction as serializeTransaction_,\n} from '../utils/transaction/serializeTransaction.js'\nimport type {\n  OpStackTransactionSerializable,\n  TransactionSerializableDeposit,\n  TransactionSerializedDeposit,\n} from './types/transaction.js'\n\nexport type SerializeTransactionReturnType = ReturnType<\n  typeof serializeTransaction\n>\n\nexport type SerializeTransactionErrorType =\n  | SerializeTransactionErrorType_\n  | ErrorType\n\nexport function serializeTransaction(\n  transaction: OpStackTransactionSerializable,\n  signature?: Signature,\n) {\n  if (isDeposit(transaction)) return serializeTransactionDeposit(transaction)\n  return serializeTransaction_(\n    transaction as TransactionSerializable,\n    signature,\n  )\n}\n\nexport const serializers = {\n  transaction: serializeTransaction,\n} as const satisfies ChainSerializers\n\n//////////////////////////////////////////////////////////////////////////////\n// Serializers\n\nexport type SerializeTransactionDepositReturnType = TransactionSerializedDeposit\n\nfunction serializeTransactionDeposit(\n  transaction: TransactionSerializableDeposit,\n): SerializeTransactionDepositReturnType {\n  assertTransactionDeposit(transaction)\n\n  const { sourceHash, data, from, gas, isSystemTx, mint, to, value } =\n    transaction\n\n  const serializedTransaction: Hex[] = [\n    sourceHash,\n    from,\n    to ?? '0x',\n    mint ? toHex(mint) : '0x',\n    value ? toHex(value) : '0x',\n    gas ? toHex(gas) : '0x',\n    isSystemTx ? '0x1' : '0x',\n    data ?? '0x',\n  ]\n\n  return concatHex([\n    '0x7e',\n    toRlp(serializedTransaction),\n  ]) as SerializeTransactionDepositReturnType\n}\n\nfunction isDeposit(\n  transaction: OpStackTransactionSerializable,\n): transaction is RequiredBy<TransactionSerializableDeposit, 'type'> {\n  if (transaction.type === 'deposit') return true\n  if (typeof transaction.sourceHash !== 'undefined') return true\n  return false\n}\n\nexport function assertTransactionDeposit(\n  transaction: TransactionSerializableDeposit,\n) {\n  const { from, to } = transaction\n  if (from && !isAddress(from)) throw new InvalidAddressError({ address: from })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n}\n","import { contracts } from './contracts.js'\nimport { formatters } from './formatters.js'\nimport { serializers } from './serializers.js'\n\nexport const chainConfig = {\n  contracts,\n  formatters,\n  serializers,\n} as const\n","import type { Chain } from '../types/chain.js'\n\n/**\n * Predeploy contracts for OP Stack.\n * @see https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md\n */\nexport const contracts = {\n  gasPriceOracle: { address: '0x420000000000000000000000000000000000000F' },\n  l1Block: { address: '0x4200000000000000000000000000000000000015' },\n  l2CrossDomainMessenger: {\n    address: '0x4200000000000000000000000000000000000007',\n  },\n  l2Erc721Bridge: { address: '0x4200000000000000000000000000000000000014' },\n  l2StandardBridge: { address: '0x4200000000000000000000000000000000000010' },\n  l2ToL1MessagePasser: {\n    address: '0x4200000000000000000000000000000000000016',\n  },\n} as const satisfies Chain['contracts']\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const ancient8 = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 888888888,\n  name: 'Ancient8',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.ancient8.gg'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ancient8 explorer',\n      url: 'https://scan.ancient8.gg',\n      apiUrl: 'https://scan.ancient8.gg/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xB09DC08428C8b4EFB4ff9C0827386CDF34277996',\n      },\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x639F2AECE398Aa76b07e59eF6abe2cFe32bacb68',\n        blockCreated: 19070571,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xd5e3eDf5b68135D559D572E26bF863FBC1950033',\n        blockCreated: 19070571,\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const ancient8Sepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 28122024,\n  name: 'Ancient8 Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpcv2-testnet.ancient8.gg'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ancient8 Celestia Testnet explorer',\n      url: 'https://scanv2-testnet.ancient8.gg',\n      apiUrl: 'https://scanv2-testnet.ancient8.gg/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x942fD5017c0F60575930D8574Eaca13BEcD6e1bB',\n      },\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xfa1d9E26A6aCD7b22115D27572c1221B9803c960',\n        blockCreated: 4972908,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xF6Bc0146d3c74D48306e79Ae134A260E418C9335',\n        blockCreated: 4972908,\n      },\n    },\n  },\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const anvil = /*#__PURE__*/ defineChain({\n  id: 31_337,\n  name: 'Anvil',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['http://127.0.0.1:8545'],\n      webSocket: ['ws://127.0.0.1:8545'],\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const apexTestnet = /*#__PURE__*/ defineChain({\n  id: 3993,\n  name: 'APEX Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-testnet.apexlayer.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://exp-testnet.apexlayer.xyz',\n      apiUrl: 'https://exp-testnet.apexlayer.xyz/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xf7642be33a6b18D16a995657adb5a68CD0438aE2',\n      blockCreated: 283775,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const arbitrum = /*#__PURE__*/ defineChain({\n  id: 42_161,\n  name: 'Arbitrum One',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://arb1.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Arbiscan',\n      url: 'https://arbiscan.io',\n      apiUrl: 'https://api.arbiscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 7654707,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const arbitrumGoerli = /*#__PURE__*/ defineChain({\n  id: 421_613,\n  name: 'Arbitrum Goerli',\n  nativeCurrency: {\n    name: 'Arbitrum Goerli Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://goerli-rollup.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Arbiscan',\n      url: 'https://goerli.arbiscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 88114,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const arbitrumNova = /*#__PURE__*/ defineChain({\n  id: 42_170,\n  name: 'Arbitrum Nova',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://nova.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Arbiscan',\n      url: 'https://nova.arbiscan.io',\n      apiUrl: 'https://api-nova.arbiscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1746963,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const astar = /*#__PURE__*/ defineChain({\n  id: 592,\n  name: 'Astar',\n  network: 'astar-mainnet',\n  nativeCurrency: {\n    name: 'Astar',\n    symbol: 'ASTR',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://astar.api.onfinality.io/public'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Astar Subscan',\n      url: 'https://astar.subscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 761794,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const astarZkEVM = /*#__PURE__*/ defineChain({\n  id: 3_776,\n  name: 'Astar zkEVM',\n  network: 'AstarZkEVM',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.startale.com/astar-zkevm'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Astar zkEVM Explorer',\n      url: 'https://astar-zkevm.explorer.startale.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 93528,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const astarZkyoto = /*#__PURE__*/ defineChain({\n  id: 6_038_361,\n  name: 'Astar zkEVM Testnet zKyoto',\n  network: 'zKyoto',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.startale.com/zkyoto'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zKyoto Explorer',\n      url: 'https://zkyoto.explorer.startale.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 196153,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const arbitrumSepolia = /*#__PURE__*/ defineChain({\n  id: 421_614,\n  name: 'Arbitrum Sepolia',\n  nativeCurrency: {\n    name: 'Arbitrum Sepolia Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia-rollup.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Arbiscan',\n      url: 'https://sepolia.arbiscan.io',\n      apiUrl: 'https://api-sepolia.arbiscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 81930,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const areonNetwork = /*#__PURE__*/ defineChain({\n  id: 463,\n  name: 'Areon Network',\n  nativeCurrency: { decimals: 18, name: 'AREA', symbol: 'AREA' },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet-rpc.areon.network'],\n      webSocket: ['wss://mainnet-ws.areon.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Areonscan',\n      url: 'https://areonscan.com',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const areonNetworkTestnet = /*#__PURE__*/ defineChain({\n  id: 462,\n  name: 'Areon Network Testnet',\n  nativeCurrency: { decimals: 18, name: 'TAREA', symbol: 'TAREA' },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.areon.network'],\n      webSocket: ['wss://testnet-ws.areon.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Areonscan',\n      url: 'https://areonscan.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const aurora = /*#__PURE__*/ defineChain({\n  id: 1313161554,\n  name: 'Aurora',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://mainnet.aurora.dev'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Aurorascan',\n      url: 'https://aurorascan.dev',\n      apiUrl: 'https://aurorascan.dev/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 62907816,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const auroraTestnet = /*#__PURE__*/ defineChain({\n  id: 1313161555,\n  name: 'Aurora Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://testnet.aurora.dev'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Aurorascan',\n      url: 'https://testnet.aurorascan.dev',\n      apiUrl: 'https://testnet.aurorascan.dev/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const auroria = /*#__PURE__*/ defineChain({\n  id: 205205,\n  name: 'Auroria Testnet',\n  network: 'auroria',\n  nativeCurrency: {\n    name: 'Auroria Stratis',\n    symbol: 'tSTRAX',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://auroria.rpc.stratisevm.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Auroria Testnet Explorer',\n      url: 'https://auroria.explorer.stratisevm.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const avalanche = /*#__PURE__*/ defineChain({\n  id: 43_114,\n  name: 'Avalanche',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Avalanche',\n    symbol: 'AVAX',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.avax.network/ext/bc/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SnowScan',\n      url: 'https://snowscan.xyz',\n      apiUrl: 'https://api.snowscan.xyz/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 11907934,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const avalancheFuji = /*#__PURE__*/ defineChain({\n  id: 43_113,\n  name: 'Avalanche Fuji',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Avalanche Fuji',\n    symbol: 'AVAX',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.avax-test.network/ext/bc/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SnowScan',\n      url: 'https://testnet.snowscan.xyz',\n      apiUrl: 'https://api-testnet.snowscan.xyz',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 7096959,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bahamut = /*#__PURE__*/ defineChain({\n  id: 5165,\n  network: 'bahamut',\n  name: 'Bahamut',\n  nativeCurrency: { name: 'Fasttoken', symbol: 'FTN', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://rpc1.bahamut.io',\n        'https://bahamut-rpc.publicnode.com',\n        'https://rpc2.bahamut.io',\n      ],\n      webSocket: [\n        'wss://ws1.sahara.bahamutchain.com',\n        'wss://bahamut-rpc.publicnode.com',\n        'wss://ws2.sahara.bahamutchain.com',\n      ],\n    },\n    public: {\n      http: [\n        'https://rpc1.bahamut.io',\n        'https://bahamut-rpc.publicnode.com',\n        'https://rpc2.bahamut.io',\n      ],\n      webSocket: [\n        'wss://ws1.sahara.bahamutchain.com',\n        'wss://bahamut-rpc.publicnode.com',\n        'wss://ws2.sahara.bahamutchain.com',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ftnscan',\n      url: 'https://www.ftnscan.com',\n      apiUrl: 'https://www.ftnscan.com/api',\n    },\n  },\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const base = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 8453,\n  name: 'Base',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.base.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Basescan',\n      url: 'https://basescan.org',\n      apiUrl: 'https://api.basescan.org/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x56315b90c40730925ec5485cf004d835058518A0',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 5022,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x49048044D57e1C92A77f79988d21Fa8fAF74E97e',\n        blockCreated: 17482143,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x3154Cf16ccdb4C6d922629664174b904d80F2C35',\n        blockCreated: 17482143,\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 5 // goerli\n\nexport const baseGoerli = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 84531,\n  name: 'Base Goerli',\n  nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://goerli.base.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Basescan',\n      url: 'https://goerli.basescan.org',\n      apiUrl: 'https://goerli.basescan.org/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x2A35891ff30313CcFa6CE88dcf3858bb075A2298',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1376988,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xe93c8cD0D409341205A592f8c4Ac1A5fe5585cfA',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xfA6D8Ee5BE770F84FC001D098C4bD604Fe01284a',\n      },\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const baseSepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 84532,\n  network: 'base-sepolia',\n  name: 'Base Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.base.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Basescan',\n      url: 'https://sepolia.basescan.org',\n      apiUrl: 'https://api-sepolia.basescan.org/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254',\n      },\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x49f53e41452c74589e85ca1677426ba426459e85',\n        blockCreated: 4446677,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xfd0Bf71F60660E2f608ed56e1659C450eB113120',\n        blockCreated: 4446677,\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1059647,\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const beam = /*#__PURE__*/ defineChain({\n  id: 4337,\n  name: 'Beam',\n  network: 'beam',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Beam',\n    symbol: 'BEAM',\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://build.onbeam.com/rpc'],\n      webSocket: ['wss://build.onbeam.com/ws'],\n    },\n    default: {\n      http: ['https://build.onbeam.com/rpc'],\n      webSocket: ['wss://build.onbeam.com/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Beam Explorer',\n      url: 'https://subnets.avax.network/beam',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x4956f15efdc3dc16645e90cc356eafa65ffc65ec',\n      blockCreated: 1,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const beamTestnet = /*#__PURE__*/ defineChain({\n  id: 13337,\n  name: 'Beam Testnet',\n  network: 'beam',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Beam',\n    symbol: 'BEAM',\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://build.onbeam.com/rpc/testnet'],\n      webSocket: ['wss://build.onbeam.com/ws/testnet'],\n    },\n    default: {\n      http: ['https://build.onbeam.com/rpc/testnet'],\n      webSocket: ['wss://build.onbeam.com/ws/testnet'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Beam Explorer',\n      url: 'https://subnets-test.avax.network/beam',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x9bf49b704ee2a095b95c1f2d4eb9010510c41c9e',\n      blockCreated: 3,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bearNetworkChainMainnet = /*#__PURE__*/ defineChain({\n  id: 641230,\n  name: 'Bear Network Chain Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BearNetworkChain',\n    symbol: 'BRNKC',\n  },\n  rpcUrls: {\n    default: { http: ['https://brnkc-mainnet.bearnetwork.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BrnkScan',\n      url: 'https://brnkscan.bearnetwork.net',\n      apiUrl: 'https://brnkscan.bearnetwork.net/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bearNetworkChainTestnet = /*#__PURE__*/ defineChain({\n  id: 751230,\n  name: 'Bear Network Chain Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'tBRNKC',\n    symbol: 'tBRNKC',\n  },\n  rpcUrls: {\n    default: { http: ['https://brnkc-test.bearnetwork.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BrnkTestScan',\n      url: 'https://brnktest-scan.bearnetwork.net',\n      apiUrl: 'https://brnktest-scan.bearnetwork.net/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const berachainTestnet = /*#__PURE__*/ defineChain({\n  id: 80085,\n  name: 'Berachain Artio',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BERA Token',\n    symbol: 'BERA',\n  },\n  rpcUrls: {\n    default: { http: ['https://artio.rpc.berachain.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Berachain',\n      url: 'https://artio.beratrail.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bevmMainnet = /*#__PURE__*/ defineChain({\n  id: 11501,\n  name: 'BEVM Mainnet',\n  nativeCurrency: { name: 'Bitcoin', symbol: 'BTC', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc-mainnet-1.bevm.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Bevmscan',\n      url: 'https://scan-mainnet.bevm.io',\n      apiUrl: 'https://scan-mainnet-api.bevm.io/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bitTorrent = /*#__PURE__*/ defineChain({\n  id: 199,\n  name: 'BitTorrent',\n  network: 'bittorrent-chain-mainnet',\n  nativeCurrency: { name: 'BitTorrent', symbol: 'BTT', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc.bittorrentchain.io'] },\n    public: { http: ['https://rpc.bittorrentchain.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Bttcscan',\n      url: 'https://bttcscan.com',\n      apiUrl: 'https://api.bttcscan.com/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bitTorrentTestnet = /*#__PURE__*/ defineChain({\n  id: 1028,\n  name: 'BitTorrent Chain Testnet',\n  network: 'bittorrent-chain-testnet',\n  nativeCurrency: { name: 'BitTorrent', symbol: 'BTT', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://testrpc.bittorrentchain.io'] },\n    public: { http: ['https://testrpc.bittorrentchain.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Bttcscan',\n      url: 'https://testnet.bttcscan.com',\n      apiUrl: 'https://testnet.bttcscan.com/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const blast = /*#__PURE__*/ defineChain({\n  id: 81457,\n  name: 'Blast',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.blast.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blastscan',\n      url: 'https://blastscan.io',\n      apiUrl: 'https://api.blastscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 212929,\n    },\n  },\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const blastSepolia = /*#__PURE__*/ defineChain({\n  id: 168_587_773,\n  name: 'Blast Sepolia',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.blast.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blastscan',\n      url: 'https://sepolia.blastscan.io',\n      apiUrl: 'https://api-sepolia.blastscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 756690,\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bob = defineChain({\n  id: 60808,\n  name: 'BOB',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.gobob.xyz'],\n      webSocket: ['wss://rpc.gobob.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://explorer.gobob.xyz',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x63f8279bccDb75c0F38e0CD6B6A0c72a0a760FF9',\n      blockCreated: 457045,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const boba = /*#__PURE__*/ defineChain({\n  id: 288,\n  name: 'Boba Network',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://mainnet.boba.network'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BOBAScan',\n      url: 'https://bobascan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 446859,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bronos = /*#__PURE__*/ defineChain({\n  id: 1039,\n  name: 'Bronos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BRO',\n    symbol: 'BRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm.bronos.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BronoScan',\n      url: 'https://broscan.bronos.org',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bronosTestnet = /*#__PURE__*/ defineChain({\n  id: 1038,\n  name: 'Bronos Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Bronos Coin',\n    symbol: 'tBRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm-testnet.bronos.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BronoScan',\n      url: 'https://tbroscan.bronos.org',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bsc = /*#__PURE__*/ defineChain({\n  id: 56,\n  name: 'BNB Smart Chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BNB',\n    symbol: 'BNB',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.ankr.com/bsc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BscScan',\n      url: 'https://bscscan.com',\n      apiUrl: 'https://api.bscscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 15921452,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bscTestnet = /*#__PURE__*/ defineChain({\n  id: 97,\n  name: 'Binance Smart Chain Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BNB',\n    symbol: 'tBNB',\n  },\n  rpcUrls: {\n    default: { http: ['https://data-seed-prebsc-1-s1.bnbchain.org:8545'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BscScan',\n      url: 'https://testnet.bscscan.com',\n      apiUrl: 'https://testnet.bscscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 17422483,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bscGreenfield = /*#__PURE__*/ defineChain({\n  id: 1017,\n  name: 'BNB Greenfield Chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BNB',\n    symbol: 'BNB',\n  },\n  rpcUrls: {\n    default: { http: ['https://greenfield-chain.bnbchain.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BNB Greenfield Mainnet Scan',\n      url: 'https://greenfieldscan.com',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const btr = /*#__PURE__*/ defineChain({\n  id: 200901,\n  name: 'Bitlayer',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://rpc.bitlayer.org',\n        'https://rpc.bitlayer-rpc.com',\n        'https://rpc.ankr.com/bitlayer',\n      ],\n      webSocket: ['wss://ws.bitlayer.org', 'wss://ws.bitlayer-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'btrscan',\n      url: 'https://www.btrscan.com',\n      apiUrl: 'https://www.btrscan.com/apis',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const btrTestnet = /*#__PURE__*/ defineChain({\n  id: 200810,\n  name: 'Bitlayer Testnet',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.bitlayer.org'],\n      webSocket: [\n        'wss://testnet-ws.bitlayer.org',\n        'wss://testnet-ws.bitlayer-rpc.com',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'btrscan',\n      url: 'https://testnet-scan.bitlayer.org',\n      apiUrl: 'https://testnet-scan.bitlayer.org/apis',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bxn = /*#__PURE__*/ defineChain({\n  id: 4999,\n  name: 'BlackFort Exchange Network',\n  nativeCurrency: { name: 'BlackFort Token', symbol: 'BXN', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.blackfort.network/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://explorer.blackfort.network',\n      apiUrl: 'https://explorer.blackfort.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const bxnTestnet = /*#__PURE__*/ defineChain({\n  id: 4777,\n  name: 'BlackFort Exchange Network Testnet',\n  nativeCurrency: {\n    name: 'BlackFort Testnet Token',\n    symbol: 'TBXN',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.blackfort.network/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://testnet-explorer.blackfort.network',\n      apiUrl: 'https://testnet-explorer.blackfort.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const canto = /*#__PURE__*/ defineChain({\n  id: 7_700,\n  name: 'Canto',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Canto',\n    symbol: 'CANTO',\n  },\n  rpcUrls: {\n    default: { http: ['https://canto.gravitychain.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Tuber.Build (Blockscout)',\n      url: 'https://tuber.build',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 2905789,\n    },\n  },\n})\n","import type { Client } from '../clients/createClient.js'\nimport type {\n  Address,\n  ChainEstimateFeesPerGasFnParameters,\n  ChainFees,\n  Hex,\n} from '../index.js'\n\nimport type { formatters } from './formatters.js'\n\nexport const fees: ChainFees<typeof formatters> = {\n  /*\n   * Estimates the fees per gas for a transaction.\n\n   * If the transaction is to be paid in a token (feeCurrency is present) then the fees \n   * are estimated in the value of the token. Otherwise falls back to the default\n   * estimation by returning null.\n   * \n   * @param params fee estimation function parameters\n   */\n  estimateFeesPerGas: async (\n    params: ChainEstimateFeesPerGasFnParameters<typeof formatters>,\n  ) => {\n    if (!params.request?.feeCurrency) return null\n\n    const [maxFeePerGas, maxPriorityFeePerGas] = await Promise.all([\n      estimateFeePerGasInFeeCurrency(params.client, params.request.feeCurrency),\n      estimateMaxPriorityFeePerGasInFeeCurrency(\n        params.client,\n        params.request.feeCurrency,\n      ),\n    ])\n\n    return {\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n    }\n  },\n}\n\ntype RequestGasPriceInFeeCurrencyParams = {\n  Method: 'eth_gasPrice'\n  Parameters: [Address]\n  ReturnType: Hex\n}\n\n/*\n * Estimate the fee per gas in the value of the fee token\n\n *\n * @param client - Client to use\n * @param feeCurrency -  Address of a whitelisted fee token\n * @returns The fee per gas in wei in the value of the  fee token\n *\n */\nasync function estimateFeePerGasInFeeCurrency(\n  client: Client,\n  feeCurrency: Address,\n) {\n  const fee = await client.request<RequestGasPriceInFeeCurrencyParams>({\n    method: 'eth_gasPrice',\n    params: [feeCurrency],\n  })\n  return BigInt(fee)\n}\n\ntype RequestMaxGasPriceInFeeCurrencyParams = {\n  Method: 'eth_maxPriorityFeePerGas'\n  Parameters: [Address]\n  ReturnType: Hex\n}\n\n/*\n * Estimate the max priority fee per gas in the value of the fee token\n\n *\n * @param client - Client to use\n * @param feeCurrency -  Address of a whitelisted fee token\n * @returns The fee per gas in wei in the value of the  fee token\n *\n */\nasync function estimateMaxPriorityFeePerGasInFeeCurrency(\n  client: Client,\n  feeCurrency: Address,\n) {\n  const feesPerGas =\n    await client.request<RequestMaxGasPriceInFeeCurrencyParams>({\n      method: 'eth_maxPriorityFeePerGas',\n      params: [feeCurrency],\n    })\n  return BigInt(feesPerGas)\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterParameters,\n} from '../../types/chain.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { bytesToHex, numberToHex } from '../encoding/toHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\nexport type FormattedTransactionRequest<\n  TChain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterParameters<\n  TChain,\n  'transactionRequest',\n  TransactionRequest\n>\n\nexport const rpcTransactionType = {\n  legacy: '0x0',\n  eip2930: '0x1',\n  eip1559: '0x2',\n  eip4844: '0x3',\n} as const\n\nexport type FormatTransactionRequestErrorType = ErrorType\n\nexport function formatTransactionRequest(\n  request: ExactPartial<TransactionRequest>,\n) {\n  const rpcRequest = {} as RpcTransactionRequest\n\n  if (typeof request.accessList !== 'undefined')\n    rpcRequest.accessList = request.accessList\n  if (typeof request.blobVersionedHashes !== 'undefined')\n    rpcRequest.blobVersionedHashes = request.blobVersionedHashes\n  if (typeof request.blobs !== 'undefined') {\n    if (typeof request.blobs[0] !== 'string')\n      rpcRequest.blobs = (request.blobs as ByteArray[]).map((x) =>\n        bytesToHex(x),\n      )\n    else rpcRequest.blobs = request.blobs\n  }\n  if (typeof request.data !== 'undefined') rpcRequest.data = request.data\n  if (typeof request.from !== 'undefined') rpcRequest.from = request.from\n  if (typeof request.gas !== 'undefined')\n    rpcRequest.gas = numberToHex(request.gas)\n  if (typeof request.gasPrice !== 'undefined')\n    rpcRequest.gasPrice = numberToHex(request.gasPrice)\n  if (typeof request.maxFeePerBlobGas !== 'undefined')\n    rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas)\n  if (typeof request.maxFeePerGas !== 'undefined')\n    rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas)\n  if (typeof request.maxPriorityFeePerGas !== 'undefined')\n    rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas)\n  if (typeof request.nonce !== 'undefined')\n    rpcRequest.nonce = numberToHex(request.nonce)\n  if (typeof request.to !== 'undefined') rpcRequest.to = request.to\n  if (typeof request.type !== 'undefined')\n    rpcRequest.type = rpcTransactionType[request.type]\n  if (typeof request.value !== 'undefined')\n    rpcRequest.value = numberToHex(request.value)\n\n  return rpcRequest\n}\n\nexport type DefineTransactionRequestErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter(\n  'transactionRequest',\n  formatTransactionRequest,\n)\n","import type { Address } from 'abitype'\nimport { trim } from '../utils/data/trim.js'\nimport type {\n  CeloTransactionRequest,\n  CeloTransactionSerializable,\n  TransactionSerializableCIP64,\n} from './types.js'\n\nexport function isEmpty(\n  value: string | undefined | number | BigInt,\n): value is undefined {\n  return (\n    value === 0 ||\n    value === 0n ||\n    value === undefined ||\n    value === null ||\n    value === '0' ||\n    value === '' ||\n    (typeof value === 'string' &&\n      (trim(value as Address).toLowerCase() === '0x' ||\n        trim(value as Address).toLowerCase() === '0x00'))\n  )\n}\n\nexport function isPresent(\n  value: string | undefined | number | BigInt,\n): value is string | number | BigInt {\n  return !isEmpty(value)\n}\n\nexport function isEIP1559(\n  transaction: CeloTransactionSerializable | CeloTransactionRequest,\n): boolean {\n  return (\n    typeof transaction.maxFeePerGas !== 'undefined' &&\n    typeof transaction.maxPriorityFeePerGas !== 'undefined'\n  )\n}\n\nexport function isCIP64(\n  transaction: CeloTransactionSerializable | CeloTransactionRequest,\n): transaction is TransactionSerializableCIP64 {\n  /*\n   * Enable end user to force the tx to be considered as a CIP-64.\n   *\n   * The preliminary type will be determined as \"eip1559\" by src/utils/transaction/getTransactionType.ts\n   * and so we need the logic below to check for the specific value instead of checking if just any\n   * transaction type is provided. If that's anything else than \"cip64\" then we need to reevaluate the\n   * type based on the transaction fields.\n   *\n   * Modify with caution and according to https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0064.md\n   */\n  if (transaction.type === 'cip64') {\n    return true\n  }\n\n  return isEIP1559(transaction) && isPresent(transaction.feeCurrency)\n}\n","import { InvalidAddressError } from '../errors/address.js'\nimport { BaseError } from '../errors/base.js'\nimport { InvalidChainIdError } from '../errors/chain.js'\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../errors/node.js'\nimport type { ChainSerializers } from '../types/chain.js'\nimport type { Signature } from '../types/misc.js'\nimport { isAddress } from '../utils/address/isAddress.js'\nimport { concatHex } from '../utils/data/concat.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { toRlp } from '../utils/encoding/toRlp.js'\nimport { serializeAccessList } from '../utils/transaction/serializeAccessList.js'\nimport {\n  serializeTransaction as serializeTransaction_,\n  toYParitySignatureArray,\n} from '../utils/transaction/serializeTransaction.js'\nimport type {\n  CeloTransactionSerializable,\n  TransactionSerializableCIP42,\n  TransactionSerializableCIP64,\n  TransactionSerializedCIP64,\n} from './types.js'\nimport { isCIP64, isEmpty, isPresent } from './utils.js'\n\nexport function serializeTransaction(\n  transaction: CeloTransactionSerializable,\n  signature?: Signature | undefined,\n) {\n  if (isCIP64(transaction))\n    return serializeTransactionCIP64(transaction, signature)\n\n  return serializeTransaction_(transaction, signature)\n}\n\nexport const serializers = {\n  transaction: serializeTransaction,\n} as const satisfies ChainSerializers\n\n//////////////////////////////////////////////////////////////////////////////\n// Serializers\n\nexport type SerializeTransactionCIP64ReturnType = TransactionSerializedCIP64\n\nfunction serializeTransactionCIP64(\n  transaction: TransactionSerializableCIP64,\n  signature?: Signature | undefined,\n): SerializeTransactionCIP64ReturnType {\n  assertTransactionCIP64(transaction)\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    feeCurrency,\n    data,\n  } = transaction\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializeAccessList(accessList),\n    feeCurrency!,\n    ...toYParitySignatureArray(transaction, signature),\n  ]\n\n  return concatHex([\n    '0x7b',\n    toRlp(serializedTransaction),\n  ]) as SerializeTransactionCIP64ReturnType\n}\n\n// maxFeePerGas must be less than 2^256 - 1\nconst MAX_MAX_FEE_PER_GAS = 2n ** 256n - 1n\n\nexport function assertTransactionCIP42(\n  transaction: TransactionSerializableCIP42,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    feeCurrency,\n    gatewayFee,\n    gatewayFeeRecipient,\n  } = transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (gasPrice)\n    throw new BaseError(\n      '`gasPrice` is not a valid CIP-42 Transaction attribute.',\n    )\n\n  if (isPresent(maxFeePerGas) && maxFeePerGas > MAX_MAX_FEE_PER_GAS)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n\n  if (\n    isPresent(maxPriorityFeePerGas) &&\n    isPresent(maxFeePerGas) &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n\n  if (\n    (isPresent(gatewayFee) && isEmpty(gatewayFeeRecipient)) ||\n    (isPresent(gatewayFeeRecipient) && isEmpty(gatewayFee))\n  ) {\n    throw new BaseError(\n      '`gatewayFee` and `gatewayFeeRecipient` must be provided together.',\n    )\n  }\n\n  if (isPresent(feeCurrency) && !isAddress(feeCurrency)) {\n    throw new BaseError(\n      '`feeCurrency` MUST be a token address for CIP-42 transactions.',\n    )\n  }\n\n  if (isPresent(gatewayFeeRecipient) && !isAddress(gatewayFeeRecipient)) {\n    throw new InvalidAddressError(gatewayFeeRecipient)\n  }\n\n  if (isEmpty(feeCurrency) && isEmpty(gatewayFeeRecipient)) {\n    throw new BaseError(\n      'Either `feeCurrency` or `gatewayFeeRecipient` must be provided for CIP-42 transactions.',\n    )\n  }\n}\n\nexport function assertTransactionCIP64(\n  transaction: TransactionSerializableCIP64,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    feeCurrency,\n  } = transaction\n\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n\n  if (gasPrice)\n    throw new BaseError(\n      '`gasPrice` is not a valid CIP-64 Transaction attribute.',\n    )\n\n  if (isPresent(maxFeePerGas) && maxFeePerGas > MAX_MAX_FEE_PER_GAS)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    isPresent(maxPriorityFeePerGas) &&\n    isPresent(maxFeePerGas) &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n\n  if (isPresent(feeCurrency) && !isAddress(feeCurrency)) {\n    throw new BaseError(\n      '`feeCurrency` MUST be a token address for CIP-64 transactions.',\n    )\n  }\n\n  if (isEmpty(feeCurrency)) {\n    throw new BaseError(\n      '`feeCurrency` must be provided for CIP-64 transactions.',\n    )\n  }\n}\n","import { fees } from './fees.js'\nimport { formatters } from './formatters.js'\nimport { serializers } from './serializers.js'\n\nexport const chainConfig = {\n  formatters,\n  serializers,\n  fees,\n} as const\n","import type { ChainFormatters } from '../types/chain.js'\nimport type { Hash } from '../types/misc.js'\nimport type { RpcTransaction } from '../types/rpc.js'\nimport { hexToBigInt } from '../utils/encoding/fromHex.js'\nimport { defineBlock } from '../utils/formatters/block.js'\nimport {\n  defineTransaction,\n  formatTransaction,\n} from '../utils/formatters/transaction.js'\nimport { defineTransactionRequest } from '../utils/formatters/transactionRequest.js'\nimport type {\n  CeloBlockOverrides,\n  CeloRpcTransaction,\n  CeloRpcTransactionRequest,\n  CeloTransaction,\n  CeloTransactionRequest,\n} from './types.js'\nimport { isCIP64 } from './utils.js'\n\nexport const formatters = {\n  block: /*#__PURE__*/ defineBlock({\n    exclude: ['difficulty', 'gasLimit', 'mixHash', 'nonce', 'uncles'],\n    format(\n      args: CeloBlockOverrides & {\n        transactions: Hash[] | CeloRpcTransaction[]\n      },\n    ): CeloBlockOverrides & {\n      transactions: Hash[] | CeloTransaction[]\n    } {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        return {\n          ...formatTransaction(transaction as RpcTransaction),\n          feeCurrency: transaction.feeCurrency,\n          ...(transaction.type !== '0x7b'\n            ? {\n                gatewayFee: transaction.gatewayFee\n                  ? hexToBigInt(transaction.gatewayFee)\n                  : null,\n                gatewayFeeRecipient: transaction.gatewayFeeRecipient || null,\n              }\n            : {}),\n        }\n      }) as Hash[] | CeloTransaction[]\n      return {\n        randomness: args.randomness,\n        transactions,\n      }\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: CeloRpcTransaction): CeloTransaction {\n      const transaction = { feeCurrency: args.feeCurrency } as CeloTransaction\n\n      if (args.type === '0x7b') transaction.type = 'cip64'\n      else {\n        if (args.type === '0x7c') transaction.type = 'cip42'\n\n        transaction.gatewayFee = args.gatewayFee\n          ? hexToBigInt(args.gatewayFee)\n          : null\n        transaction.gatewayFeeRecipient = args.gatewayFeeRecipient\n      }\n\n      return transaction\n    },\n  }),\n\n  transactionRequest: /*#__PURE__*/ defineTransactionRequest({\n    format(args: CeloTransactionRequest): CeloRpcTransactionRequest {\n      const request = {\n        feeCurrency: args.feeCurrency,\n      } as CeloRpcTransactionRequest\n\n      if (isCIP64(args)) {\n        request.type = '0x7b'\n      }\n\n      return request\n    },\n  }),\n} as const satisfies ChainFormatters\n","import { chainConfig } from '../../celo/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const celo = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 42_220,\n  name: 'Celo',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CELO',\n    symbol: 'CELO',\n  },\n  rpcUrls: {\n    default: { http: ['https://forno.celo.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Celo Explorer',\n      url: 'https://celoscan.io',\n      apiUrl: 'https://api.celoscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 13112599,\n    },\n  },\n  testnet: false,\n})\n","import { chainConfig } from '../../celo/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const celoAlfajores = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 44_787,\n  name: 'Alfajores',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CELO',\n    symbol: 'A-CELO',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://alfajores-forno.celo-testnet.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Celo Explorer',\n      url: 'https://explorer.celo.org/alfajores',\n      apiUrl: 'https://explorer.celo.org/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 14569001,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const chiliz = /*#__PURE__*/ defineChain({\n  id: 88_888,\n  name: 'Chiliz Chain',\n  network: 'chiliz-chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CHZ',\n    symbol: 'CHZ',\n  },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://rpc.ankr.com/chiliz',\n        'https://chiliz-rpc.publicnode.com',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Chiliz Explorer',\n      url: 'https://scan.chiliz.com',\n      apiUrl: 'https://scan.chiliz.com/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const classic = /*#__PURE__*/ defineChain({\n  id: 61,\n  name: 'Ethereum Classic',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETC',\n    symbol: 'ETC',\n  },\n  rpcUrls: {\n    default: { http: ['https://etc.rivet.link'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.com/etc/mainnet',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const confluxESpace = /*#__PURE__*/ defineChain({\n  id: 1_030,\n  name: 'Conflux eSpace',\n  nativeCurrency: { name: 'Conflux', symbol: 'CFX', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://evm.confluxrpc.org'],\n      webSocket: ['wss://evm.confluxrpc.org/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'ConfluxScan',\n      url: 'https://evm.confluxscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xEFf0078910f638cd81996cc117bccD3eDf2B072F',\n      blockCreated: 68602935,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const confluxESpaceTestnet = /*#__PURE__*/ defineChain({\n  id: 71,\n  name: 'Conflux eSpace Testnet',\n  network: 'cfx-espace-testnet',\n  testnet: true,\n  nativeCurrency: { name: 'Conflux', symbol: 'CFX', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://evmtestnet.confluxrpc.org'],\n      webSocket: ['wss://evmtestnet.confluxrpc.org/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'ConfluxScan',\n      url: 'https://evmtestnet.confluxscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xEFf0078910f638cd81996cc117bccD3eDf2B072F',\n      blockCreated: 117499050,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const coreDao = /*#__PURE__*/ defineChain({\n  id: 1116,\n  name: 'Core Dao',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Core',\n    symbol: 'CORE',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.coredao.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'CoreDao',\n      url: 'https://scan.coredao.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 11_907_934,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const cronos = /*#__PURE__*/ defineChain({\n  id: 25,\n  name: 'Cronos Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Cronos',\n    symbol: 'CRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm.cronos.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Cronos Explorer',\n      url: 'https://explorer.cronos.org',\n      apiUrl: 'https://explorer-api.cronos.org/mainnet/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1963112,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const cronosTestnet = /*#__PURE__*/ defineChain({\n  id: 338,\n  name: 'Cronos Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CRO',\n    symbol: 'tCRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm-t3.cronos.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Cronos Explorer',\n      url: 'https://cronos.org/explorer/testnet3',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 10191251,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const crossbell = /*#__PURE__*/ defineChain({\n  id: 3_737,\n  name: 'Crossbell',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CSB',\n    symbol: 'CSB',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.crossbell.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'CrossScan',\n      url: 'https://scan.crossbell.io',\n      apiUrl: 'https://scan.crossbell.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 38_246_031,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const cyber = /*#__PURE__*/ defineChain({\n  id: 7_560,\n  name: 'Cyber',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://cyber.alt.technology'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://cyberscan.co',\n      apiUrl: 'https://cyberscan.co/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 0,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const cyberTestnet = /*#__PURE__*/ defineChain({\n  id: 111_557_560,\n  name: 'Cyber Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://cyber-testnet.alt.technology'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://testnet.cyberscan.co',\n      apiUrl: 'https://testnet.cyberscan.co/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xffc391F0018269d4758AEA1a144772E8FB99545E',\n      blockCreated: 304545,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const darwinia = /*#__PURE__*/ defineChain({\n  id: 46,\n  name: 'Darwinia Network',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'RING',\n    symbol: 'RING',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.darwinia.network'],\n      webSocket: ['wss://rpc.darwinia.network'],\n    },\n  },\n  blockExplorers: {\n    default: { name: 'Explorer', url: 'https://darwinia.subscan.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 69420,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const defichainEvm = /*#__PURE__*/ defineChain({\n  id: 1130,\n  network: 'defichain-evm',\n  name: 'DeFiChain EVM Mainnet',\n  nativeCurrency: {\n    name: 'DeFiChain',\n    symbol: 'DFI',\n    decimals: 8,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://eth.mainnet.ocean.jellyfishsdk.com'],\n    },\n    public: {\n      http: ['https://eth.mainnet.ocean.jellyfishsdk.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DeFiScan',\n      url: 'https://meta.defiscan.live',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 137852,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const defichainEvmTestnet = /*#__PURE__*/ defineChain({\n  id: 1131,\n  network: 'defichain-evm-testnet',\n  name: 'DeFiChain EVM Testnet',\n  nativeCurrency: {\n    name: 'DeFiChain',\n    symbol: 'DFI',\n    decimals: 8,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://eth.testnet.ocean.jellyfishsdk.com'],\n    },\n    public: {\n      http: ['https://eth.testnet.ocean.jellyfishsdk.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DeFiScan',\n      url: 'https://meta.defiscan.live/?network=TestNet',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 156462,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const degen = /*#__PURE__*/ defineChain({\n  id: 666666666,\n  name: 'Degen',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Degen',\n    symbol: 'DEGEN',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.degen.tips'],\n      webSocket: ['wss://rpc.degen.tips'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Degen Chain Explorer',\n      url: 'https://explorer.degen.tips',\n      apiUrl: 'https://explorer.degen.tips/api/v2',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const dfk = /*#__PURE__*/ defineChain({\n  id: 53_935,\n  name: 'DFK Chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Jewel',\n    symbol: 'JEWEL',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://subnets.avax.network/defi-kingdoms/dfk-chain/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DFKSubnetScan',\n      url: 'https://subnets.avax.network/defi-kingdoms',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14790551,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const dodochainTestnet = defineChain({\n  id: 53457,\n  name: 'DODOchain Testnet',\n  nativeCurrency: { decimals: 18, name: 'DODO', symbol: 'DODO' },\n  rpcUrls: {\n    default: {\n      http: ['https://dodochain-testnet.alt.technology'],\n      webSocket: ['wss://dodochain-testnet.alt.technology/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DODOchain Testnet (Sepolia) Explorer',\n      url: 'https://testnet-scan.dodochain.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const dogechain = /*#__PURE__*/ defineChain({\n  id: 2_000,\n  name: 'Dogechain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Dogechain',\n    symbol: 'DC',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.dogechain.dog'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DogeChainExplorer',\n      url: 'https://explorer.dogechain.dog',\n      apiUrl: 'https://explorer.dogechain.dog/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const dreyerxMainnet = /*#__PURE__*/ defineChain({\n  id: 23451,\n  name: 'DreyerX Mainnet',\n  nativeCurrency: {\n    name: 'DreyerX',\n    symbol: 'DRX',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.dreyerx.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'DreyerX Scan',\n      url: 'https://scan.dreyerx.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const edgeless = /*#__PURE__*/ defineChain({\n  id: 2_026,\n  name: 'Edgeless Network',\n  nativeCurrency: {\n    name: 'Edgeless Wrapped ETH',\n    symbol: 'EwETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.edgeless.network/http'],\n      webSocket: ['wss://rpc.edgeless.network/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Edgeless Explorer',\n      url: 'https://explorer.edgeless.network',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const edgelessTestnet = /*#__PURE__*/ defineChain({\n  id: 202,\n  name: 'Edgeless Testnet',\n  nativeCurrency: {\n    name: 'Edgeless Wrapped ETH',\n    symbol: 'EwETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://edgeless-testnet.rpc.caldera.xyz/http'],\n      webSocket: ['wss://edgeless-testnet.rpc.caldera.xyz/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Edgeless Testnet Explorer',\n      url: 'https://testnet.explorer.edgeless.network',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const edgeware = /*#__PURE__*/ defineChain({\n  id: 2021,\n  name: 'Edgeware EdgeEVM Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Edgeware',\n    symbol: 'EDG',\n  },\n  rpcUrls: {\n    default: { http: ['https://edgeware-evm.jelliedowl.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Edgscan by Bharathcoorg',\n      url: 'https://edgscan.live',\n      apiUrl: 'https://edgscan.live/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 18117872,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const edgewareTestnet = /*#__PURE__*/ defineChain({\n  id: 2022,\n  name: 'Beresheet BereEVM Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Testnet EDG',\n    symbol: 'tEDG',\n  },\n  rpcUrls: {\n    default: { http: ['https://beresheet-evm.jelliedowl.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Edgscan by Bharathcoorg',\n      url: 'https://testnet.edgscan.live',\n      apiUrl: 'https://testnet.edgscan.live/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const eon = /*#__PURE__*/ defineChain({\n  id: 7_332,\n  name: 'Horizen EON',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ZEN',\n    symbol: 'ZEN',\n  },\n  rpcUrls: {\n    default: { http: ['https://eon-rpc.horizenlabs.io/ethv1'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'EON Explorer',\n      url: 'https://eon-explorer.horizenlabs.io',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const eos = /*#__PURE__*/ defineChain({\n  id: 17777,\n  name: 'EOS EVM',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EOS',\n    symbol: 'EOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.evm.eosnetwork.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'EOS EVM Explorer',\n      url: 'https://explorer.evm.eosnetwork.com',\n      apiUrl: 'https://explorer.evm.eosnetwork.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 7943933,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const eosTestnet = /*#__PURE__*/ defineChain({\n  id: 15557,\n  name: 'EOS EVM Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EOS',\n    symbol: 'EOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.testnet.evm.eosnetwork.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'EOS EVM Testnet Explorer',\n      url: 'https://explorer.testnet.evm.eosnetwork.com',\n      apiUrl: 'https://explorer.testnet.evm.eosnetwork.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 9067940,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const etherlinkTestnet = /*#__PURE__*/ defineChain({\n  id: 128123,\n  name: 'Etherlink Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Tez',\n    symbol: 'XTZ',\n  },\n  rpcUrls: {\n    default: { http: ['https://node.ghostnet.etherlink.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherlink Testnet',\n      url: 'https://testnet-explorer.etherlink.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const evmos = /*#__PURE__*/ defineChain({\n  id: 9_001,\n  name: 'Evmos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Evmos',\n    symbol: 'EVMOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://eth.bd.evmos.org:8545'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Evmos Block Explorer',\n      url: 'https://escan.live',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const evmosTestnet = /*#__PURE__*/ defineChain({\n  id: 9_000,\n  name: 'Evmos Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Evmos',\n    symbol: 'EVMOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://eth.bd.evmos.dev:8545'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Evmos Testnet Block Explorer',\n      url: 'https://evm.evmos.dev/',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const ekta = /*#__PURE__*/ defineChain({\n  id: 1994,\n  name: 'Ekta',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EKTA',\n    symbol: 'EKTA',\n  },\n  rpcUrls: {\n    default: { http: ['https://main.ekta.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ektascan',\n      url: 'https://ektascan.io',\n      apiUrl: 'https://ektascan.io/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const ektaTestnet = /*#__PURE__*/ defineChain({\n  id: 1004,\n  name: 'Ekta Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EKTA',\n    symbol: 'EKTA',\n  },\n  rpcUrls: {\n    default: { http: ['https://test.ekta.io:8545'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Test Ektascan',\n      url: 'https://test.ektascan.io',\n      apiUrl: 'https://test.ektascan.io/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fantom = /*#__PURE__*/ defineChain({\n  id: 250,\n  name: 'Fantom',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Fantom',\n    symbol: 'FTM',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.ankr.com/fantom'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'FTMScan',\n      url: 'https://ftmscan.com',\n      apiUrl: 'https://api.ftmscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 33001987,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fantomSonicTestnet = /*#__PURE__*/ defineChain({\n  id: 64_240,\n  name: 'Fantom Sonic Open Testnet',\n  network: 'fantom-sonic-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Fantom',\n    symbol: 'FTM',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpcapi.sonic.fantom.network'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Fantom Sonic Open Testnet Explorer',\n      url: 'https://public-sonic.fantom.network',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fantomTestnet = /*#__PURE__*/ defineChain({\n  id: 4_002,\n  name: 'Fantom Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Fantom',\n    symbol: 'FTM',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.testnet.fantom.network'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'FTMScan',\n      url: 'https://testnet.ftmscan.com',\n      apiUrl: 'https://testnet.ftmscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 8328688,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fibo = /*#__PURE__*/ defineChain({\n  id: 12306,\n  name: 'Fibo Chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'fibo',\n    symbol: 'FIBO',\n  },\n  rpcUrls: {\n    default: { http: ['https://network.hzroc.art'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'FiboScan',\n      url: 'https://scan.fibochain.org',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const filecoin = /*#__PURE__*/ defineChain({\n  id: 314,\n  name: 'Filecoin Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'filecoin',\n    symbol: 'FIL',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.node.glif.io/rpc/v1'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Filfox',\n      url: 'https://filfox.info/en',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3328594,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const filecoinCalibration = /*#__PURE__*/ defineChain({\n  id: 314_159,\n  name: 'Filecoin Calibration',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'testnet filecoin',\n    symbol: 'tFIL',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.calibration.node.glif.io/rpc/v1'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Filscan',\n      url: 'https://calibration.filscan.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const filecoinHyperspace = /*#__PURE__*/ defineChain({\n  id: 314_1,\n  name: 'Filecoin Hyperspace',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'testnet filecoin',\n    symbol: 'tFIL',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.hyperspace.node.glif.io/rpc/v1'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Filfox',\n      url: 'https://hyperspace.filfox.info/en',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const flare = /*#__PURE__*/ defineChain({\n  id: 14,\n  name: 'Flare Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'flare',\n    symbol: 'FLR',\n  },\n  rpcUrls: {\n    default: { http: ['https://flare-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Flare Explorer',\n      url: 'https://flare-explorer.flare.network',\n      apiUrl: 'https://flare-explorer.flare.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const flareTestnet = /*#__PURE__*/ defineChain({\n  id: 114,\n  name: 'Coston2',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'coston2flare',\n    symbol: 'C2FLR',\n  },\n  rpcUrls: {\n    default: { http: ['https://coston2-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Coston2 Explorer',\n      url: 'https://coston2-explorer.flare.network',\n      apiUrl: 'https://coston2-explorer.flare.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const flowPreviewnet = /*#__PURE__*/ defineChain({\n  id: 646,\n  name: 'FlowEVM Previewnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Flow',\n    symbol: 'FLOW',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://previewnet.evm.nodes.onflow.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Previewnet Explorer',\n      url: 'https://previewnet.flowdiver.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 6205,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const flowMainnet = /*#__PURE__*/ defineChain({\n  id: 747,\n  name: 'FlowEVM Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Flow',\n    symbol: 'FLOW',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.evm.nodes.onflow.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mainnet Explorer',\n      url: 'https://flowdiver.io',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const flowTestnet = /*#__PURE__*/ defineChain({\n  id: 545,\n  name: 'FlowEVM Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Flow',\n    symbol: 'FLOW',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.evm.nodes.onflow.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Flow Diver',\n      url: 'https://testnet.flowdiver.io',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const foundry = /*#__PURE__*/ defineChain({\n  id: 31_337,\n  name: 'Foundry',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['http://127.0.0.1:8545'],\n      webSocket: ['ws://127.0.0.1:8545'],\n    },\n  },\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const fraxtal = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 252,\n  name: 'Fraxtal',\n  nativeCurrency: { name: 'Frax Ether', symbol: 'frxETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.frax.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'fraxscan',\n      url: 'https://fraxscan.com',\n      apiUrl: 'https://api.fraxscan.com/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x66CC916Ed5C6C2FA97014f7D1cD141528Ae171e4',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x36cb65c1967A0Fb0EEE11569C51C2f2aA1Ca6f6D',\n        blockCreated: 19135323,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x34C0bD5877A5Ee7099D0f5688D65F4bB9158BDE2',\n        blockCreated: 19135323,\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 17000 // holesky\n\nexport const fraxtalTestnet = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 2522,\n  name: 'Fraxtal Testnet',\n  nativeCurrency: { name: 'Frax Ether', symbol: 'frxETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.frax.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'fraxscan testnet',\n      url: 'https://holesky.fraxscan.com',\n      apiUrl: 'https://api-holesky.fraxscan.com/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x715EA64DA13F4d0831ece4Ad3E8c1aa013167F32',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xB9c64BfA498d5b9a8398Ed6f46eb76d90dE5505d',\n        blockCreated: 318416,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x0BaafC217162f64930909aD9f2B27125121d6332',\n        blockCreated: 318416,\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const funkiSepolia = defineChain({\n  ...chainConfig,\n  id: 3397901,\n  network: 'funkiSepolia',\n  name: 'Funki Sepolia Sandbox',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://funki-testnet.alt.technology'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Funki Sepolia Sandbox Explorer',\n      url: 'https://sepolia-sandbox.funkichain.com/',\n    },\n  },\n  testnet: true,\n  contracts: {\n    ...chainConfig.contracts,\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1620204,\n    },\n  },\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fuse = /*#__PURE__*/ defineChain({\n  id: 122,\n  name: 'Fuse',\n  nativeCurrency: { name: 'Fuse', symbol: 'FUSE', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc.fuse.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Fuse Explorer',\n      url: 'https://explorer.fuse.io',\n      apiUrl: 'https://explorer.fuse.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 16146628,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const fuseSparknet = /*#__PURE__*/ defineChain({\n  id: 123,\n  name: 'Fuse Sparknet',\n  nativeCurrency: { name: 'Spark', symbol: 'SPARK', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc.fusespark.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Sparkent Explorer',\n      url: 'https://explorer.fusespark.io',\n      apiUrl: 'https://explorer.fusespark.io/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const iotex = /*#__PURE__*/ defineChain({\n  id: 4_689,\n  name: 'IoTeX',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'IoTeX',\n    symbol: 'IOTX',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://babel-api.mainnet.iotex.io'],\n      webSocket: ['wss://babel-api.mainnet.iotex.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'IoTeXScan',\n      url: 'https://iotexscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 22163670,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const iotexTestnet = /*#__PURE__*/ defineChain({\n  id: 4_690,\n  name: 'IoTeX Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'IoTeX',\n    symbol: 'IOTX',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://babel-api.testnet.iotex.io'],\n      webSocket: ['wss://babel-api.testnet.iotex.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'IoTeXScan',\n      url: 'https://testnet.iotexscan.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const jbc = /*#__PURE__*/ defineChain({\n  id: 8899,\n  name: 'JIBCHAIN L1',\n  network: 'jbc',\n  nativeCurrency: { name: 'JBC', symbol: 'JBC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-l1.jibchain.net'],\n    },\n    public: {\n      http: ['https://rpc-l1.jibchain.net'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://exp-l1.jibchain.net',\n      apiUrl: 'https://exp-l1.jibchain.net/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xc0C8C486D1466C57Efe13C2bf000d4c56F47CBdC',\n      blockCreated: 2299048,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const jbcTestnet = /*#__PURE__*/ defineChain({\n  id: 88991,\n  name: 'Jibchain Testnet',\n  nativeCurrency: { name: 'tJBC', symbol: 'tJBC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.jibchain.net'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://exp.testnet.jibchain.net',\n      apiUrl: 'https://exp.testnet.jibchain.net/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xa1a858ad9041B4741e620355a3F96B3c78e70ecE',\n      blockCreated: 32848,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const karura = /*#__PURE__*/ defineChain({\n  id: 686,\n  name: 'Karura',\n  network: 'karura',\n  nativeCurrency: {\n    name: 'Karura',\n    symbol: 'KAR',\n    decimals: 18,\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://eth-rpc-karura.aca-api.network'],\n      webSocket: ['wss://eth-rpc-karura.aca-api.network'],\n    },\n    default: {\n      http: ['https://eth-rpc-karura.aca-api.network'],\n      webSocket: ['wss://eth-rpc-karura.aca-api.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Karura Blockscout',\n      url: 'https://blockscout.karura.network',\n      apiUrl: 'https://blockscout.karura.network/api',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const gobi = /*#__PURE__*/ defineChain({\n  id: 1_663,\n  name: 'Horizen Gobi Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Test ZEN',\n    symbol: 'tZEN',\n  },\n  rpcUrls: {\n    default: { http: ['https://gobi-testnet.horizenlabs.io/ethv1'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Gobi Explorer',\n      url: 'https://gobi-explorer.horizen.io',\n    },\n  },\n  contracts: {},\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const goerli = /*#__PURE__*/ defineChain({\n  id: 5,\n  name: 'Goerli',\n  nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.ankr.com/eth_goerli'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli.etherscan.io',\n      apiUrl: 'https://api-goerli.etherscan.io/api',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    ensUniversalResolver: {\n      address: '0xfc4AC75C46C914aF5892d6d3eFFcebD7917293F1',\n      blockCreated: 10_339_206,\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 6507670,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const gnosis = /*#__PURE__*/ defineChain({\n  id: 100,\n  name: 'Gnosis',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Gnosis',\n    symbol: 'xDAI',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.gnosischain.com'],\n      webSocket: ['wss://rpc.gnosischain.com/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Gnosisscan',\n      url: 'https://gnosisscan.io',\n      apiUrl: 'https://api.gnosisscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 21022491,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const gnosisChiado = /*#__PURE__*/ defineChain({\n  id: 10_200,\n  name: 'Gnosis Chiado',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Gnosis',\n    symbol: 'xDAI',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.chiadochain.net'],\n      webSocket: ['wss://rpc.chiadochain.net/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.chiadochain.net',\n      apiUrl: 'https://blockscout.chiadochain.net/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 4967313,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const hardhat = /*#__PURE__*/ defineChain({\n  id: 31_337,\n  name: 'Hardhat',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['http://127.0.0.1:8545'] },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const harmonyOne = /*#__PURE__*/ defineChain({\n  id: 1_666_600_000,\n  name: 'Harmony One',\n  nativeCurrency: {\n    name: 'Harmony',\n    symbol: 'ONE',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.ankr.com/harmony'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Harmony Explorer',\n      url: 'https://explorer.harmony.one',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 24185753,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const haqqMainnet = /*#__PURE__*/ defineChain({\n  id: 11235,\n  name: 'HAQQ Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Islamic Coin',\n    symbol: 'ISLM',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.eth.haqq.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'HAQQ Explorer',\n      url: 'https://explorer.haqq.network',\n      apiUrl: 'https://explorer.haqq.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const haqqTestedge2 = /*#__PURE__*/ defineChain({\n  id: 54211,\n  name: 'HAQQ Testedge 2',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Islamic Coin',\n    symbol: 'ISLMT',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.eth.testedge2.haqq.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'HAQQ Explorer',\n      url: 'https://explorer.testedge2.haqq.network',\n      apiUrl: 'https://explorer.testedge2.haqq.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const hedera = /*#__PURE__*/ defineChain({\n  id: 295,\n  name: 'Hedera Mainnet',\n  network: 'hedera-mainnet',\n  nativeCurrency: {\n    symbol: 'HBAR',\n    name: 'HBAR',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.hashio.io/api'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Hashscan',\n      url: 'https://hashscan.io/mainnet',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const hederaTestnet = /*#__PURE__*/ defineChain({\n  id: 296,\n  name: 'Hedera Testnet',\n  network: 'hedera-testnet',\n  nativeCurrency: {\n    symbol: 'HBAR',\n    name: 'HBAR',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.hashio.io/api'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Hashscan',\n      url: 'https://hashscan.io/testnet',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const hederaPreviewnet = /*#__PURE__*/ defineChain({\n  id: 297,\n  name: 'Hedera Previewnet',\n  network: 'hedera-previewnet',\n  nativeCurrency: {\n    symbol: 'HBAR',\n    name: 'HBAR',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://previewnet.hashio.io/api'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Hashscan',\n      url: 'https://hashscan.io/previewnet',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const holesky = /*#__PURE__*/ defineChain({\n  id: 17000,\n  name: 'Holesky',\n  nativeCurrency: { name: 'Holesky Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://ethereum-holesky-rpc.publicnode.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://holesky.etherscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 77,\n    },\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n      blockCreated: 801613,\n    },\n    ensUniversalResolver: {\n      address: '0xa6AC935D4971E3CD133b950aE053bECD16fE7f3b',\n      blockCreated: 973484,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const immutableZkEvm = /*#__PURE__*/ defineChain({\n  id: 13371,\n  name: 'Immutable zkEVM',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Immutable Coin',\n    symbol: 'IMX',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.immutable.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Immutable Explorer',\n      url: 'https://explorer.immutable.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x236bdA4589e44e6850f5aC6a74BfCa398a86c6c0',\n      blockCreated: 4335972,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const immutableZkEvmTestnet = /*#__PURE__*/ defineChain({\n  id: 13473,\n  name: 'Immutable zkEVM Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Immutable Coin',\n    symbol: 'IMX',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.immutable.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Immutable Testnet Explorer',\n      url: 'https://explorer.testnet.immutable.com/',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x2CC787Ed364600B0222361C4188308Fa8E68bA60',\n      blockCreated: 5977391,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const inEVM = /*#__PURE__*/ defineChain({\n  id: 2525,\n  name: 'inEVM Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Injective',\n    symbol: 'INJ',\n  },\n  rpcUrls: {\n    default: { http: ['https://mainnet.rpc.inevm.com/http'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'inEVM Explorer',\n      url: 'https://inevm.calderaexplorer.xyz',\n      apiUrl: 'https://inevm.calderaexplorer.xyz/api/v2',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 118606,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kakarotSepolia = /*#__PURE__*/ defineChain({\n  id: 107107114116,\n  name: 'Kakarot Sepolia',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia-rpc.kakarot.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kakarot Scan',\n      url: 'https://sepolia.kakarotscan.org',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kava = /*#__PURE__*/ defineChain({\n  id: 2222,\n  name: 'Kava EVM',\n  network: 'kava-mainnet',\n  nativeCurrency: {\n    name: 'Kava',\n    symbol: 'KAVA',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://evm.kava.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kava EVM Explorer',\n      url: 'https://kavascan.com',\n      apiUrl: 'https://kavascan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 3661165,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kavaTestnet = /*#__PURE__*/ defineChain({\n  id: 2221,\n  name: 'Kava EVM Testnet',\n  network: 'kava-testnet',\n  nativeCurrency: {\n    name: 'Kava',\n    symbol: 'KAVA',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://evm.testnet.kava.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kava EVM Testnet Explorer',\n      url: 'https://testnet.kavascan.com/',\n      apiUrl: 'https://testnet.kavascan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xDf1D724A7166261eEB015418fe8c7679BBEa7fd6',\n      blockCreated: 7242179,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kcc = /*#__PURE__*/ defineChain({\n  id: 321,\n  name: 'KCC Mainnet',\n  network: 'KCC Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'KCS',\n    symbol: 'KCS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://kcc-rpc.com'],\n    },\n    public: {\n      http: ['https://kcc-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: { name: 'KCC Explorer', url: 'https://explorer.kcc.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 11760430,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const klaytn = /*#__PURE__*/ defineChain({\n  id: 8_217,\n  name: 'Klaytn',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Klaytn',\n    symbol: 'KLAY',\n  },\n  rpcUrls: {\n    default: { http: ['https://public-en-cypress.klaytn.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'KlaytnScope',\n      url: 'https://scope.klaytn.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 96002415,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const klaytnBaobab = /*#__PURE__*/ defineChain({\n  id: 1_001,\n  name: 'Klaytn Baobab Testnet',\n  network: 'klaytn-baobab',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Baobab Klaytn',\n    symbol: 'KLAY',\n  },\n  rpcUrls: {\n    default: { http: ['https://public-en-baobab.klaytn.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'KlaytnScope',\n      url: 'https://baobab.klaytnscope.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 123390593,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kroma = /*#__PURE__*/ defineChain({\n  id: 255,\n  name: 'Kroma',\n  nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.kroma.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kroma Explorer',\n      url: 'https://blockscout.kroma.network',\n      apiUrl: 'https://blockscout.kroma.network/api',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const kromaSepolia = /*#__PURE__*/ defineChain({\n  id: 2358,\n  name: 'Kroma Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.sepolia.kroma.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kroma Sepolia Explorer',\n      url: 'https://blockscout.sepolia.kroma.network',\n      apiUrl: 'https://blockscout.sepolia.kroma.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const l3x = /*#__PURE__*/ defineChain({\n  id: 12324,\n  name: 'L3X Protocol',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-mainnet.l3x.com'],\n      webSocket: ['wss://rpc-mainnet.l3x.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'L3X Mainnet Explorer',\n      url: 'https://explorer.l3x.com',\n      apiUrl: 'https://explorer.l3x.com/api/v2',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const l3xTestnet = /*#__PURE__*/ defineChain({\n  id: 12325,\n  name: 'L3X Protocol Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-testnet.l3x.com'],\n      webSocket: ['wss://rpc-testnet.l3x.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'L3X Testnet Explorer',\n      url: 'https://explorer-testnet.l3x.com',\n      apiUrl: 'https://explorer-testnet.l3x.com/api/v2',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lightlinkPegasus = /*#__PURE__*/ defineChain({\n  id: 1_891,\n  name: 'LightLink Pegasus Testnet',\n  network: 'lightlink-pegasus',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://replicator.pegasus.lightlink.io/rpc/v1'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'LightLink Pegasus Explorer',\n      url: 'https://pegasus.lightlink.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lightlinkPhoenix = /*#__PURE__*/ defineChain({\n  id: 1_890,\n  name: 'LightLink Phoenix Mainnet',\n  network: 'lightlink-phoenix',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://replicator.phoenix.lightlink.io/rpc/v1'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'LightLink Phoenix Explorer',\n      url: 'https://phoenix.lightlink.io',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const linea = /*#__PURE__*/ defineChain({\n  id: 59_144,\n  name: 'Linea Mainnet',\n  nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.linea.build'],\n      webSocket: ['wss://rpc.linea.build'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://lineascan.build',\n      apiUrl: 'https://api.lineascan.build/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 42,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lineaGoerli = /*#__PURE__*/ defineChain({\n  id: 59_140,\n  name: 'Linea Goerli Testnet',\n  nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.goerli.linea.build'],\n      webSocket: ['wss://rpc.goerli.linea.build'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli.lineascan.build',\n      apiUrl: 'https://api-goerli.lineascan.build/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 498623,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lineaSepolia = /*#__PURE__*/ defineChain({\n  id: 59_141,\n  name: 'Linea Sepolia Testnet',\n  nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.sepolia.linea.build'],\n      webSocket: ['wss://rpc.sepolia.linea.build'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://sepolia.lineascan.build',\n      apiUrl: 'https://api-sepolia.lineascan.build/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 227427,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lineaTestnet = /*#__PURE__*/ defineChain({\n  id: 59_140,\n  name: 'Linea Goerli Testnet',\n  nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.goerli.linea.build'],\n      webSocket: ['wss://rpc.goerli.linea.build'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli.lineascan.build',\n      apiUrl: 'https://goerli.lineascan.build/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 498623,\n    },\n  },\n  testnet: true,\n})\n","import { maxUint16 } from '../../constants/number.js'\n\nexport const gasPerPubdataDefault = 50000n\nexport const maxBytecodeSize = maxUint16 * 32n\n","import type { ChainFormatters } from '../types/chain.js'\nimport type { Hash } from '../types/misc.js'\nimport { hexToBigInt, hexToNumber } from '../utils/encoding/fromHex.js'\nimport { hexToBytes } from '../utils/encoding/toBytes.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { defineBlock } from '../utils/formatters/block.js'\nimport { formatLog } from '../utils/formatters/log.js'\nimport { defineTransaction } from '../utils/formatters/transaction.js'\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js'\nimport { defineTransactionRequest } from '../utils/formatters/transactionRequest.js'\nimport { gasPerPubdataDefault } from './constants/number.js'\nimport type {\n  ZkSyncBlockOverrides,\n  ZkSyncRpcBlockOverrides,\n} from './types/block.js'\nimport type { ZkSyncL2ToL1Log, ZkSyncLog } from './types/log.js'\nimport type {\n  ZkSyncRpcTransaction,\n  ZkSyncRpcTransactionReceiptOverrides,\n  ZkSyncRpcTransactionRequest,\n  ZkSyncTransaction,\n  ZkSyncTransactionReceipt,\n  ZkSyncTransactionRequest,\n} from './types/transaction.js'\n\nexport const formatters = {\n  block: /*#__PURE__*/ defineBlock({\n    format(\n      args: ZkSyncRpcBlockOverrides & {\n        transactions: Hash[] | ZkSyncRpcTransaction[]\n      },\n    ): ZkSyncBlockOverrides & {\n      transactions: Hash[] | ZkSyncTransaction[]\n    } {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        const formatted = formatters.transaction?.format(\n          transaction as ZkSyncRpcTransaction,\n        ) as ZkSyncTransaction\n        if (formatted.typeHex === '0x71') formatted.type = 'eip712'\n        else if (formatted.typeHex === '0xff') formatted.type = 'priority'\n        return formatted\n      }) as Hash[] | ZkSyncTransaction[]\n      return {\n        l1BatchNumber: args.l1BatchNumber\n          ? hexToBigInt(args.l1BatchNumber)\n          : null,\n        l1BatchTimestamp: args.l1BatchTimestamp\n          ? hexToBigInt(args.l1BatchTimestamp)\n          : null,\n        transactions,\n      }\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: ZkSyncRpcTransaction): ZkSyncTransaction {\n      const transaction = {} as ZkSyncTransaction\n      if (args.type === '0x71') transaction.type = 'eip712'\n      else if (args.type === '0xff') transaction.type = 'priority'\n      return {\n        ...transaction,\n        l1BatchNumber: args.l1BatchNumber\n          ? hexToBigInt(args.l1BatchNumber)\n          : null,\n        l1BatchTxIndex: args.l1BatchTxIndex\n          ? hexToBigInt(args.l1BatchTxIndex)\n          : null,\n      } as ZkSyncTransaction\n    },\n  }),\n  transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n    format(\n      args: ZkSyncRpcTransactionReceiptOverrides,\n    ): ZkSyncTransactionReceipt {\n      return {\n        l1BatchNumber: args.l1BatchNumber\n          ? hexToBigInt(args.l1BatchNumber)\n          : null,\n        l1BatchTxIndex: args.l1BatchTxIndex\n          ? hexToBigInt(args.l1BatchTxIndex)\n          : null,\n        logs: args.logs.map((log) => {\n          return {\n            ...formatLog(log),\n            l1BatchNumber: log.l1BatchNumber\n              ? hexToBigInt(log.l1BatchNumber)\n              : null,\n            transactionLogIndex: hexToNumber(log.transactionLogIndex),\n            logType: log.logType,\n          }\n        }) as ZkSyncLog[],\n        l2ToL1Logs: args.l2ToL1Logs.map((l2ToL1Log) => {\n          return {\n            blockNumber: hexToBigInt(l2ToL1Log.blockHash),\n            blockHash: l2ToL1Log.blockHash,\n            l1BatchNumber: hexToBigInt(l2ToL1Log.l1BatchNumber),\n            transactionIndex: hexToBigInt(l2ToL1Log.transactionIndex),\n            shardId: hexToBigInt(l2ToL1Log.shardId),\n            isService: l2ToL1Log.isService,\n            sender: l2ToL1Log.sender,\n            key: l2ToL1Log.key,\n            value: l2ToL1Log.value,\n            transactionHash: l2ToL1Log.transactionHash,\n            logIndex: hexToBigInt(l2ToL1Log.logIndex),\n          }\n        }) as ZkSyncL2ToL1Log[],\n      } as ZkSyncTransactionReceipt\n    },\n  }),\n  transactionRequest: /*#__PURE__*/ defineTransactionRequest({\n    exclude: [\n      'customSignature',\n      'factoryDeps',\n      'gasPerPubdata',\n      'paymaster',\n      'paymasterInput',\n    ],\n    format(args: ZkSyncTransactionRequest): ZkSyncRpcTransactionRequest {\n      if (\n        args.gasPerPubdata ||\n        (args.paymaster && args.paymasterInput) ||\n        args.factoryDeps ||\n        args.customSignature\n      )\n        return {\n          eip712Meta: {\n            ...(args.gasPerPubdata\n              ? { gasPerPubdata: toHex(args.gasPerPubdata) }\n              : { gasPerPubdata: toHex(gasPerPubdataDefault) }),\n            ...(args.paymaster && args.paymasterInput\n              ? {\n                  paymasterParams: {\n                    paymaster: args.paymaster,\n                    paymasterInput: Array.from(hexToBytes(args.paymasterInput)),\n                  },\n                }\n              : {}),\n            ...(args.factoryDeps\n              ? {\n                  factoryDeps: args.factoryDeps.map((dep) =>\n                    Array.from(hexToBytes(dep)),\n                  ),\n                }\n              : {}),\n            ...(args.customSignature\n              ? {\n                  customSignature: Array.from(hexToBytes(args.customSignature)),\n                }\n              : {}),\n          },\n          type: '0x71',\n        } as unknown as ZkSyncRpcTransactionRequest\n      return {} as ZkSyncRpcTransactionRequest\n    },\n  }),\n} as const satisfies ChainFormatters\n","import { BaseError } from '../../errors/base.js'\n\nexport type InvalidEip712TransactionErrorType =\n  InvalidEip712TransactionError & {\n    name: 'InvalidEip712TransactionError'\n  }\nexport class InvalidEip712TransactionError extends BaseError {\n  override name = 'InvalidEip712TransactionError'\n\n  constructor() {\n    super(\n      [\n        'Transaction is not an EIP712 transaction.',\n        '',\n        'Transaction must:',\n        '  - include `type: \"eip712\"`',\n        '  - include one of the following: `customSignature`, `paymaster`, `paymasterInput`, `gasPerPubdata`, `factoryDeps`',\n      ].join('\\n'),\n    )\n  }\n}\n","import type { ExactPartial } from '../../types/utils.js'\nimport type { ZkSyncTransactionSerializable } from '../types/transaction.js'\n\nexport function isEIP712Transaction(\n  transaction: ExactPartial<ZkSyncTransactionSerializable>,\n) {\n  if (transaction.type === 'eip712') return true\n  if (\n    ('customSignature' in transaction && transaction.customSignature) ||\n    ('paymaster' in transaction && transaction.paymaster) ||\n    ('paymasterInput' in transaction && transaction.paymasterInput) ||\n    ('gasPerPubdata' in transaction &&\n      typeof transaction.gasPerPubdata === 'bigint') ||\n    ('factoryDeps' in transaction && transaction.factoryDeps)\n  )\n    return true\n  return false\n}\n","import { InvalidAddressError } from '../../errors/address.js'\nimport { BaseError } from '../../errors/base.js'\nimport { InvalidChainIdError } from '../../errors/chain.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddress } from '../../utils/address/isAddress.js'\nimport { InvalidEip712TransactionError } from '../errors/transaction.js'\nimport type {\n  ZkSyncTransactionSerializable,\n  ZkSyncTransactionSerializableEIP712,\n} from '../types/transaction.js'\nimport { isEIP712Transaction } from './isEip712Transaction.js'\n\nexport function assertEip712Transaction(\n  transaction: ExactPartial<ZkSyncTransactionSerializable>,\n) {\n  const { chainId, to, from, paymaster, paymasterInput } =\n    transaction as ZkSyncTransactionSerializableEIP712\n\n  if (!isEIP712Transaction(transaction))\n    throw new InvalidEip712TransactionError()\n  if (!chainId || chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (from && !isAddress(from)) throw new InvalidAddressError({ address: from })\n  if (paymaster && !isAddress(paymaster))\n    throw new InvalidAddressError({ address: paymaster })\n  if (paymaster && !paymasterInput) {\n    throw new BaseError(\n      '`paymasterInput` must be provided when `paymaster` is defined',\n    )\n  }\n  if (!paymaster && paymasterInput) {\n    throw new BaseError(\n      '`paymaster` must be provided when `paymasterInput` is defined',\n    )\n  }\n}\n","import type { Signature } from '../index.js'\nimport type { ChainSerializers } from '../types/chain.js'\nimport type { TransactionSerializable } from '../types/transaction.js'\nimport { concatHex } from '../utils/data/concat.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { toRlp } from '../utils/encoding/toRlp.js'\nimport { serializeTransaction as serializeTransaction_ } from '../utils/transaction/serializeTransaction.js'\nimport { gasPerPubdataDefault } from './constants/number.js'\nimport type {\n  ZkSyncTransactionSerializable,\n  ZkSyncTransactionSerializableEIP712,\n  ZkSyncTransactionSerializedEIP712,\n} from './types/transaction.js'\nimport { assertEip712Transaction } from './utils/assertEip712Transaction.js'\nimport { isEIP712Transaction } from './utils/isEip712Transaction.js'\n\nexport function serializeTransaction(\n  transaction: ZkSyncTransactionSerializable,\n  signature?: Signature | undefined,\n) {\n  if (isEIP712Transaction(transaction))\n    return serializeTransactionEIP712(\n      transaction as ZkSyncTransactionSerializableEIP712,\n    )\n  return serializeTransaction_(\n    transaction as TransactionSerializable,\n    signature,\n  )\n}\n\nexport const serializers = {\n  transaction: serializeTransaction,\n} as const satisfies ChainSerializers\n\nexport type SerializeTransactionEIP712ReturnType =\n  ZkSyncTransactionSerializedEIP712\n\nfunction serializeTransactionEIP712(\n  transaction: ZkSyncTransactionSerializableEIP712,\n): SerializeTransactionEIP712ReturnType {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    from,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    customSignature,\n    factoryDeps,\n    paymaster,\n    paymasterInput,\n    gasPerPubdata,\n    data,\n  } = transaction\n\n  assertEip712Transaction(transaction)\n\n  const serializedTransaction = [\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x0',\n    toHex(chainId),\n    toHex(''),\n    toHex(''),\n    toHex(chainId),\n    from ?? '0x',\n    gasPerPubdata ? toHex(gasPerPubdata) : toHex(gasPerPubdataDefault),\n    factoryDeps ?? [],\n    customSignature ?? '0x', // EIP712 signature\n    paymaster && paymasterInput ? [paymaster, paymasterInput] : [],\n  ]\n\n  return concatHex([\n    '0x71',\n    toRlp(serializedTransaction),\n  ]) as SerializeTransactionEIP712ReturnType\n}\n","import { BaseError } from '../../errors/base.js'\n\nexport type BytecodeLengthExceedsMaxSizeErrorType =\n  BytecodeLengthExceedsMaxSizeError & {\n    name: 'BytecodeLengthExceedsMaxSizeError'\n  }\n\nexport class BytecodeLengthExceedsMaxSizeError extends BaseError {\n  override name = 'BytecodeLengthExceedsMaxSizeError'\n  constructor({\n    givenLength,\n    maxBytecodeSize,\n  }: { givenLength: number; maxBytecodeSize: bigint }) {\n    super(\n      `Bytecode cannot be longer than ${maxBytecodeSize} bytes. Given length: ${givenLength}`,\n    )\n  }\n}\n\nexport type BytecodeLengthInWordsMustBeOddErrorType =\n  BytecodeLengthInWordsMustBeOddError & {\n    name: 'BytecodeLengthInWordsMustBeOddError'\n  }\n\nexport class BytecodeLengthInWordsMustBeOddError extends BaseError {\n  override name = 'BytecodeLengthInWordsMustBeOddError'\n  constructor({ givenLengthInWords }: { givenLengthInWords: number }) {\n    super(\n      `Bytecode length in 32-byte words must be odd. Given length in words: ${givenLengthInWords}`,\n    )\n  }\n}\n\nexport type BytecodeLengthMustBeDivisibleBy32ErrorType =\n  BytecodeLengthMustBeDivisibleBy32Error & {\n    name: 'BytecodeLengthMustBeDivisibleBy32Error'\n  }\n\nexport class BytecodeLengthMustBeDivisibleBy32Error extends BaseError {\n  override name = 'BytecodeLengthMustBeDivisibleBy32Error'\n  constructor({ givenLength }: { givenLength: number }) {\n    super(\n      `The bytecode length in bytes must be divisible by 32. Given length: ${givenLength}`,\n    )\n  }\n}\n","import { formatters } from './formatters.js'\nimport { serializers } from './serializers.js'\nimport { getEip712Domain } from './utils/getEip712Domain.js'\n\nexport const chainConfig = {\n  formatters,\n  serializers,\n  custom: {\n    getEip712Domain,\n  },\n} as const\n","import { toHex } from '../../utils/encoding/toHex.js'\nimport { gasPerPubdataDefault } from '../constants/number.js'\nimport type { EIP712DomainFn } from '../types/eip712.js'\nimport type {\n  ZkSyncEIP712TransactionSignable,\n  ZkSyncTransactionSerializable,\n  ZkSyncTransactionSerializableEIP712,\n} from '../types/transaction.js'\nimport { assertEip712Transaction } from './assertEip712Transaction.js'\nimport { hashBytecode } from './hashBytecode.js'\n\nexport const getEip712Domain: EIP712DomainFn<\n  ZkSyncTransactionSerializable,\n  ZkSyncEIP712TransactionSignable\n> = (transaction) => {\n  assertEip712Transaction(transaction)\n\n  const message = transactionToMessage(\n    transaction as ZkSyncTransactionSerializableEIP712,\n  )\n\n  return {\n    domain: {\n      name: 'zkSync',\n      version: '2',\n      chainId: transaction.chainId,\n    },\n    types: {\n      Transaction: [\n        { name: 'txType', type: 'uint256' },\n        { name: 'from', type: 'uint256' },\n        { name: 'to', type: 'uint256' },\n        { name: 'gasLimit', type: 'uint256' },\n        { name: 'gasPerPubdataByteLimit', type: 'uint256' },\n        { name: 'maxFeePerGas', type: 'uint256' },\n        { name: 'maxPriorityFeePerGas', type: 'uint256' },\n        { name: 'paymaster', type: 'uint256' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'value', type: 'uint256' },\n        { name: 'data', type: 'bytes' },\n        { name: 'factoryDeps', type: 'bytes32[]' },\n        { name: 'paymasterInput', type: 'bytes' },\n      ],\n    },\n    primaryType: 'Transaction',\n    message: message,\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////\n// Utilities\n\nfunction transactionToMessage(\n  transaction: ZkSyncTransactionSerializableEIP712,\n): ZkSyncEIP712TransactionSignable {\n  const {\n    gas,\n    nonce,\n    to,\n    from,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    factoryDeps,\n    paymaster,\n    paymasterInput,\n    gasPerPubdata,\n    data,\n  } = transaction\n\n  return {\n    txType: 113n,\n    from: BigInt(from),\n    to: to ? BigInt(to) : 0n,\n    gasLimit: gas ?? 0n,\n    gasPerPubdataByteLimit: gasPerPubdata ?? gasPerPubdataDefault,\n    maxFeePerGas: maxFeePerGas ?? 0n,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ?? 0n,\n    paymaster: paymaster ? BigInt(paymaster) : 0n,\n    nonce: nonce ? BigInt(nonce) : 0n,\n    value: value ?? 0n,\n    data: data ? data : '0x0',\n    factoryDeps: factoryDeps?.map((dep) => toHex(hashBytecode(dep))) ?? [],\n    paymasterInput: paymasterInput ? paymasterInput : '0x',\n  }\n}\n","import type { Hex } from '../../types/misc.js'\nimport { pad } from '../../utils/data/pad.js'\nimport { toBytes } from '../../utils/encoding/toBytes.js'\nimport { sha256 } from '../../utils/hash/sha256.js'\nimport { maxBytecodeSize } from '../constants/number.js'\nimport {\n  BytecodeLengthExceedsMaxSizeError,\n  BytecodeLengthInWordsMustBeOddError,\n  BytecodeLengthMustBeDivisibleBy32Error,\n} from '../errors/bytecode.js'\n\nexport function hashBytecode(bytecode: Hex): Uint8Array {\n  const bytecodeBytes = toBytes(bytecode)\n  if (bytecodeBytes.length % 32 !== 0)\n    throw new BytecodeLengthMustBeDivisibleBy32Error({\n      givenLength: bytecodeBytes.length,\n    })\n\n  if (bytecodeBytes.length > maxBytecodeSize)\n    throw new BytecodeLengthExceedsMaxSizeError({\n      givenLength: bytecodeBytes.length,\n      maxBytecodeSize,\n    })\n\n  const hashStr = sha256(bytecodeBytes)\n  const hash = toBytes(hashStr)\n\n  // Note that the length of the bytecode\n  // should be provided in 32-byte words.\n  const bytecodeLengthInWords = bytecodeBytes.length / 32\n  if (bytecodeLengthInWords % 2 === 0) {\n    throw new BytecodeLengthInWordsMustBeOddError({\n      givenLengthInWords: bytecodeLengthInWords,\n    })\n  }\n\n  const bytecodeLength = toBytes(bytecodeLengthInWords)\n\n  // The bytecode should always take the first 2 bytes of the bytecode hash,\n  // so we pad it from the left in case the length is smaller than 2 bytes.\n  const bytecodeLengthPadded = pad(bytecodeLength, { size: 2 })\n\n  const codeHashVersion = new Uint8Array([1, 0])\n  hash.set(codeHashVersion, 0)\n  hash.set(bytecodeLengthPadded, 2)\n\n  return hash\n}\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const lisk = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 1135,\n  name: 'Lisk',\n  network: 'lisk',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.api.lisk.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.lisk.com',\n      apiUrl: 'https://blockscout.lisk.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xA9d71E1dd7ca26F26e656E66d6AA81ed7f745bf0',\n    },\n  },\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const liskSepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 4202,\n  network: 'lisk-sepolia',\n  name: 'Lisk Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.sepolia-api.lisk.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://sepolia-blockscout.lisk.com',\n      apiUrl: 'https://sepolia-blockscout.lisk.com/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xA0E35F56C318DE1bD5D9ca6A94Fe7e37C5663348',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xe3d90F21490686Ec7eF37BE788E02dfC12787264',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x1Fb30e446eA791cd1f011675E5F3f5311b70faF5',\n      },\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const localhost = /*#__PURE__*/ defineChain({\n  id: 1_337,\n  name: 'Localhost',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['http://127.0.0.1:8545'] },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const lukso = /*#__PURE__*/ defineChain({\n  id: 42,\n  network: 'lukso',\n  name: 'LUKSO',\n  nativeCurrency: {\n    name: 'LUKSO',\n    symbol: 'LYX',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.mainnet.lukso.network'],\n      webSocket: ['wss://ws-rpc.mainnet.lukso.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'LUKSO Mainnet Explorer',\n      url: 'https://explorer.execution.mainnet.lukso.network',\n      apiUrl: 'https://api.explorer.execution.mainnet.lukso.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 468183,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const luksoTestnet = /*#__PURE__*/ defineChain({\n  id: 4201,\n  name: 'LUKSO Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'LUKSO Testnet',\n    symbol: 'LYXt',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.lukso.network'],\n      webSocket: ['wss://ws-rpc.testnet.lukso.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'LUKSO Testnet Explorer',\n      url: 'https://explorer.execution.testnet.lukso.network',\n      apiUrl: 'https://api.explorer.execution.testnet.lukso.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 605348,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mainnet = /*#__PURE__*/ defineChain({\n  id: 1,\n  name: 'Ethereum',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://cloudflare-eth.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://etherscan.io',\n      apiUrl: 'https://api.etherscan.io/api',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    ensUniversalResolver: {\n      address: '0xce01f8eee7E479C928F8919abD53E553a36CeF67',\n      blockCreated: 19_258_213,\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14_353_601,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mandala = /*#__PURE__*/ defineChain({\n  id: 595,\n  name: 'Mandala TC9',\n  network: 'mandala',\n  nativeCurrency: {\n    name: 'Mandala',\n    symbol: 'mACA',\n    decimals: 18,\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://eth-rpc-tc9.aca-staging.network'],\n      webSocket: ['wss://eth-rpc-tc9.aca-staging.network'],\n    },\n    default: {\n      http: ['https://eth-rpc-tc9.aca-staging.network'],\n      webSocket: ['wss://eth-rpc-tc9.aca-staging.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mandala Blockscout',\n      url: 'https://blockscout.mandala.aca-staging.network',\n      apiUrl: 'https://blockscout.mandala.aca-staging.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const manta = /*#__PURE__*/ defineChain({\n  id: 169,\n  name: 'Manta Pacific Mainnet',\n  network: 'manta',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://pacific-rpc.manta.network/http'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Manta Explorer',\n      url: 'https://pacific-explorer.manta.network',\n      apiUrl: 'https://pacific-explorer.manta.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 332890,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mantaSepoliaTestnet = /*#__PURE__*/ defineChain({\n  id: 3_441_006,\n  name: 'Manta Pacific Sepolia Testnet',\n  network: 'manta-sepolia',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://pacific-rpc.sepolia-testnet.manta.network/http'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Manta Sepolia Testnet Explorer',\n      url: 'https://pacific-explorer.sepolia-testnet.manta.network',\n      apiUrl: 'https://pacific-explorer.sepolia-testnet.manta.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca54918f7B525C8df894668846506767412b53E3',\n      blockCreated: 479584,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mantaTestnet = /*#__PURE__*/ defineChain({\n  id: 3_441_005,\n  name: 'Manta Pacific Testnet',\n  network: 'manta-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://manta-testnet.calderachain.xyz/http'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Manta Testnet Explorer',\n      url: 'https://pacific-explorer.testnet.manta.network',\n      apiUrl: 'https://pacific-explorer.testnet.manta.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x211B1643b95Fe76f11eD8880EE810ABD9A4cf56C',\n      blockCreated: 419915,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mantle = /*#__PURE__*/ defineChain({\n  id: 5000,\n  name: 'Mantle',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MNT',\n    symbol: 'MNT',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.mantle.xyz'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mantle Explorer',\n      url: 'https://mantlescan.xyz/',\n      apiUrl: 'https://api.mantlescan.xyz/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 304717,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mantleSepoliaTestnet = /*#__PURE__*/ defineChain({\n  id: 5003,\n  name: 'Mantle Sepolia Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MNT',\n    symbol: 'MNT',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.sepolia.mantle.xyz'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mantle Testnet Explorer',\n      url: 'https://explorer.sepolia.mantle.xyz/',\n      apiUrl: 'https://explorer.sepolia.mantle.xyz/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 4584012,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mantleTestnet = /*#__PURE__*/ defineChain({\n  id: 5001,\n  name: 'Mantle Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MNT',\n    symbol: 'MNT',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.testnet.mantle.xyz'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mantle Testnet Explorer',\n      url: 'https://explorer.testnet.mantle.xyz',\n      apiUrl: 'https://explorer.testnet.mantle.xyz/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 561333,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const merlin = /*#__PURE__*/ defineChain({\n  id: 4200,\n  name: 'Merlin',\n  nativeCurrency: {\n    name: 'BTC',\n    symbol: 'BTC',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.merlinchain.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'blockscout',\n      url: 'https://scan.merlinchain.io',\n      apiUrl: 'https://scan.merlinchain.io/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const metachain = /*#__PURE__*/ defineChain({\n  id: 571,\n  name: 'MetaChain Mainnet',\n  nativeCurrency: { name: 'Metatime Coin', symbol: 'MTC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.metatime.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'MetaExplorer',\n      url: 'https://explorer.metatime.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0000000000000000000000000000000000003001',\n      blockCreated: 0,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const metachainIstanbul = /*#__PURE__*/ defineChain({\n  id: 1_453,\n  name: 'MetaChain Istanbul',\n  nativeCurrency: { name: 'Metatime Coin', symbol: 'MTC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://istanbul-rpc.metachain.dev'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'MetaExplorer',\n      url: 'https://istanbul-explorer.metachain.dev',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0000000000000000000000000000000000003001',\n      blockCreated: 0,\n    },\n  },\n  testnet: true,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const metalL2 = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 1750,\n  name: 'Metal L2',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.metall2.com'],\n      webSocket: ['wss://rpc.metall2.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://explorer.metall2.com',\n      apiUrl: 'https://explorer.metall2.com/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x3B1F7aDa0Fcc26B13515af752Dd07fB1CAc11426',\n      },\n    },\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 0,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x3F37aBdE2C6b5B2ed6F8045787Df1ED1E3753956',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x6d0f65D59b55B0FEC5d2d15365154DcADC140BF3',\n      },\n    },\n  },\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const meter = /*#__PURE__*/ defineChain({\n  id: 82,\n  name: 'Meter',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MTR',\n    symbol: 'MTR',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.meter.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'MeterScan',\n      url: 'https://scan.meter.io',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const meterTestnet = /*#__PURE__*/ defineChain({\n  id: 83,\n  name: 'Meter Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MTR',\n    symbol: 'MTR',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpctest.meter.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'MeterTestnetScan',\n      url: 'https://scan-warringstakes.meter.io',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const metis = /*#__PURE__*/ defineChain({\n  id: 1_088,\n  name: 'Metis',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Metis',\n    symbol: 'METIS',\n  },\n  rpcUrls: {\n    default: { http: ['https://andromeda.metis.io/?owner=1088'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Metis Explorer',\n      url: 'https://explorer.metis.io',\n      apiUrl:\n        'https://api.routescan.io/v2/network/mainnet/evm/43114/etherscan/api',\n    },\n    blockscout: {\n      name: 'Andromeda Explorer',\n      url: 'https://andromeda-explorer.metis.io',\n      apiUrl: 'https://andromeda-explorer.metis.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 2338552,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const metisGoerli = /*#__PURE__*/ defineChain({\n  id: 599,\n  name: 'Metis Goerli',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Metis Goerli',\n    symbol: 'METIS',\n  },\n  rpcUrls: {\n    default: { http: ['https://goerli.gateway.metisdevops.link'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Metis Goerli Explorer',\n      url: 'https://goerli.explorer.metisdevops.link',\n      apiUrl: 'https://goerli.explorer.metisdevops.link/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1006207,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mev = /*#__PURE__*/ defineChain({\n  id: 7518,\n  name: 'MEVerse Chain Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MEVerse',\n    symbol: 'MEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.meversemainnet.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://www.meversescan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 86881340,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mevTestnet = /*#__PURE__*/ defineChain({\n  id: 4759,\n  name: 'MEVerse Chain Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MEVerse',\n    symbol: 'MEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.meversetestnet.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://testnet.meversescan.io/',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 64371115,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mintSepoliaTestnet = /*#__PURE__*/ defineChain({\n  id: 1686,\n  name: 'Mint Sepolia Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.mintchain.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Mintchain Testnet explorer',\n      url: 'https://testnet-explorer.mintchain.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const mode = /*#__PURE__*/ defineChain({\n  id: 34443,\n  name: 'Mode Mainnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.mode.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Modescan',\n      url: 'https://modescan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 2465882,\n    },\n  },\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const modeTestnet = /*#__PURE__*/ defineChain({\n  id: 919,\n  name: 'Mode Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.mode.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://sepolia.explorer.mode.network',\n      apiUrl: 'https://sepolia.explorer.mode.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xBAba8373113Fb7a68f195deF18732e01aF8eDfCF',\n      blockCreated: 3019007,\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const moonbaseAlpha = /*#__PURE__*/ defineChain({\n  id: 1287,\n  name: 'Moonbase Alpha',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'DEV',\n    symbol: 'DEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.api.moonbase.moonbeam.network'],\n      webSocket: ['wss://wss.api.moonbase.moonbeam.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Moonscan',\n      url: 'https://moonbase.moonscan.io',\n      apiUrl: 'https://moonbase.moonscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1850686,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const moonbeam = /*#__PURE__*/ defineChain({\n  id: 1284,\n  name: 'Moonbeam',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'GLMR',\n    symbol: 'GLMR',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://moonbeam.public.blastapi.io'],\n      webSocket: ['wss://moonbeam.public.blastapi.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Moonscan',\n      url: 'https://moonscan.io',\n      apiUrl: 'https://api-moonbeam.moonscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 609002,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const moonbeamDev = /*#__PURE__*/ defineChain({\n  id: 1281,\n  name: 'Moonbeam Development Node',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'DEV',\n    symbol: 'DEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['http://127.0.0.1:9944'],\n      webSocket: ['wss://127.0.0.1:9944'],\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const moonriver = /*#__PURE__*/ defineChain({\n  id: 1285,\n  name: 'Moonriver',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MOVR',\n    symbol: 'MOVR',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://moonriver.public.blastapi.io'],\n      webSocket: ['wss://moonriver.public.blastapi.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Moonscan',\n      url: 'https://moonriver.moonscan.io',\n      apiUrl: 'https://api-moonriver.moonscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1597904,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const morphSepolia = /*#__PURE__*/ defineChain({\n  id: 2710,\n  name: 'Morph Sepolia',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-testnet.morphl2.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Morph Testnet Explorer',\n      url: 'https://explorer-testnet.morphl2.io',\n      apiUrl: 'https://explorer-api-testnet.morphl2.io/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const nautilus = /*#__PURE__*/ defineChain({\n  id: 22222,\n  name: 'Nautilus Mainnet',\n  nativeCurrency: { name: 'ZBC', symbol: 'ZBC', decimals: 9 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.nautilus.nautchain.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'NautScan',\n      url: 'https://nautscan.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const neonDevnet = /*#__PURE__*/ defineChain({\n  id: 245_022_926,\n  name: 'Neon EVM DevNet',\n  nativeCurrency: { name: 'NEON', symbol: 'NEON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://devnet.neonevm.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Neonscan',\n      url: 'https://devnet.neonscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 205206112,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const neonMainnet = /*#__PURE__*/ defineChain({\n  id: 245_022_934,\n  network: 'neonMainnet',\n  name: 'Neon EVM MainNet',\n  nativeCurrency: { name: 'NEON', symbol: 'NEON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://neon-proxy-mainnet.solana.p2p.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Neonscan',\n      url: 'https://neonscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 206545524,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const nexi = /*#__PURE__*/ defineChain({\n  id: 4242,\n  name: 'Nexi',\n  nativeCurrency: { name: 'Nexi', symbol: 'NEXI', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.chain.nexi.technology'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'NexiScan',\n      url: 'https://www.nexiscan.com',\n      apiUrl: 'https://www.nexiscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0277A46Cc69A57eE3A6C8c158bA874832F718B8E',\n      blockCreated: 25770160,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const nexilix = /*#__PURE__*/ defineChain({\n  id: 240,\n  name: 'Nexilix Smart Chain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Nexilix',\n    symbol: 'NEXILIX',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpcurl.pos.nexilix.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'NexilixScan',\n      url: 'https://scan.nexilix.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x58381c8e2BF9d0C2C4259cA14BdA9Afe02831244',\n      blockCreated: 74448,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const oasys = /*#__PURE__*/ defineChain({\n  id: 248,\n  name: 'Oasys',\n  nativeCurrency: { name: 'Oasys', symbol: 'OAS', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.mainnet.oasys.games'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'OasysScan',\n      url: 'https://scan.oasys.games',\n      apiUrl: 'https://scan.oasys.games/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const oasisTestnet = /*#__PURE__*/ defineChain({\n  id: 4090,\n  network: 'oasis-testnet',\n  name: 'Oasis Testnet',\n  nativeCurrency: { name: 'Fasttoken', symbol: 'FTN', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc1.oasis.bahamutchain.com'] },\n    public: { http: ['https://rpc1.oasis.bahamutchain.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ftnscan',\n      url: 'https://oasis.ftnscan.com',\n      apiUrl: 'https://oasis.ftnscan.com/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const okc = /*#__PURE__*/ defineChain({\n  id: 66,\n  name: 'OKC',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'OKT',\n    symbol: 'OKT',\n  },\n  rpcUrls: {\n    default: { http: ['https://exchainrpc.okex.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'oklink',\n      url: 'https://www.oklink.com/okc',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 10364792,\n    },\n  },\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const optimism = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 10,\n  name: 'OP Mainnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.optimism.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Optimism Explorer',\n      url: 'https://optimistic.etherscan.io',\n      apiUrl: 'https://api-optimistic.etherscan.io/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xdfe97868233d1aa22e815a266982f2cf17685a27',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 4286263,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1',\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 5 // goerli\n\nexport const optimismGoerli = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 420,\n  name: 'Optimism Goerli',\n  nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://goerli.optimism.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli-optimism.etherscan.io',\n      apiUrl: 'https://goerli-optimism.etherscan.io/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 49461,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x636Af16bf2f682dD3109e60102b8E1A089FedAa8',\n      },\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const optimismSepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 11155420,\n  name: 'OP Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.optimism.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://optimism-sepolia.blockscout.com',\n      apiUrl: 'https://optimism-sepolia.blockscout.com/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    disputeGameFactory: {\n      [sourceId]: {\n        address: '0x05F9613aDB30026FFd634f38e5C4dFd30a197Fa1',\n      },\n    },\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1620204,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x16Fc5058F25648194471939df75CF27A2fdC48BC',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1',\n      },\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const opBNB = /*#__PURE__*/ defineChain({\n  id: 204,\n  name: 'opBNB',\n  nativeCurrency: {\n    name: 'BNB',\n    symbol: 'BNB',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://opbnb-mainnet-rpc.bnbchain.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'opbnbscan',\n      url: 'https://mainnet.opbnbscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 512881,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const opBNBTestnet = /*#__PURE__*/ defineChain({\n  id: 5611,\n  name: 'opBNB Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'tBNB',\n    symbol: 'tBNB',\n  },\n  rpcUrls: {\n    default: { http: ['https://opbnb-testnet-rpc.bnbchain.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'opbnbscan',\n      url: 'https://testnet.opbnbscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3705108,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const oortMainnetDev = /*#__PURE__*/ defineChain({\n  id: 9700,\n  name: 'OORT MainnetDev',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'OORT',\n    symbol: 'OORT',\n  },\n  rpcUrls: {\n    default: { http: ['https://dev-rpc.oortech.com'] },\n  },\n  blockExplorers: {\n    oort: {\n      name: 'OORT MainnetDev Explorer',\n      url: 'https://dev-scan.oortech.com',\n    },\n    default: {\n      name: 'OORT MainnetDev Explorer',\n      url: 'https://dev-scan.oortech.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const otimDevnet = /*#__PURE__*/ defineChain({\n  id: 41144114,\n  name: 'Otim Devnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['http://devnet.otim.xyz'],\n    },\n  },\n  contracts: {\n    batchInvoker: {\n      address: '0x5FbDB2315678afecb367f032d93F642f64180aa3',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const palm = /*#__PURE__*/ defineChain({\n  id: 11_297_108_109,\n  name: 'Palm',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'PALM',\n    symbol: 'PALM',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://palm-mainnet.public.blastapi.io'],\n      webSocket: ['wss://palm-mainnet.public.blastapi.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Chainlens',\n      url: 'https://palm.chainlens.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 15429248,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const palmTestnet = /*#__PURE__*/ defineChain({\n  id: 11_297_108_099,\n  name: 'Palm Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'PALM',\n    symbol: 'PALM',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://palm-mainnet.public.blastapi.io'],\n      webSocket: ['wss://palm-mainnet.public.blastapi.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Chainlens',\n      url: 'https://palm.chainlens.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 15429248,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const playfiAlbireo = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 1_612_127,\n  name: 'PlayFi Albireo Testnet',\n  network: 'albireo',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://albireo-rpc.playfi.ai'],\n      webSocket: ['wss://albireo-rpc-ws.playfi.ai/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PlayFi Albireo Explorer',\n      url: 'https://albireo-explorer.playfi.ai',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n  },\n  testnet: true,\n})\n","import { formatters } from '../../op-stack/formatters.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const pgn = /*#__PURE__*/ defineChain({\n  id: 424,\n  network: 'pgn',\n  name: 'PGN',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.publicgoods.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PGN Explorer',\n      url: 'https://explorer.publicgoods.network',\n      apiUrl: 'https://explorer.publicgoods.network/api',\n    },\n    blocksout: {\n      name: 'PGN Explorer',\n      url: 'https://explorer.publicgoods.network',\n      apiUrl: 'https://explorer.publicgoods.network/api',\n    },\n  },\n  contracts: {\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x9E6204F750cD866b299594e2aC9eA824E2e5f95c',\n      },\n    },\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3380209,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xb26Fd985c5959bBB382BAFdD0b879E149e48116c',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xD0204B9527C1bA7bD765Fa5CCD9355d38338272b',\n      },\n    },\n  },\n  formatters,\n  sourceId,\n})\n","import { formatters } from '../../op-stack/formatters.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const pgnTestnet = /*#__PURE__*/ defineChain({\n  id: 58008,\n  network: 'pgn-testnet',\n  name: 'PGN ',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.publicgoods.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PGN Testnet Explorer',\n      url: 'https://explorer.sepolia.publicgoods.network',\n      apiUrl: 'https://explorer.sepolia.publicgoods.network/api',\n    },\n    blocksout: {\n      name: 'PGN Testnet Explorer',\n      url: 'https://explorer.sepolia.publicgoods.network',\n      apiUrl: 'https://explorer.sepolia.publicgoods.network/api',\n    },\n  },\n  contracts: {\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xD5bAc3152ffC25318F848B3DD5dA6C85171BaEEe',\n      },\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xF04BdD5353Bb0EFF6CA60CfcC78594278eBfE179',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xFaE6abCAF30D23e233AC7faF747F2fC3a5a6Bfa3',\n      },\n    },\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3754925,\n    },\n  },\n  formatters,\n  sourceId,\n  testnet: true,\n})\n","// src/chains/definitions/phoenix.ts\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const phoenix = /*#__PURE__*/ defineChain({\n  id: 13381,\n  name: 'Phoenix Blockchain',\n  nativeCurrency: { name: 'Phoenix', symbol: 'PHX', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.phoenixplorer.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Phoenixplorer',\n      url: 'https://phoenixplorer.com',\n      apiUrl: 'https://phoenixplorer.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x498cF757a575cFF2c2Ed9f532f56Efa797f86442',\n      blockCreated: 5620192,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const plinga = /*#__PURE__*/ defineChain({\n  id: 242,\n  name: 'Plinga',\n  nativeCurrency: { name: 'Plinga', symbol: 'PLINGA', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpcurl.mainnet.plgchain.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Plgscan',\n      url: 'https://www.plgscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0989576160f2e7092908BB9479631b901060b6e4',\n      blockCreated: 204489,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const plumeTestnet = /*#__PURE__*/ defineChain({\n  id: 161_221_135,\n  name: 'Plume Testnet',\n  nativeCurrency: {\n    name: 'Plume Sepolia Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.plumenetwork.xyz/http'],\n      webSocket: ['wss://testnet-rpc.plumenetwork.xyz/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://testnet-explorer.plumenetwork.xyz',\n      apiUrl: 'https://testnet-explorer.plumenetwork.xyz/api',\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygon = /*#__PURE__*/ defineChain({\n  id: 137,\n  name: 'Polygon',\n  nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://polygon-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://polygonscan.com',\n      apiUrl: 'https://api.polygonscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 25770160,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygonAmoy = /*#__PURE__*/ defineChain({\n  id: 80_002,\n  name: 'Polygon Amoy',\n  nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-amoy.polygon.technology'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://amoy.polygonscan.com/',\n      apiUrl: 'https://api-amoy.polygonscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 3127388,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygonMumbai = /*#__PURE__*/ defineChain({\n  id: 80_001,\n  name: 'Polygon Mumbai',\n  nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.ankr.com/polygon_mumbai'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://mumbai.polygonscan.com',\n      apiUrl: 'https://api-testnet.polygonscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 25770160,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygonZkEvm = /*#__PURE__*/ defineChain({\n  id: 1101,\n  name: 'Polygon zkEVM',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://zkevm-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://zkevm.polygonscan.com',\n      apiUrl: 'https://api-zkevm.polygonscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 57746,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygonZkEvmCardona = /*#__PURE__*/ defineChain({\n  id: 2442,\n  name: 'Polygon zkEVM Cardona',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.cardona.zkevm-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://cardona-zkevm.polygonscan.com',\n      apiUrl: 'https://cardona-zkevm.polygonscan.com/api',\n    },\n  },\n  testnet: true,\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 114091,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygonZkEvmTestnet = /*#__PURE__*/ defineChain({\n  id: 1442,\n  name: 'Polygon zkEVM Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.public.zkevm-test.net'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://testnet-zkevm.polygonscan.com',\n      apiUrl: 'https://testnet-zkevm.polygonscan.com/api',\n    },\n  },\n  testnet: true,\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 525686,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const pulsechain = /*#__PURE__*/ defineChain({\n  id: 369,\n  name: 'PulseChain',\n  nativeCurrency: { name: 'Pulse', symbol: 'PLS', decimals: 18 },\n  testnet: false,\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.pulsechain.com'],\n      webSocket: ['wss://ws.pulsechain.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PulseScan',\n      url: 'https://scan.pulsechain.com',\n      apiUrl: 'https://api.scan.pulsechain.com/api',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14353601,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const pulsechainV4 = /*#__PURE__*/ defineChain({\n  id: 943,\n  name: 'PulseChain V4',\n  testnet: true,\n  nativeCurrency: { name: 'V4 Pulse', symbol: 'v4PLS', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.v4.testnet.pulsechain.com'],\n      webSocket: ['wss://ws.v4.testnet.pulsechain.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PulseScan',\n      url: 'https://scan.v4.testnet.pulsechain.com',\n      apiUrl: 'https://scan.v4.testnet.pulsechain.com/api',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14353601,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const qMainnet = /*#__PURE__*/ defineChain({\n  id: 35441,\n  name: 'Q Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Q',\n    symbol: 'Q',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.q.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Q Mainnet Explorer',\n      url: 'https://explorer.q.org',\n      apiUrl: 'https://explorer.q.org/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const qTestnet = /*#__PURE__*/ defineChain({\n  id: 35443,\n  name: 'Q Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Q',\n    symbol: 'Q',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.qtestnet.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Q Testnet Explorer',\n      url: 'https://explorer.qtestnet.org',\n      apiUrl: 'https://explorer.qtestnet.org/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const reyaNetwork = /*#__PURE__*/ defineChain({\n  id: 1729,\n  name: 'Reya Network',\n  nativeCurrency: { decimals: 18, name: 'Ether', symbol: 'ETH' },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.reya.network'],\n      webSocket: ['wss://ws.reya.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Reya Network Explorer',\n      url: 'https://explorer.reya.network',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const rollux = /*#__PURE__*/ defineChain({\n  id: 570,\n  name: 'Rollux Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.rollux.com'],\n      webSocket: ['wss://rpc.rollux.com/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RolluxExplorer',\n      url: 'https://explorer.rollux.com',\n      apiUrl: 'https://explorer.rollux.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 119222,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const rolluxTestnet = /*#__PURE__*/ defineChain({\n  id: 57000,\n  name: 'Rollux Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-tanenbaum.rollux.com/'],\n      webSocket: ['wss://rpc-tanenbaum.rollux.com/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RolluxTestnetExplorer',\n      url: 'https://rollux.tanenbaum.io',\n      apiUrl: 'https://rollux.tanenbaum.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1813675,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const ronin = /*#__PURE__*/ defineChain({\n  id: 2020,\n  name: 'Ronin',\n  nativeCurrency: { name: 'RON', symbol: 'RON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.roninchain.com/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ronin Explorer',\n      url: 'https://app.roninchain.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 26023535,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const rootstock = /*#__PURE__*/ defineChain({\n  id: 30,\n  name: 'Rootstock Mainnet',\n  network: 'rootstock',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Rootstock Bitcoin',\n    symbol: 'RBTC',\n  },\n  rpcUrls: {\n    default: { http: ['https://public-node.rsk.co'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RSK Explorer',\n      url: 'https://explorer.rsk.co',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 4249540,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const rootstockTestnet = /*#__PURE__*/ defineChain({\n  id: 31,\n  name: 'Rootstock Testnet',\n  network: 'rootstock',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Rootstock Bitcoin',\n    symbol: 'tRBTC',\n  },\n  rpcUrls: {\n    default: { http: ['https://public-node.testnet.rsk.co'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RSK Explorer',\n      url: 'https://explorer.testnet.rootstock.io',\n    },\n  },\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const rss3 = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 12_553,\n  name: 'RSS3 VSL Mainnet',\n  nativeCurrency: { name: 'RSS3', symbol: 'RSS3', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.rss3.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RSS3 VSL Mainnet Scan',\n      url: 'https://scan.rss3.io',\n      apiUrl: 'https://scan.rss3.io/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xE6f24d2C32B3109B18ed33cF08eFb490b1e09C10',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14193,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x6A12432491bbbE8d3babf75F759766774C778Db4',\n        blockCreated: 19387057,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x4cbab69108Aa72151EDa5A3c164eA86845f18438',\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const rss3Sepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 2_331,\n  name: 'RSS3 VSL Sepolia Testnet',\n  nativeCurrency: { name: 'RSS3', symbol: 'RSS3', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.rss3.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RSS3 VSL Sepolia Testnet Scan',\n      url: 'https://scan.testnet.rss3.io',\n      apiUrl: 'https://scan.testnet.rss3.io/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0xDb5c46C3Eaa6Ed6aE8b2379785DF7dd029C0dC81',\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 55697,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xcBD77E8E1E7F06B25baDe67142cdE82652Da7b57',\n        blockCreated: 5345035,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xdDD29bb63B0839FB1cE0eE439Ff027738595D07B',\n      },\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const saigon = /*#__PURE__*/ defineChain({\n  id: 2021,\n  name: 'Saigon Testnet',\n  nativeCurrency: { name: 'RON', symbol: 'RON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://saigon-testnet.roninchain.com/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Saigon Explorer',\n      url: 'https://saigon-app.roninchain.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 18736871,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const sapphire = /*#__PURE__*/ defineChain({\n  id: 23294,\n  name: 'Oasis Sapphire',\n  network: 'sapphire',\n  nativeCurrency: { name: 'Sapphire Rose', symbol: 'ROSE', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sapphire.oasis.io'],\n      webSocket: ['wss://sapphire.oasis.io/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Oasis Explorer',\n      url: 'https://explorer.oasis.io/mainnet/sapphire',\n    },\n    blockscout: {\n      name: 'Oasis Sapphire Explorer',\n      url: 'https://old-explorer.sapphire.oasis.io',\n      apiUrl: 'https://old-explorer.sapphire.oasis.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 734531,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const sapphireTestnet = /*#__PURE__*/ defineChain({\n  id: 23295,\n  name: 'Oasis Sapphire Testnet',\n  network: 'sapphire-testnet',\n  nativeCurrency: { name: 'Sapphire Test Rose', symbol: 'TEST', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.sapphire.oasis.dev'],\n      webSocket: ['wss://testnet.sapphire.oasis.dev/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Oasis Explorer',\n      url: 'https://explorer.oasis.io/testnet/sapphire',\n    },\n    blockscout: {\n      name: 'Oasis Sapphire Testnet Explorer',\n      url: 'https://testnet.old-explorer.sapphire.oasis.dev',\n      apiUrl: 'https://testnet.old-explorer.sapphire.oasis.dev/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const scroll = /*#__PURE__*/ defineChain({\n  id: 534_352,\n  name: 'Scroll',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.scroll.io'],\n      webSocket: ['wss://wss-rpc.scroll.io/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Scrollscan',\n      url: 'https://scrollscan.com',\n      apiUrl: 'https://api.scrollscan.com/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const scrollSepolia = /*#__PURE__*/ defineChain({\n  id: 534_351,\n  name: 'Scroll Sepolia',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia-rpc.scroll.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://sepolia-blockscout.scroll.io',\n      apiUrl: 'https://sepolia-blockscout.scroll.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 9473,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const scrollTestnet = /*#__PURE__*/ defineChain({\n  id: 534_353,\n  name: 'Scroll Testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://alpha-rpc.scroll.io/l2'],\n      webSocket: ['wss://alpha-rpc.scroll.io/l2/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.scroll.io',\n      apiUrl: 'https://blockscout.scroll.io/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const seiDevnet = /*#__PURE__*/ defineChain({\n  id: 713_715,\n  name: 'Sei Devnet',\n  nativeCurrency: { name: 'Sei', symbol: 'SEI', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://evm-rpc-arctic-1.sei-apis.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Seitrace',\n      url: 'https://seitrace.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const sepolia = /*#__PURE__*/ defineChain({\n  id: 11_155_111,\n  name: 'Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.sepolia.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://sepolia.etherscan.io',\n      apiUrl: 'https://api-sepolia.etherscan.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 751532,\n    },\n    ensRegistry: { address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e' },\n    ensUniversalResolver: {\n      address: '0xc8Af999e38273D658BE1b921b88A9Ddf005769cC',\n      blockCreated: 5_317_080,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const shimmer = /*#__PURE__*/ defineChain({\n  id: 148,\n  name: 'Shimmer',\n  network: 'shimmer',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Shimmer',\n    symbol: 'SMR',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://json-rpc.evm.shimmer.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Shimmer Network Explorer',\n      url: 'https://explorer.evm.shimmer.network',\n      apiUrl: 'https://explorer.evm.shimmer.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const shimmerTestnet = /*#__PURE__*/ defineChain({\n  id: 1073,\n  name: 'Shimmer Testnet',\n  network: 'shimmer-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Shimmer',\n    symbol: 'SMR',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://json-rpc.evm.testnet.shimmer.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Shimmer Network Explorer',\n      url: 'https://explorer.evm.testnet.shimmer.network',\n      apiUrl: 'https://explorer.evm.testnet.shimmer.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleBlockBrawlers = /*#__PURE__*/ defineChain({\n  id: 391_845_894,\n  name: 'SKALE | Block Brawlers',\n  nativeCurrency: { name: 'BRAWL', symbol: 'BRAWL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/frayed-decent-antares'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/frayed-decent-antares'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://frayed-decent-antares.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleCalypso = /*#__PURE__*/ defineChain({\n  id: 1_564_830_818,\n  name: 'SKALE | Calypso NFT Hub',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/honorable-steel-rasalhague'],\n      webSocket: [\n        'wss://mainnet.skalenodes.com/v1/ws/honorable-steel-rasalhague',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://honorable-steel-rasalhague.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3107626,\n    },\n  },\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleCalypsoTestnet = /*#__PURE__*/ defineChain({\n  id: 974_399_131,\n  name: 'SKALE Calypso Testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.skalenodes.com/v1/giant-half-dual-testnet'],\n      webSocket: ['wss://testnet.skalenodes.com/v1/ws/giant-half-dual-testnet'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://giant-half-dual-testnet.explorer.testnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 103_220,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleCryptoBlades = /*#__PURE__*/ defineChain({\n  id: 1_026_062_157,\n  name: 'SKALE | CryptoBlades',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/affectionate-immediate-pollux'],\n      webSocket: [\n        'wss://mainnet.skalenodes.com/v1/ws/affectionate-immediate-pollux',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://affectionate-immediate-pollux.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleCryptoColosseum = /*#__PURE__*/ defineChain({\n  id: 1_032_942_172,\n  name: 'SKALE | Crypto Colosseum',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/haunting-devoted-deneb'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/haunting-devoted-deneb'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://haunting-devoted-deneb.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleEuropa = /*#__PURE__*/ defineChain({\n  id: 2_046_399_126,\n  name: 'SKALE | Europa Liquidity Hub',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/elated-tan-skat'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/elated-tan-skat'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://elated-tan-skat.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3113495,\n    },\n  },\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleEuropaTestnet = /*#__PURE__*/ defineChain({\n  id: 1_444_673_419,\n  name: 'SKALE Europa Testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.skalenodes.com/v1/juicy-low-small-testnet'],\n      webSocket: ['wss://testnet.skalenodes.com/v1/ws/juicy-low-small-testnet'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://juicy-low-small-testnet.explorer.testnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 110_858,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleExorde = /*#__PURE__*/ defineChain({\n  id: 2_139_927_552,\n  name: 'SKALE | Exorde',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/light-vast-diphda'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/light-vast-diphda'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://light-vast-diphda.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleHumanProtocol = /*#__PURE__*/ defineChain({\n  id: 1_273_227_453,\n  name: 'SKALE | Human Protocol',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/wan-red-ain'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/wan-red-ain'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://wan-red-ain.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleNebula = /*#__PURE__*/ defineChain({\n  id: 1_482_601_649,\n  name: 'SKALE | Nebula Gaming Hub',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/green-giddy-denebola'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/green-giddy-denebola'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://green-giddy-denebola.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 2372986,\n    },\n  },\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleNebulaTestnet = /*#__PURE__*/ defineChain({\n  id: 37_084_624,\n  name: 'SKALE Nebula Testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.skalenodes.com/v1/lanky-ill-funny-testnet'],\n      webSocket: ['wss://testnet.skalenodes.com/v1/ws/lanky-ill-funny-testnet'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://lanky-ill-funny-testnet.explorer.testnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 105_141,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleRazor = /*#__PURE__*/ defineChain({\n  id: 278_611_351,\n  name: 'SKALE | Razor Network',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/turbulent-unique-scheat'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/turbulent-unique-scheat'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://turbulent-unique-scheat.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleTitan = /*#__PURE__*/ defineChain({\n  id: 1_350_216_234,\n  name: 'SKALE | Titan Community Hub',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/parallel-stormy-spica'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/parallel-stormy-spica'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://parallel-stormy-spica.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 2076458,\n    },\n  },\n})\n","import { defineChain } from '../../../utils/chain/defineChain.js'\n\nexport const skaleTitanTestnet = /*#__PURE__*/ defineChain({\n  id: 1_020_352_220,\n  name: 'SKALE Titan Hub',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.skalenodes.com/v1/aware-fake-trim-testnet'],\n      webSocket: ['wss://testnet.skalenodes.com/v1/ws/aware-fake-trim-testnet'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://aware-fake-trim-testnet.explorer.testnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 104_072,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const songbird = /*#__PURE__*/ defineChain({\n  id: 19,\n  name: 'Songbird Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'songbird',\n    symbol: 'SGB',\n  },\n  rpcUrls: {\n    default: { http: ['https://songbird-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Songbird Explorer',\n      url: 'https://songbird-explorer.flare.network',\n      apiUrl: 'https://songbird-explorer.flare.network/api',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const songbirdTestnet = /*#__PURE__*/ defineChain({\n  id: 16,\n  name: 'Coston',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'costonflare',\n    symbol: 'CFLR',\n  },\n  rpcUrls: {\n    default: { http: ['https://coston-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Coston Explorer',\n      url: 'https://coston-explorer.flare.network',\n      apiUrl: 'https://coston-explorer.flare.network/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const spicy = /*#__PURE__*/ defineChain({\n  id: 88_882,\n  name: 'Chiliz Spicy Testnet',\n  network: 'chiliz-spicy-Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CHZ',\n    symbol: 'CHZ',\n  },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://spicy-rpc.chiliz.com',\n        'https://chiliz-spicy-rpc.publicnode.com',\n      ],\n      webSocket: [\n        'wss://spicy-rpc-ws.chiliz.com',\n        'wss://chiliz-spicy-rpc.publicnode.com',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Chiliz Explorer',\n      url: 'http://spicy-explorer.chiliz.com',\n      apiUrl: 'http://spicy-explorer.chiliz.com/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const shardeumSphinx = /*#__PURE__*/ defineChain({\n  id: 8082,\n  name: 'Shardeum Sphinx',\n  nativeCurrency: { name: 'SHARDEUM', symbol: 'SHM', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sphinx.shardeum.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Shardeum Explorer',\n      url: 'https://explorer-sphinx.shardeum.org',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const shibarium = /*#__PURE__*/ defineChain({\n  id: 109,\n  name: 'Shibarium',\n  network: 'shibarium',\n  nativeCurrency: { name: 'Bone', symbol: 'BONE', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.shibrpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://shibariumscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x864Bf681ADD6052395188A89101A1B37d3B4C961',\n      blockCreated: 265900,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const stratis = /*#__PURE__*/ defineChain({\n  id: 105105,\n  name: 'Stratis Mainnet',\n  network: 'stratis',\n  nativeCurrency: {\n    name: 'Stratis',\n    symbol: 'STRAX',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.stratisevm.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Stratis Explorer',\n      url: 'https://explorer.stratisevm.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const syscoin = /*#__PURE__*/ defineChain({\n  id: 57,\n  name: 'Syscoin Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.syscoin.org'],\n      webSocket: ['wss://rpc.syscoin.org/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SyscoinExplorer',\n      url: 'https://explorer.syscoin.org',\n      apiUrl: 'https://explorer.syscoin.org/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 287139,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const syscoinTestnet = /*#__PURE__*/ defineChain({\n  id: 5700,\n  name: 'Syscoin Tanenbaum Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.tanenbaum.io'],\n      webSocket: ['wss://rpc.tanenbaum.io/wss'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'SyscoinTestnetExplorer',\n      url: 'https://tanenbaum.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 271288,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taraxa = /*#__PURE__*/ defineChain({\n  id: 841,\n  name: 'Taraxa Mainnet',\n  nativeCurrency: { name: 'Tara', symbol: 'TARA', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.mainnet.taraxa.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Taraxa Explorer',\n      url: 'https://explorer.mainnet.taraxa.io',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taikoHekla = /*#__PURE__*/ defineChain({\n  id: 167_009,\n  name: 'Taiko Hekla L2',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.hekla.taiko.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Taikoscan',\n      url: 'https://hekla.taikoscan.network',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taikoJolnir = /*#__PURE__*/ defineChain({\n  id: 167007,\n  name: 'Taiko Jolnir (Alpha-5 Testnet)',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.jolnir.taiko.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'blockscout',\n      url: 'https://explorer.jolnir.taiko.xyz',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 732706,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taikoKatla = /*#__PURE__*/ defineChain({\n  id: 167008,\n  name: 'Taiko Katla (Alpha-6 Testnet)',\n  network: 'tko-katla',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.katla.taiko.xyz'],\n    },\n    public: {\n      http: ['https://rpc.katla.taiko.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'blockscout',\n      url: 'https://explorer.katla.taiko.xyz',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taikoTestnetSepolia = /*#__PURE__*/ defineChain({\n  id: 167005,\n  name: 'Taiko (Alpha-3 Testnet)',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.test.taiko.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'blockscout',\n      url: 'https://explorer.test.taiko.xyz',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const taraxaTestnet = /*#__PURE__*/ defineChain({\n  id: 842,\n  name: 'Taraxa Testnet',\n  nativeCurrency: { name: 'Tara', symbol: 'TARA', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.taraxa.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Taraxa Explorer',\n      url: 'https://explorer.testnet.taraxa.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const telcoinTestnet = /*#__PURE__*/ defineChain({\n  id: 2017,\n  name: 'Telcoin Adiri Testnet',\n  nativeCurrency: { name: 'Telcoin', symbol: 'TEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.telcoin.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'telscan',\n      url: 'https://telscan.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const telos = /*#__PURE__*/ defineChain({\n  id: 40,\n  name: 'Telos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Telos',\n    symbol: 'TLOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://mainnet.telos.net/evm'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Teloscan',\n      url: 'https://www.teloscan.io/',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 246530709,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const telosTestnet = /*#__PURE__*/ defineChain({\n  id: 41,\n  name: 'Telos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Telos',\n    symbol: 'TLOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://testnet.telos.net/evm'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Teloscan (testnet)',\n      url: 'https://testnet.teloscan.io/',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const tenet = /*#__PURE__*/ defineChain({\n  id: 1559,\n  name: 'Tenet',\n  network: 'tenet-mainnet',\n  nativeCurrency: {\n    name: 'TENET',\n    symbol: 'TENET',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.tenet.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'TenetScan Mainnet',\n      url: 'https://tenetscan.io',\n      apiUrl: 'https://tenetscan.io/api',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const thaiChain = /*#__PURE__*/ defineChain({\n  id: 7,\n  name: 'ThaiChain',\n  nativeCurrency: { name: 'TCH', symbol: 'TCH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['hhttps://rpc.thaichain.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://exp.thaichain.org',\n      apiUrl: 'https://exp.thaichain.org/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0DaD6130e832c21719C5CE3bae93454E16A84826',\n      blockCreated: 4806386,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const thunderTestnet = /*#__PURE__*/ defineChain({\n  id: 997,\n  name: '5ireChain Thunder Testnet',\n  nativeCurrency: { name: '5ire Token', symbol: '5IRE', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-testnet.5ire.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: '5ireChain Explorer',\n      url: 'https://explorer.5ire.network',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const vechain = /*#__PURE__*/ defineChain({\n  id: 100009,\n  name: 'Vechain',\n  nativeCurrency: { name: 'VeChain', symbol: 'VET', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.vechain.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Vechain Explorer',\n      url: 'https://explore.vechain.org',\n    },\n    vechainStats: {\n      name: 'Vechain Stats',\n      url: 'https://vechainstats.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const wanchain = /*#__PURE__*/ defineChain({\n  id: 888,\n  name: 'Wanchain',\n  nativeCurrency: { name: 'WANCHAIN', symbol: 'WAN', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://gwan-ssl.wandevs.org:56891',\n        'https://gwan2-ssl.wandevs.org',\n      ],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'WanScan',\n      url: 'https://wanscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcDF6A1566e78EB4594c86Fe73Fcdc82429e97fbB',\n      blockCreated: 25312390,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const wanchainTestnet = /*#__PURE__*/ defineChain({\n  id: 999,\n  name: 'Wanchain Testnet',\n  nativeCurrency: { name: 'WANCHAIN', symbol: 'WANt', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://gwan-ssl.wandevs.org:46891'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'WanScanTest',\n      url: 'https://wanscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x11c89bF4496c39FB80535Ffb4c92715839CC5324',\n      blockCreated: 24743448,\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const wemix = /*#__PURE__*/ defineChain({\n  id: 1111,\n  name: 'WEMIX',\n  network: 'wemix-mainnet',\n  nativeCurrency: { name: 'WEMIX', symbol: 'WEMIX', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://api.wemix.com'] },\n    public: { http: ['https://api.wemix.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'wemixExplorer',\n      url: 'https://explorer.wemix.com',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const wemixTestnet = /*#__PURE__*/ defineChain({\n  id: 1112,\n  name: 'WEMIX Testnet',\n  network: 'wemix-testnet',\n  nativeCurrency: { name: 'WEMIX', symbol: 'tWEMIX', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://api.test.wemix.com'] },\n    public: { http: ['https://api.test.wemix.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'wemixExplorer',\n      url: 'https://testnet.wemixscan.com',\n      apiUrl: 'https://testnet.wemixscan.com/api',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const xLayerTestnet = /*#__PURE__*/ defineChain({\n  id: 195,\n  name: 'X1 Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'OKB',\n    symbol: 'OKB',\n  },\n  rpcUrls: {\n    default: { http: ['https://x1testrpc.okx.com'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'OKLink',\n      url: 'https://www.oklink.com/x1-test',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 624344,\n    },\n  },\n  testnet: true,\n})\n\nexport { xLayerTestnet as x1Testnet }\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const xLayer = /*#__PURE__*/ defineChain({\n  id: 196,\n  name: 'X Layer Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'OKB',\n    symbol: 'OKB',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.xlayer.tech'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'OKLink',\n      url: 'https://www.oklink.com/xlayer',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const xdc = /*#__PURE__*/ defineChain({\n  id: 50,\n  name: 'XinFin Network',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'XDC',\n    symbol: 'XDC',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.xinfin.network'] },\n  },\n  blockExplorers: {\n    xinfin: {\n      name: 'XinFin',\n      url: 'https://explorer.xinfin.network',\n    },\n    default: {\n      name: 'Blocksscan',\n      url: 'https://xdc.blocksscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 71542788,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const xdcTestnet = /*#__PURE__*/ defineChain({\n  id: 51,\n  name: 'Apothem Network',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'TXDC',\n    symbol: 'TXDC',\n  },\n  rpcUrls: {\n    default: { http: ['https://erpc.apothem.network'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blocksscan',\n      url: 'https://apothem.blocksscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 59765389,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const yooldoVerse = /*#__PURE__*/ defineChain({\n  id: 50_005,\n  name: 'Yooldo Verse',\n  nativeCurrency: { name: 'OAS', symbol: 'OAS', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.yooldo-verse.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Yooldo Verse Explorer',\n      url: 'https://explorer.yooldo-verse.xyz',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const yooldoVerseTestnet = /*#__PURE__*/ defineChain({\n  id: 50_006,\n  name: 'Yooldo Verse Testnet',\n  nativeCurrency: { name: 'OAS', symbol: 'OAS', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.yooldo-verse.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Yooldo Verse Testnet Explorer',\n      url: 'https://explorer.testnet.yooldo-verse.xyz',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zetachain = /*#__PURE__*/ defineChain({\n  id: 7000,\n  name: 'ZetaChain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Zeta',\n    symbol: 'ZETA',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://zetachain-evm.blockpi.network/v1/rpc/public'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'ZetaScan',\n      url: 'https://explorer.zetachain.com',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zetachainAthensTestnet = /*#__PURE__*/ defineChain({\n  id: 7001,\n  name: 'ZetaChain Athens Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Zeta',\n    symbol: 'aZETA',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://zetachain-athens-evm.blockpi.network/v1/rpc/public'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'ZetaScan',\n      url: 'https://athens.explorer.zetachain.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zhejiang = /*#__PURE__*/ defineChain({\n  id: 1_337_803,\n  name: 'Zhejiang',\n  nativeCurrency: { name: 'Zhejiang Ether', symbol: 'ZhejETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.zhejiang.ethpandaops.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Beaconchain',\n      url: 'https://zhejiang.beaconcha.in',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zilliqa = /*#__PURE__*/ defineChain({\n  id: 32769,\n  name: 'Zilliqa',\n  network: 'zilliqa',\n  nativeCurrency: { name: 'Zilliqa', symbol: 'ZIL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.zilliqa.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ethernal',\n      url: 'https://evmx.zilliqa.com',\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zilliqaTestnet = /*#__PURE__*/ defineChain({\n  id: 33101,\n  name: 'Zilliqa Testnet',\n  network: 'zilliqa-testnet',\n  nativeCurrency: { name: 'Zilliqa', symbol: 'ZIL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://dev-api.zilliqa.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Ethernal',\n      url: 'https://evmx.testnet.zilliqa.com',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zkFair = /*#__PURE__*/ defineChain({\n  id: 42766,\n  name: 'ZKFair Mainnet',\n  network: 'zkfair-mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'USD Coin',\n    symbol: 'USDC',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.zkfair.io'],\n    },\n    public: {\n      http: ['https://rpc.zkfair.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zkFair Explorer',\n      url: 'https://scan.zkfair.io',\n      apiUrl: 'https://scan.zkfair.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 6090959,\n    },\n  },\n  testnet: false,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const zkFairTestnet = /*#__PURE__*/ defineChain({\n  id: 43851,\n  name: 'ZKFair Testnet',\n  network: 'zkfair-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'USD Coin',\n    symbol: 'USDC',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.zkfair.io'],\n    },\n    public: {\n      http: ['https://testnet-rpc.zkfair.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zkFair Explorer',\n      url: 'https://testnet-scan.zkfair.io',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const zkSync = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 324,\n  name: 'zkSync Era',\n  network: 'zksync-era',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.era.zksync.io'],\n      webSocket: ['wss://mainnet.era.zksync.io/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://era.zksync.network/',\n      apiUrl: 'https://api-era.zksync.network/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const zkSyncInMemoryNode = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 260,\n  name: 'zkSync InMemory Node',\n  network: 'zksync-in-memory-node',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['http://localhost:8011'],\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const zkSyncLocalNode = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 270,\n  name: 'zkSync CLI Local Node',\n  network: 'zksync-cli-local-node',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['http://localhost:3050'],\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const zkSyncSepoliaTestnet = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 300,\n  name: 'zkSync Sepolia Testnet',\n  network: 'zksync-sepolia-testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.era.zksync.dev'],\n      webSocket: ['wss://sepolia.era.zksync.dev/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zkExplorer',\n      url: 'https://sepolia.explorer.zksync.io/',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n  },\n  testnet: true,\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\n/** @deprecated Use `zkSyncSepoliaTestnet` */\nexport const zkSyncTestnet = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 280,\n  name: 'zkSync Era Testnet',\n  network: 'zksync-era-testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.era.zksync.dev'],\n      webSocket: ['wss://testnet.era.zksync.dev/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zkExplorer',\n      url: 'https://goerli.explorer.zksync.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n  },\n  testnet: true,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 1 // mainnet\n\nexport const zora = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 7777777,\n  name: 'Zora',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.zora.energy'],\n      webSocket: ['wss://rpc.zora.energy'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://explorer.zora.energy',\n      apiUrl: 'https://explorer.zora.energy/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x9E6204F750cD866b299594e2aC9eA824E2e5f95c',\n      },\n    },\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 5882,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x1a0ad011913A150f69f6A19DF447A0CfD9551054',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x3e2Ea9B92B7E48A52296fD261dc26fd995284631',\n      },\n    },\n  },\n  sourceId,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const zoraSepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 999999999,\n  name: 'Zora Sepolia',\n  network: 'zora-sepolia',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Zora Sepolia',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.rpc.zora.energy'],\n      webSocket: ['wss://sepolia.rpc.zora.energy'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Zora Sepolia Explorer',\n      url: 'https://sepolia.explorer.zora.energy/',\n      apiUrl: 'https://sepolia.explorer.zora.energy/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x2615B481Bd3E5A1C0C7Ca3Da1bdc663E8615Ade9',\n      },\n    },\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 83160,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xeffE2C6cA9Ab797D418f0D91eA60807713f3536f',\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0x5376f1D543dcbB5BD416c56C189e4cB7399fCcCB',\n      },\n    },\n  },\n  sourceId,\n  testnet: true,\n})\n","import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 5 // goerli\n\nexport const zoraTestnet = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 999,\n  name: 'Zora Goerli Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Zora Goerli',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.rpc.zora.energy'],\n      webSocket: ['wss://testnet.rpc.zora.energy'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://testnet.explorer.zora.energy',\n      apiUrl: 'https://testnet.explorer.zora.energy/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 189123,\n    },\n    portal: {\n      [sourceId]: {\n        address: '0xDb9F51790365e7dc196e7D072728df39Be958ACe',\n      },\n    },\n  },\n  sourceId,\n  testnet: true,\n})\n","import type { Chain, ChainFormatters } from '../../types/chain.js'\nimport type { Assign, Prettify } from '../../types/utils.js'\n\nexport function defineChain<\n  formatters extends ChainFormatters,\n  const chain extends Chain<formatters>,\n>(chain: chain): Prettify<Assign<Chain<undefined>, chain>> {\n  return {\n    formatters: undefined,\n    fees: undefined,\n    serializers: undefined,\n    ...chain,\n  } as Assign<Chain<undefined>, chain>\n}\n"],"names":["acala","defineChain","id","name","network","nativeCurrency","symbol","decimals","rpcUrls","public","http","webSocket","default","blockExplorers","url","apiUrl","testnet","defineFormatter","type","format","_ref","exclude","overrides","args","formatted","key","transactionType","formatTransaction","transaction","transaction_","blockHash","blockNumber","BigInt","chainId","hexToNumber","undefined","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","transactionIndex","Number","typeHex","value","v","yParity","accessList","defineTransaction","formatBlock","block","transactions","map","baseFeePerGas","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","hash","logsBloom","number","size","timestamp","totalDifficulty","defineBlock","formatLog","log","eventName","arguments","length","logIndex","transactionHash","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","contractAddress","cumulativeGasUsed","effectiveGasPrice","logs","status","blobGasPrice","defineTransactionReceipt","formatters","isSystemTx","mint","hexToBigInt","sourceHash","stateRoot","l1GasPrice","l1GasUsed","l1Fee","l1FeeScalar","InvalidAddressError","BaseError","constructor","address","super","metaMessages","Object","defineProperty","LruMap","Map","this","maxSize","set","delete","keys","next","n","isSafeInteger","Error","bytes","b","Uint8Array","_len","lengths","Array","_key","includes","exists","instance","checkFinished","destroyed","finished","output","out","min","outputLen","U32_MASK64","_32n","fromBig","h","l","split","lst","le","Ah","Uint32Array","Al","i","rotlSH","s","rotlSL","rotlBH","rotlBL","u8a","a","createView","arr","DataView","buffer","byteOffset","byteLength","rotr","word","shift","toBytes","data","str","TextEncoder","encode","utf8ToBytes","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","blockLen","create","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","push","t","j","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","pos","posOut","state","state32","Math","floor","keccak","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","fill","keccakP","len","take","finish","writeInto","bufferOut","subarray","xofInto","xof","digestInto","destroy","gen","keccak_256","checksumAddressCache","checksumAddress","address_","has","get","hexAddress","toLowerCase","substring","to_","isHex","strict","toHex","keccak256","stringToBytes","toUpperCase","result","join","addressRegex","isAddressCache","isAddress","options","test","concatHex","values","reduce","acc","replace","NegativeOffsetError","offset","PositionOutOfBoundsError","_ref2","position","RecursiveReadLimitExceededError","_ref3","count","limit","staticCursor","dataView","ArrayBuffer","positionReadCount","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","incrementPosition","inspectByte","position_","inspectBytes","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","toRlp","encodable","getEncodable","bytesToHex","isArray","list","bodyLength","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","hexToBytes","sizeOfBytesLength","getEncodableBytes","formatGwei","wei","unit","formatUnits","gweiUnits","prettyPrint","entries","filter","Boolean","maxLength","max","padEnd","InvalidLegacyVError","_ref4","InvalidSerializableTransactionError","_ref5","InvalidStorageKeySizeError","_ref9","storageKey","blobsToCommitments","parameters","kzg","blobs","commitments","blob","from","blobToKzgCommitment","blobsToProofs","proofs","commitment","computeBlobKzgProof","SHA2","padOffset","isLE","view","process","roundClean","setBigUint64","_u32_max","wh","wl","oview","outLen","res","slice","Maj","c","SHA256_K","IV","SHA256_W","SHA256","A","C","D","E","F","G","H","W15","W2","s0","s1","T1","T2","Chi","sha256","noble_sha256","commitmentToVersionedHash","version","versionedHash","fieldElementsPerBlob","bytesPerBlob","bytesPerFieldElement","maxBytesPerTransaction","BlobSizeTooLargeError","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobSidecars","size_","active","toBlobs","sidecars","proof","InvalidChainIdError","ExecutionRevertedError","cause","message","reason","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","start","end","value_","assertStartOffset","assertEndOffset","sliceHex","sliceBytes","SliceOffsetOutOfBoundsError","assertTransactionEIP1559","serializeAccessList","serializedAccessList","storageKeys","serializeTransaction","signature","blobVersionedHashes","getTransactionType","serializedTransaction","toYParitySignatureArray","serializeTransactionEIP1559","assertTransactionEIP2930","serializeTransactionEIP2930","assertTransactionEIP4844","hashes","commitmentsToVersionedHashes","serializeTransactionEIP4844","assertTransactionLegacy","r","serializeTransactionLegacy","trim","serializers","isDeposit","assertTransactionDeposit","serializeTransactionDeposit","serializeTransaction_","chainConfig","contracts","gasPriceOracle","l1Block","l2CrossDomainMessenger","l2Erc721Bridge","l2StandardBridge","l2ToL1MessagePasser","sourceId","ancient8","l2OutputOracle","portal","blockCreated","l1StandardBridge","ancient8Sepolia","anvil","apexTestnet","multicall3","arbitrum","arbitrumGoerli","arbitrumNova","astar","astarZkEVM","astarZkyoto","arbitrumSepolia","areonNetwork","areonNetworkTestnet","aurora","auroraTestnet","auroria","avalanche","avalancheFuji","bahamut","base","baseGoerli","baseSepolia","beam","beamTestnet","bearNetworkChainMainnet","bearNetworkChainTestnet","berachainTestnet","bevmMainnet","bitTorrent","bitTorrentTestnet","blast","blastSepolia","bob","boba","bronos","bronosTestnet","bsc","bscTestnet","bscGreenfield","btr","btrTestnet","bxn","bxnTestnet","canto","fees","estimateFeesPerGas","async","params","request","feeCurrency","Promise","all","estimateFeePerGasInFeeCurrency","client","estimateMaxPriorityFeePerGasInFeeCurrency","fee","method","feesPerGas","rpcTransactionType","legacy","eip2930","eip1559","eip4844","formatTransactionRequest","rpcRequest","numberToHex","defineTransactionRequest","isEmpty","isPresent","isCIP64","isEIP1559","MAX_MAX_FEE_PER_GAS","assertTransactionCIP64","serializeTransactionCIP64","gatewayFee","gatewayFeeRecipient","randomness","transactionRequest","celo","celoAlfajores","chiliz","classic","confluxESpace","confluxESpaceTestnet","coreDao","cronos","cronosTestnet","crossbell","cyber","cyberTestnet","darwinia","defichainEvm","defichainEvmTestnet","degen","dfk","dodochainTestnet","dogechain","dreyerxMainnet","edgeless","edgelessTestnet","edgeware","edgewareTestnet","eon","eos","eosTestnet","etherlinkTestnet","evmos","evmosTestnet","ekta","ektaTestnet","fantom","fantomSonicTestnet","fantomTestnet","fibo","filecoin","filecoinCalibration","filecoinHyperspace","flare","flareTestnet","flowPreviewnet","flowMainnet","flowTestnet","foundry","fraxtal","fraxtalTestnet","funkiSepolia","fuse","fuseSparknet","iotex","iotexTestnet","jbc","jbcTestnet","karura","gobi","goerli","ensRegistry","ensUniversalResolver","gnosis","gnosisChiado","hardhat","harmonyOne","haqqMainnet","haqqTestedge2","hedera","hederaTestnet","hederaPreviewnet","holesky","immutableZkEvm","immutableZkEvmTestnet","inEVM","kakarotSepolia","kava","kavaTestnet","kcc","klaytn","klaytnBaobab","kroma","kromaSepolia","l3x","l3xTestnet","lightlinkPegasus","lightlinkPhoenix","linea","lineaGoerli","lineaSepolia","lineaTestnet","gasPerPubdataDefault","maxBytecodeSize","maxUint16","l1BatchNumber","l1BatchTimestamp","l1BatchTxIndex","transactionLogIndex","logType","l2ToL1Logs","l2ToL1Log","shardId","isService","sender","gasPerPubdata","paymaster","paymasterInput","factoryDeps","customSignature","eip712Meta","paymasterParams","dep","InvalidEip712TransactionError","isEIP712Transaction","assertEip712Transaction","serializeTransactionEIP712","BytecodeLengthExceedsMaxSizeError","givenLength","BytecodeLengthInWordsMustBeOddError","givenLengthInWords","BytecodeLengthMustBeDivisibleBy32Error","custom","getEip712Domain","txType","gasPerPubdataByteLimit","bytecode","bytecodeBytes","hashStr","bytecodeLengthInWords","bytecodeLength","bytecodeLengthPadded","pad","codeHashVersion","hashBytecode","transactionToMessage","domain","types","Transaction","primaryType","lisk","liskSepolia","localhost","lukso","luksoTestnet","mainnet","mandala","manta","mantaSepoliaTestnet","mantaTestnet","mantle","mantleSepoliaTestnet","mantleTestnet","merlin","metachain","metachainIstanbul","metalL2","meter","meterTestnet","metis","blockscout","metisGoerli","mev","mevTestnet","mintSepoliaTestnet","mode","modeTestnet","moonbaseAlpha","moonbeam","moonbeamDev","moonriver","morphSepolia","nautilus","neonDevnet","neonMainnet","nexi","nexilix","oasys","oasisTestnet","okc","optimism","optimismGoerli","optimismSepolia","disputeGameFactory","opBNB","opBNBTestnet","oortMainnetDev","oort","otimDevnet","batchInvoker","palm","palmTestnet","playfiAlbireo","pgn","blocksout","pgnTestnet","phoenix","plinga","plumeTestnet","polygon","polygonAmoy","polygonMumbai","polygonZkEvm","polygonZkEvmCardona","polygonZkEvmTestnet","pulsechain","pulsechainV4","qMainnet","qTestnet","reyaNetwork","rollux","rolluxTestnet","ronin","rootstock","rootstockTestnet","rss3","rss3Sepolia","saigon","sapphire","sapphireTestnet","scroll","scrollSepolia","scrollTestnet","seiDevnet","sepolia","shimmer","shimmerTestnet","skaleBlockBrawlers","skaleCalypso","skaleCalypsoTestnet","skaleCryptoBlades","skaleCryptoColosseum","skaleEuropa","skaleEuropaTestnet","skaleExorde","skaleHumanProtocol","skaleNebula","skaleNebulaTestnet","skaleRazor","skaleTitan","skaleTitanTestnet","songbird","songbirdTestnet","spicy","shardeumSphinx","shibarium","stratis","syscoin","syscoinTestnet","taraxa","taikoHekla","taikoJolnir","taikoKatla","taikoTestnetSepolia","taraxaTestnet","telcoinTestnet","telos","telosTestnet","tenet","thaiChain","thunderTestnet","vechain","vechainStats","wanchain","wanchainTestnet","wemix","wemixTestnet","xLayerTestnet","xLayer","xdc","xinfin","xdcTestnet","yooldoVerse","yooldoVerseTestnet","zetachain","zetachainAthensTestnet","zhejiang","zilliqa","zilliqaTestnet","zkFair","zkFairTestnet","zkSync","zkSyncInMemoryNode","zkSyncLocalNode","zkSyncSepoliaTestnet","zkSyncTestnet","zora","zoraSepolia","zoraTestnet","chain"],"sourceRoot":""}