{"version":3,"file":"static/js/2853.136108c2.chunk.js","mappings":"oKAkBM,SAAUA,EAAYC,GAMc,IAHxC,OACAC,EAAM,GACNC,GACwCF,EAIxC,OAAOC,EAAOE,MAAMC,GAAUA,EAAMF,KAAOA,GAI7C,C,iBC7BM,SAAUG,EAGdD,GACA,MAAO,CACLE,gBAAYC,EACZC,UAAMD,EACNE,iBAAaF,KACVH,EAEP,C","sources":["../node_modules/@web3-onboard/common/node_modules/viem/utils/chain/extractChain.ts","../node_modules/@web3-onboard/common/node_modules/viem/utils/chain/defineChain.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain, ExtractChain } from '../../types/chain.js'\n\nexport type ExtractChainParameters<\n  chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n> = {\n  chains: chains\n  id: chainId | chains[number]['id']\n}\n\nexport type ExtractChainReturnType<\n  chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n> = ExtractChain<chains, chainId>\n\nexport type ExtractChainErrorType = ErrorType\n\nexport function extractChain<\n  const chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n>({\n  chains,\n  id,\n}: ExtractChainParameters<chains, chainId>): ExtractChainReturnType<\n  chains,\n  chainId\n> {\n  return chains.find((chain) => chain.id === id) as ExtractChainReturnType<\n    chains,\n    chainId\n  >\n}\n","import type { Chain, ChainFormatters } from '../../types/chain.js'\nimport type { Assign, Prettify } from '../../types/utils.js'\n\nexport function defineChain<\n  formatters extends ChainFormatters,\n  const chain extends Chain<formatters>,\n>(chain: chain): Prettify<Assign<Chain<undefined>, chain>> {\n  return {\n    formatters: undefined,\n    fees: undefined,\n    serializers: undefined,\n    ...chain,\n  } as Assign<Chain<undefined>, chain>\n}\n"],"names":["extractChain","_ref","chains","id","find","chain","defineChain","formatters","undefined","fees","serializers"],"sourceRoot":""}